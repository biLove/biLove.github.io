[{"title":"Python NumPy 使用","url":"http://lilyalove.com/2017/09/23/python-numpy-tutorial/","content":"<h2 id=\"基础部分\"><a href=\"#基础部分\" class=\"headerlink\" title=\"基础部分\"></a>基础部分</h2><p>NumPy 的主要对象是齐次多维数组。在NumPy中，维（dimensions）被称为坐标轴（axes）。其中 axes的数量是 rank。<br>例如，一维数组 [1,2,2] 的 rank = 1，axes 的长度为3<br>二维数组 [[1,0,1],[0,1,2]] 的 rank =2，第一个 axes的长度为2，第二个axes的长度为3</p>\n<h3 id=\"ndarray\"><a href=\"#ndarray\" class=\"headerlink\" title=\"ndarray\"></a>ndarray</h3><p>NumPy 的数组类就叫做 ndarray。</p>\n<p>例如：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a = np.arange(<span class=\"number\">15</span>).reshape(<span class=\"number\">3</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a</span><br><span class=\"line\">array([[ <span class=\"number\">0</span>,  <span class=\"number\">1</span>,  <span class=\"number\">2</span>,  <span class=\"number\">3</span>,  <span class=\"number\">4</span>],</span><br><span class=\"line\">       [ <span class=\"number\">5</span>,  <span class=\"number\">6</span>,  <span class=\"number\">7</span>,  <span class=\"number\">8</span>,  <span class=\"number\">9</span>],</span><br><span class=\"line\">       [<span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>, <span class=\"number\">13</span>, <span class=\"number\">14</span>]])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>type(a)</span><br><span class=\"line\">&lt;type <span class=\"string\">'numpy.ndarray'</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>如上述例子，我们创建了一个长度分别为 3，5 的二维数组，用 type 查看这个数组类型的时候，可以看到，显示的类型是 ‘numpy.ndarray’，也就是说创建了一个 ndarray 类。</p>\n<p>这个类有很多方法可以来检查数组的情况。<br>ndim：查看数组的rank值，也就是有几维<br>shape：可以看到每一维的长度<br>size：可以看到整个数组元素的个数<br>dtype：可以看到数组中元素的数据类型<br>itemsize：可以看到每个元素的字节数</p>\n<h3 id=\"创建数组\"><a href=\"#创建数组\" class=\"headerlink\" title=\"创建数组\"></a>创建数组</h3><p>有很多创建数组的方法。</p>\n<p>例如，你可以对一组固定的python的list，或者tuple，使用array函数来创建数组。数组的类型会自动读取序列中元素的类型。</p>\n<p>例如：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a = np.array([<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>])</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a</span><br><span class=\"line\">array([<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>])</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a.dtype</span><br><span class=\"line\">dtype(<span class=\"string\">'int64'</span>)</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>b = np.array([<span class=\"number\">1.2</span>, <span class=\"number\">3.5</span>, <span class=\"number\">5.1</span>])</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>b.dtype</span><br><span class=\"line\">dtype(<span class=\"string\">'float64'</span>)</span><br></pre></td></tr></table></figure>\n<p>也可以在创建数组时指定元素类型，只需要给 array 函数增加一个 dtype 的参数。</p>\n<p>创建数组的时候，一个常见的错误是，将数组例如[1,2,3]作为多个参数传入 array 函数，例如，np.array(1,2,3)，这样是错误的。<br>我们应该将数组作为一个完整的list传入 array 函数，例如：np.array([1,2,3])。</p>\n<h3 id=\"占位符\"><a href=\"#占位符\" class=\"headerlink\" title=\"占位符\"></a>占位符</h3><p>很多时候，我们最初并不知道每个元素具体的值，只知道array的size，我们可以用一些方法来创建数组，并设置一些占位符，这样可以减少增长array的必要性。</p>\n<p>常用函数如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>np.zeros( (<span class=\"number\">3</span>,<span class=\"number\">4</span>) )</span><br><span class=\"line\">array([[ <span class=\"number\">0.</span>,  <span class=\"number\">0.</span>,  <span class=\"number\">0.</span>,  <span class=\"number\">0.</span>],</span><br><span class=\"line\">       [ <span class=\"number\">0.</span>,  <span class=\"number\">0.</span>,  <span class=\"number\">0.</span>,  <span class=\"number\">0.</span>],</span><br><span class=\"line\">       [ <span class=\"number\">0.</span>,  <span class=\"number\">0.</span>,  <span class=\"number\">0.</span>,  <span class=\"number\">0.</span>]])</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>np.ones( (<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>), dtype=np.int16 )                <span class=\"comment\"># dtype can also be specified</span></span><br><span class=\"line\">array([[[ <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">        [ <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">        [ <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>]],</span><br><span class=\"line\">       [[ <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">        [ <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>],</span><br><span class=\"line\">        [ <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>]]], dtype=int16)</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>np.empty( (<span class=\"number\">2</span>,<span class=\"number\">3</span>) )                                 <span class=\"comment\"># uninitialized, output may vary</span></span><br><span class=\"line\">array([[  <span class=\"number\">3.73603959e-262</span>,   <span class=\"number\">6.02658058e-154</span>,   <span class=\"number\">6.55490914e-260</span>],</span><br><span class=\"line\">       [  <span class=\"number\">5.30498948e-313</span>,   <span class=\"number\">3.14673309e-307</span>,   <span class=\"number\">1.00000000e+000</span>]])</span><br></pre></td></tr></table></figure>\n<p>见上述例子，可以用zeros方法设置元素值为0的数组，用ones将元素值设置为1，用empty来随机设置元素值，如果不设置 dtype的值，则默认为 float64。</p>\n<p>还可以用 arange 函数来设置数组，输入三个参数，np.arange(min，max，step）</p>\n<p>有时候，当我们没办法设置具体的 step 值（一般来说，浮点数有有限的精度，我们有时没办法设置）时，我们可以用 linspace 来设置数组。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> pi</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>np.linspace( <span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">9</span> )                 <span class=\"comment\"># 9 numbers from 0 to 2</span></span><br><span class=\"line\">array([ <span class=\"number\">0.</span>  ,  <span class=\"number\">0.25</span>,  <span class=\"number\">0.5</span> ,  <span class=\"number\">0.75</span>,  <span class=\"number\">1.</span>  ,  <span class=\"number\">1.25</span>,  <span class=\"number\">1.5</span> ,  <span class=\"number\">1.75</span>,  <span class=\"number\">2.</span>  ])</span><br></pre></td></tr></table></figure>\n<h3 id=\"打印数组\"><a href=\"#打印数组\" class=\"headerlink\" title=\"打印数组\"></a>打印数组</h3><ol>\n<li>一维数组，打印是从左至右</li>\n<li>多维数组，打印方式如下：<ol>\n<li>最后一维的打印是从左至右；</li>\n<li>从第二维到最后一维之间的打印是从上到下；</li>\n<li>剩下的第一维打印也是从上到下，但是每个slice之间会空一行</li>\n</ol>\n</li>\n<li>如果数据太多不好打印，那么NumPy会打印边界值，其他的用省略号代替。 </li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>c = np.arange(<span class=\"number\">24</span>).reshape(<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>) </span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>c</span><br><span class=\"line\"></span><br><span class=\"line\">output：</span><br><span class=\"line\"></span><br><span class=\"line\">array([[[ <span class=\"number\">0</span>,  <span class=\"number\">1</span>,  <span class=\"number\">2</span>,  <span class=\"number\">3</span>],</span><br><span class=\"line\">        [ <span class=\"number\">4</span>,  <span class=\"number\">5</span>,  <span class=\"number\">6</span>,  <span class=\"number\">7</span>],</span><br><span class=\"line\">        [ <span class=\"number\">8</span>,  <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>]],</span><br><span class=\"line\"></span><br><span class=\"line\">       [[<span class=\"number\">12</span>, <span class=\"number\">13</span>, <span class=\"number\">14</span>, <span class=\"number\">15</span>],</span><br><span class=\"line\">        [<span class=\"number\">16</span>, <span class=\"number\">17</span>, <span class=\"number\">18</span>, <span class=\"number\">19</span>],</span><br><span class=\"line\">        [<span class=\"number\">20</span>, <span class=\"number\">21</span>, <span class=\"number\">22</span>, <span class=\"number\">23</span>]]])</span><br><span class=\"line\">``` </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### 基本操作</span></span><br><span class=\"line\"></span><br><span class=\"line\">NumPy 可以直接对同样 shape的数组进行 +、-、*、/ 、**（平方）的操作</span><br><span class=\"line\"></span><br><span class=\"line\">当使用 * 时，指的是两个矩阵之间对应元素相乘，也就是 elementwise，当使用dot时，指的是两个矩阵之间进行点乘，这是对矩阵进行操作，需要第一个矩阵的列数与第二矩阵的行数相同。</span><br><span class=\"line\"></span><br><span class=\"line\">```python</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>A = np.array( [[<span class=\"number\">1</span>,<span class=\"number\">1</span>],</span><br><span class=\"line\"><span class=\"prompt\">... </span>            [<span class=\"number\">0</span>,<span class=\"number\">1</span>]] )</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>B = np.array( [[<span class=\"number\">2</span>,<span class=\"number\">0</span>],</span><br><span class=\"line\"><span class=\"prompt\">... </span>            [<span class=\"number\">3</span>,<span class=\"number\">4</span>]] )</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>A*B                         <span class=\"comment\"># elementwise product</span></span><br><span class=\"line\">array([[<span class=\"number\">2</span>, <span class=\"number\">0</span>],</span><br><span class=\"line\">       [<span class=\"number\">0</span>, <span class=\"number\">4</span>]])</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>A.dot(B)                    <span class=\"comment\"># matrix product</span></span><br><span class=\"line\">array([[<span class=\"number\">5</span>, <span class=\"number\">4</span>],</span><br><span class=\"line\">       [<span class=\"number\">3</span>, <span class=\"number\">4</span>]])</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>np.dot(A, B)                <span class=\"comment\"># another matrix product</span></span><br><span class=\"line\">array([[<span class=\"number\">5</span>, <span class=\"number\">4</span>],</span><br><span class=\"line\">       [<span class=\"number\">3</span>, <span class=\"number\">4</span>]])</span><br></pre></td></tr></table></figure>\n<p>其中，+=, *= 操作符可以用来修改已经存在的数组，而不是用来创造新的数组。</p>\n<p>注：常见的错误，不能将更精确的数据类型的数组使用 += 赋值给更少精确度的数组。<br>例如，a是int型，b是float型，是不能用 a+=b 对 a 进行赋值的。</p>\n<p>如果两个不同类型的数组相加，结果会向上转型为更加精确的类型。</p>\n<h4 id=\"可以使用统计函数\"><a href=\"#可以使用统计函数\" class=\"headerlink\" title=\"可以使用统计函数\"></a>可以使用统计函数</h4><p>udarray类中有sum、min、max等统计函数，默认可以对所有元素进行操作。<br>也可以对axis进行指定，计算指定的axis的统计数据。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>b = np.arange(<span class=\"number\">12</span>).reshape(<span class=\"number\">3</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\">array([[ <span class=\"number\">0</span>,  <span class=\"number\">1</span>,  <span class=\"number\">2</span>,  <span class=\"number\">3</span>],</span><br><span class=\"line\">       [ <span class=\"number\">4</span>,  <span class=\"number\">5</span>,  <span class=\"number\">6</span>,  <span class=\"number\">7</span>],</span><br><span class=\"line\">       [ <span class=\"number\">8</span>,  <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>]])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>b.sum(axis=<span class=\"number\">0</span>)  </span><br><span class=\"line\">array([<span class=\"number\">12</span>, <span class=\"number\">15</span>, <span class=\"number\">18</span>, <span class=\"number\">21</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>b.cumsum(axis=<span class=\"number\">1</span>)    <span class=\"comment\"># cumulative sum along each row</span></span><br><span class=\"line\">array([[ <span class=\"number\">0</span>,  <span class=\"number\">1</span>,  <span class=\"number\">3</span>,  <span class=\"number\">6</span>],</span><br><span class=\"line\">       [ <span class=\"number\">4</span>,  <span class=\"number\">9</span>, <span class=\"number\">15</span>, <span class=\"number\">22</span>],</span><br><span class=\"line\">       [ <span class=\"number\">8</span>, <span class=\"number\">17</span>, <span class=\"number\">27</span>, <span class=\"number\">38</span>]])</span><br></pre></td></tr></table></figure>\n<h4 id=\"通用函数\"><a href=\"#通用函数\" class=\"headerlink\" title=\"通用函数\"></a>通用函数</h4><p>“universal functions”(ufunc). 通用函数<br>例如：sin, cos, exp，对数组里面的每个元素进行操作</p>\n<h4 id=\"索引、切片、迭代-Indexing-Slicing-and-Iterating\"><a href=\"#索引、切片、迭代-Indexing-Slicing-and-Iterating\" class=\"headerlink\" title=\"索引、切片、迭代 Indexing, Slicing and Iterating\"></a>索引、切片、迭代 Indexing, Slicing and Iterating</h4><p>可以对一维数组进行以上操作</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a = np.arange(<span class=\"number\">10</span>)**<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a</span><br><span class=\"line\">array([  <span class=\"number\">0</span>,   <span class=\"number\">1</span>,   <span class=\"number\">8</span>,  <span class=\"number\">27</span>,  <span class=\"number\">64</span>, <span class=\"number\">125</span>, <span class=\"number\">216</span>, <span class=\"number\">343</span>, <span class=\"number\">512</span>, <span class=\"number\">729</span>])</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a[<span class=\"number\">2</span>]</span><br><span class=\"line\"><span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a[<span class=\"number\">2</span>:<span class=\"number\">5</span>]</span><br><span class=\"line\">array([ <span class=\"number\">8</span>, <span class=\"number\">27</span>, <span class=\"number\">64</span>])</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a[:<span class=\"number\">6</span>:<span class=\"number\">2</span>] = -<span class=\"number\">1000</span>    <span class=\"comment\"># equivalent to a[0:6:2] = -1000; from start to position 6, exclusive, set every 2nd element to -1000</span></span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a</span><br><span class=\"line\">array([-<span class=\"number\">1000</span>,     <span class=\"number\">1</span>, -<span class=\"number\">1000</span>,    <span class=\"number\">27</span>, -<span class=\"number\">1000</span>,   <span class=\"number\">125</span>,   <span class=\"number\">216</span>,   <span class=\"number\">343</span>,   <span class=\"number\">512</span>,   <span class=\"number\">729</span>])</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a[ : :-<span class=\"number\">1</span>]   <span class=\"comment\"># reversed a</span></span><br><span class=\"line\">array([  <span class=\"number\">729</span>,   <span class=\"number\">512</span>,   <span class=\"number\">343</span>,   <span class=\"number\">216</span>,   <span class=\"number\">125</span>, -<span class=\"number\">1000</span>,    <span class=\"number\">27</span>, -<span class=\"number\">1000</span>,     <span class=\"number\">1</span>, -<span class=\"number\">1000</span>])</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> a:</span><br><span class=\"line\"><span class=\"prompt\">... </span>    print(i**(<span class=\"number\">1</span>/<span class=\"number\">3.</span>))</span><br></pre></td></tr></table></figure>\n<p>对于多维数组来说，每个axes有一个index</p>\n<p>比如，b是一个5*4的二维数组，那么 b[2,:]就可以筛选出b数组中，axes=0中index=2，且axes=1中index=all的值来。</p>\n<p>NumPy中，可以使用“…”来代替值很多的情况。</p>\n<p>例如，一个rank=5的数组x，</p>\n<ol>\n<li>x[1, 2, …] = x[1, 2, :, :, :]</li>\n<li>x[…, 3] = x[:, :, :, :, 3]</li>\n<li>x[4, …, 5, :] = x[4, :, :, 5, :]</li>\n</ol>\n<h4 id=\"对多维数组使用迭代\"><a href=\"#对多维数组使用迭代\" class=\"headerlink\" title=\"对多维数组使用迭代\"></a>对多维数组使用迭代</h4><p>对多维数组使用迭代时，是对第一维进行迭代。</p>\n<p>如果想对所有的元素进行迭代，可以使用 flat 属性，这是一个作用在数组所有元素的属性。</p>\n<h3 id=\"形状操作\"><a href=\"#形状操作\" class=\"headerlink\" title=\"形状操作\"></a>形状操作</h3><h4 id=\"改变数组的形状\"><a href=\"#改变数组的形状\" class=\"headerlink\" title=\"改变数组的形状\"></a>改变数组的形状</h4><p>也就是说，改变数组形状，不改变长度。</p>\n<p>使用下列3个命令，可以改变数组的形状，不过没有改变最初的数组。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a = np.floor(<span class=\"number\">10</span>*np.random.random((<span class=\"number\">3</span>,<span class=\"number\">4</span>)))</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a</span><br><span class=\"line\">array([[ <span class=\"number\">2.</span>,  <span class=\"number\">8.</span>,  <span class=\"number\">0.</span>,  <span class=\"number\">6.</span>],</span><br><span class=\"line\">       [ <span class=\"number\">4.</span>,  <span class=\"number\">5.</span>,  <span class=\"number\">1.</span>,  <span class=\"number\">1.</span>],</span><br><span class=\"line\">       [ <span class=\"number\">8.</span>,  <span class=\"number\">9.</span>,  <span class=\"number\">3.</span>,  <span class=\"number\">6.</span>]])</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a.shape</span><br><span class=\"line\">(<span class=\"number\">3</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a.ravel()  <span class=\"comment\"># returns the array, flattened</span></span><br><span class=\"line\">array([ <span class=\"number\">2.</span>,  <span class=\"number\">8.</span>,  <span class=\"number\">0.</span>,  <span class=\"number\">6.</span>,  <span class=\"number\">4.</span>,  <span class=\"number\">5.</span>,  <span class=\"number\">1.</span>,  <span class=\"number\">1.</span>,  <span class=\"number\">8.</span>,  <span class=\"number\">9.</span>,  <span class=\"number\">3.</span>,  <span class=\"number\">6.</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a.reshape(<span class=\"number\">6</span>,<span class=\"number\">2</span>)  <span class=\"comment\"># returns the array with a modified shape</span></span><br><span class=\"line\">array([[ <span class=\"number\">2.</span>,  <span class=\"number\">8.</span>],</span><br><span class=\"line\">       [ <span class=\"number\">0.</span>,  <span class=\"number\">6.</span>],</span><br><span class=\"line\">       [ <span class=\"number\">4.</span>,  <span class=\"number\">5.</span>],</span><br><span class=\"line\">       [ <span class=\"number\">1.</span>,  <span class=\"number\">1.</span>],</span><br><span class=\"line\">       [ <span class=\"number\">8.</span>,  <span class=\"number\">9.</span>],</span><br><span class=\"line\">       [ <span class=\"number\">3.</span>,  <span class=\"number\">6.</span>]])</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a.T  <span class=\"comment\"># returns the array, transposed</span></span><br><span class=\"line\">array([[ <span class=\"number\">2.</span>,  <span class=\"number\">4.</span>,  <span class=\"number\">8.</span>],</span><br><span class=\"line\">       [ <span class=\"number\">8.</span>,  <span class=\"number\">5.</span>,  <span class=\"number\">9.</span>],</span><br><span class=\"line\">       [ <span class=\"number\">0.</span>,  <span class=\"number\">1.</span>,  <span class=\"number\">3.</span>],</span><br><span class=\"line\">       [ <span class=\"number\">6.</span>,  <span class=\"number\">1.</span>,  <span class=\"number\">6.</span>]])</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a.T.shape</span><br><span class=\"line\">(<span class=\"number\">4</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a.shape</span><br><span class=\"line\">(<span class=\"number\">3</span>, <span class=\"number\">4</span>)</span><br></pre></td></tr></table></figure>\n<p>如上述例子所示，reshape函数可以让返回的结果重新调整数组形状，但是却不能改变原数组<br>但如果我们使用 resize函数，就可以改变原数组的形状，例如</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a.resize((<span class=\"number\">2</span>,<span class=\"number\">6</span>))</span><br><span class=\"line\"><span class=\"prompt\">&gt;&gt;&gt; </span>a</span><br><span class=\"line\">array([[ <span class=\"number\">2.</span>,  <span class=\"number\">8.</span>,  <span class=\"number\">0.</span>,  <span class=\"number\">6.</span>,  <span class=\"number\">4.</span>,  <span class=\"number\">5.</span>],</span><br><span class=\"line\">       [ <span class=\"number\">1.</span>,  <span class=\"number\">1.</span>,  <span class=\"number\">8.</span>,  <span class=\"number\">9.</span>,  <span class=\"number\">3.</span>,  <span class=\"number\">6.</span>]])</span><br></pre></td></tr></table></figure>\n<h3 id=\"将不同的数组叠加\"><a href=\"#将不同的数组叠加\" class=\"headerlink\" title=\"将不同的数组叠加\"></a>将不同的数组叠加</h3><p>使用 vstack((a,b)) 函数，可以把数组 a, b 纵向叠加到一起，使用 hstack((a,b)) 函数，可以把数组横向叠加到一起。hstack函数作用和column_stack 函数一致。</p>\n<p>还有很多其他方法用到时再使用。</p>\n<p><a href=\"https://docs.scipy.org/doc/numpy-dev/user/quickstart.html\" target=\"_blank\" rel=\"external\">https://docs.scipy.org/doc/numpy-dev/user/quickstart.html</a></p>\n"},{"title":"JavaScript变量命名规则","url":"http://lilyalove.com/2017/09/19/JavaScript-rule-for-name-variables/","content":"<h1 id=\"JavaScript变量命名规则\"><a href=\"#JavaScript变量命名规则\" class=\"headerlink\" title=\"JavaScript变量命名规则\"></a>JavaScript变量命名规则</h1><ol>\n<li>不能以数字开头</li>\n<li>不能在变量名中包含数字或逻辑操作</li>\n<li>不能在变量中包含任何标点符号，除了下划线</li>\n<li>不能在变量名中包含空格</li>\n<li>不能用JavaScript的关键词来命名变量</li>\n<li>JavaScript区分大小写</li>\n</ol>\n"},{"title":"Python类中self的作用","url":"http://lilyalove.com/2017/09/19/python_class_self/","content":"<p>举例如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">setName</span><span class=\"params\">(self,name)</span>:</span></span><br><span class=\"line\">\t\tself.name = name</span><br><span class=\"line\">\t\tself.inputname = name</span><br><span class=\"line\">\t\tinput1 = name</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getName</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> self.name</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">greet</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">print</span> <span class=\"string\">\"Hello world! I'm %s .\"</span> % self.name</span><br></pre></td></tr></table></figure>\n<p>其中，self是对于对象自身的引用。</p>\n<h4 id=\"我们对比-self-inputname-和-input1-这两个变量，都赋值为-name，那么这两个值有什么区别呢？\"><a href=\"#我们对比-self-inputname-和-input1-这两个变量，都赋值为-name，那么这两个值有什么区别呢？\" class=\"headerlink\" title=\"我们对比 self.inputname 和 input1 这两个变量，都赋值为 name，那么这两个值有什么区别呢？\"></a>我们对比 <code>self.inputname</code> 和 <code>input1</code> 这两个变量，都赋值为 <code>name</code>，那么这两个值有什么区别呢？</h4><p>在这里，self 改变了变量的作用域。<br>不加 self 的变量是局部变量，作用域是当前函数；加了 self 的变量是实例变量，作用域是当前实例。</p>\n<p>也就是，我们在外部将类 Person 实例化时，可以调用它的 inputname 变量，因为这个变量是实例变量，作用域当前实例，却调用不了 input1 变量，因为这个变量是局部变量，只能在setName 函数中使用。</p>\n<h4 id=\"self-是什么对象？\"><a href=\"#self-是什么对象？\" class=\"headerlink\" title=\"self 是什么对象？\"></a>self 是什么对象？</h4><p>我们这里假设 lil = Person()，其中 lil 是 Person 类的一个实例。<br>当我们调用 lil 的 setName 和 getName 或 greet 方法时，lil 自动将自己作为第一个参数，传入函数中，因此形象的称为 self<br>所以 self 是一个实例，指的实例本身。</p>\n<p>通过使用 self，我们可以在其成员方法中访问他们要对其特性进行操作的对象本身了。</p>\n<h4 id=\"换句话说\"><a href=\"#换句话说\" class=\"headerlink\" title=\"换句话说\"></a>换句话说</h4><p>这样说很拗口，换句话说，我们通过使用 self，将 attribute 的作用域从当前函数 变成 当前实例，这样这个 attribute 就可以在整个实例中都有效。这样便于我们在不同的成员方法中对这个 attribute 进行操作。例如上面例子中的 self.name ，因为使用了 self，我们在 getName 和 greet 中均可以使用该实例变量。</p>\n<p>而且，对于实例 lil，我们也可以直接调用 name 这个attribute，也就是 <code>lil.name</code>，是有效的。但是 <code>lil.input1</code> 是无效的，会提示“类里面没有这个属性”。</p>\n"},{"title":"SQL 面试题(二)","url":"http://lilyalove.com/2017/08/16/SQL-interview2/","content":"<h1 id=\"SQL-面试题（二）\"><a href=\"#SQL-面试题（二）\" class=\"headerlink\" title=\"SQL 面试题（二）\"></a>SQL 面试题（二）</h1><h2 id=\"找出baseball表中，name属性中包含“To”字符的元组\"><a href=\"#找出baseball表中，name属性中包含“To”字符的元组\" class=\"headerlink\" title=\"找出baseball表中，name属性中包含“To”字符的元组\"></a>找出baseball表中，name属性中包含“To”字符的元组</h2><p>属性表示列名称，元组表示一条数据。本题可以用 like 操作符，以及 SQL 的通配符。</p>\n<p>like 操作符用于在 WHERE 子句中搜索列中的指定模式。<br>like 一般搭配通配符使用<br>not like 可以选取与指定模式不同的其他值</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> baseball <span class=\"keyword\">WHERE</span> <span class=\"keyword\">name</span> <span class=\"keyword\">LIKE</span> <span class=\"string\">'TO%'</span>;</span></span><br><span class=\"line\">// % 是 SQL 的通配符，用来指代1个或多个字符</span><br></pre></td></tr></table></figure>\n<p>常见的通配符有</p>\n<table>\n<thead>\n<tr>\n<th>通配符</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>%</td>\n<td>表示一个或多个字符</td>\n</tr>\n<tr>\n<td>-</td>\n<td>表示一个字符</td>\n</tr>\n<tr>\n<td>[charlist]</td>\n<td>字符列中的任何单一字符</td>\n</tr>\n<tr>\n<td>[^ charlist] 或者 [!charlist]</td>\n<td>不包含在字符列中的任何单一字符</td>\n</tr>\n</tbody>\n</table>\n<p>例如，要找出baseball表中，name属性中以“T”或者“N”或者“J”字符开头的所有元组</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">select * from baseball&#10;where name like &#39;[TNJ]%&#39;;&#10;&#10;// &#22914;&#26524;&#19981;&#25903;&#25345;&#23383;&#31526;&#21015;&#30340;&#34920;&#36798;&#27861;&#65292;&#21487;&#20197;&#20351;&#29992;or &#25110;&#32773; and&#20851;&#38190;&#35789;&#10;SELECT * FROM baseball&#10;WHERE name LIKE &#39;N%&#39; or name like &#39;T%&#39; or name like &#39;J%&#39;;&#10;&#10;//  [!charlist] &#21487;&#20197;&#29992;not like&#26469;&#28385;&#36275;</span><br></pre></td></tr></table></figure>\n<h2 id=\"增加一个列\"><a href=\"#增加一个列\" class=\"headerlink\" title=\"增加一个列\"></a>增加一个列</h2><p>使用 alter 操作符</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> <span class=\"keyword\">test</span> <span class=\"keyword\">add</span> <span class=\"keyword\">column</span> Email <span class=\"built_in\">text</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> table_name <span class=\"keyword\">add</span> <span class=\"keyword\">column</span> column_name datatype;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"更新表中的数据\"><a href=\"#更新表中的数据\" class=\"headerlink\" title=\"更新表中的数据\"></a>更新表中的数据</h2><p>为 test 表中，Id=1的元组添加 Email值，值为“10177157@qq.com”<br>使用 update 操作符</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">UPDATE</span> <span class=\"keyword\">test</span> <span class=\"keyword\">SET</span> Emali = <span class=\"string\">'10177157@qq.com'</span> <span class=\"keyword\">WHERE</span> <span class=\"keyword\">Id</span> =<span class=\"number\">2</span>;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"什么是视图\"><a href=\"#什么是视图\" class=\"headerlink\" title=\"什么是视图\"></a>什么是视图</h2><p>view 是从真实的基础表 table 里面，根据用户的需要，做成的虚表。</p>\n<p>view有以下几个特点：</p>\n<ol>\n<li>view 中的数据可以来自于多个表；</li>\n<li>view 的数据会随着真实表格的数据变化而变化；</li>\n<li>view 生成以后，只能使用select查询，不能用update、delete、insert来修改虚拟表的内容</li>\n<li>view 不同的view可以针对不同需求的人，展示不同的数据，而不必向他们展示所有的数据，可以保持数据的保密性；</li>\n<li>view 不能进行修改；</li>\n<li>view 还可以用来简化查询。如果我们经常使用某些数据，就可以把他们做成一个view，每次直接使用 <figure class=\"highlight\"><figcaption><span>* from view_name``` 就可以了，比每次重新写SQL语句要简单的多；</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">&#10;&#35821;&#27861;&#10;&#10;```sql&#10;CREATE VIEW view_name AS&#10;SELECT column_name(s) FROM table_name&#10;WHERE condition; &#10;// &#24314;&#31435;&#19968;&#20010;&#35270;&#22270; view&#65292;&#20174;&#30495;&#23454;&#34920; table_name &#20013;&#36873;&#20986;&#28385;&#36275; condition &#26465;&#20214;&#30340;&#25968;&#25454;&#10;&#10;DROP VIEW view_name;&#10;// &#21024;&#38500;&#35270;&#22270; view_name</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"什么是索引\"><a href=\"#什么是索引\" class=\"headerlink\" title=\"什么是索引\"></a>什么是索引</h2><p>索引是一种特殊的查询表，可以用来更快更搞笑的查询数据。索引类似于图书馆的图书目录，可以方便用户更快的找到想要的数据。</p>\n<p>不过，由于索引表会跟着数据的更新而更新，所以，如果数据表经常更新数据或插入、删除数据，则不适合建立索引，不然会导致更新表的数据变慢很多。</p>\n<p>另外，索引不适合以下情况：</p>\n<ol>\n<li>小的数据表不适合使用索引；</li>\n<li>频繁更改数据的数据表；</li>\n<li>取值单一的数据表中的列不适合作为索引；</li>\n<li>列中包含大数或者Null值，不适合作为索引。</li>\n</ol>\n<p>语法</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">INDEX</span> index_name</span><br><span class=\"line\"><span class=\"keyword\">ON</span> table_name;</span></span><br><span class=\"line\">// 为table_name 建立索引</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">INDEX</span> index_name</span><br><span class=\"line\"><span class=\"keyword\">ON</span> table_name(column_name);</span></span><br><span class=\"line\">// 为 table_name表中的 column_name列建立索引</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">INDEX</span> index_name</span><br><span class=\"line\"><span class=\"keyword\">ON</span> table_name(column_name1,column_name2,……);</span></span><br><span class=\"line\">// 聚簇索引，即为多个列建立索引</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">UNIQUE</span> <span class=\"keyword\">INDEX</span> index_name</span><br><span class=\"line\"><span class=\"keyword\">on</span> table_name (column_name);</span></span><br><span class=\"line\">// 唯一索引</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">INDEX</span> index_name;</span></span><br><span class=\"line\">// 删除索引</span><br></pre></td></tr></table></figure>\n<h2 id=\"SQL中的函数\"><a href=\"#SQL中的函数\" class=\"headerlink\" title=\"SQL中的函数\"></a>SQL中的函数</h2><p>SQL 拥有很多可用于计数和计算的内建函数。</p>\n<h3 id=\"函数的语法\"><a href=\"#函数的语法\" class=\"headerlink\" title=\"函数的语法\"></a>函数的语法</h3><p>内建 SQL 函数的语法是：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">function</span>(列) <span class=\"keyword\">FROM</span> 表</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"函数基本类型\"><a href=\"#函数基本类型\" class=\"headerlink\" title=\"函数基本类型\"></a>函数基本类型</h3><p>主要分为两类，</p>\n<ol>\n<li>合计函数（Aggregate function），面对一系列的值，返回一个单一的值</li>\n<li>Scalar函数：面对一个输入值，返回基于输入值的单一值</li>\n</ol>\n<h4 id=\"合计函数-Aggregate-function\"><a href=\"#合计函数-Aggregate-function\" class=\"headerlink\" title=\"合计函数 Aggregate function\"></a>合计函数 Aggregate function</h4><p>合计函数常与group by操作符一起使用，用来分组计数<br>也可以和 order by 一起使用，来对数据进行排序</p>\n<ol>\n<li>count(column) 求行数</li>\n<li>avg 求平均</li>\n<li>sum 求和</li>\n<li>min 求最小值</li>\n<li>max 求最大值</li>\n<li>count(distinct column) 求不同值的个数</li>\n</ol>\n<p>例如：选择视图base中的height列，并将数据按照height分组，计算每组的数量num，并将num按照倒序排列</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">SELECT</span> height,<span class=\"keyword\">count</span>(*) <span class=\"keyword\">as</span> <span class=\"keyword\">num</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> base</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> height</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">num</span> <span class=\"keyword\">DESC</span>;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Scalar-函数\"><a href=\"#Scalar-函数\" class=\"headerlink\" title=\"Scalar 函数\"></a>Scalar 函数</h4><ol>\n<li>round(column_name, decimals) 将数据舍入为指定小数；</li>\n<li>Now()，返回当前时间</li>\n<li>len(column_name)，返回当前字符的长度</li>\n<li>其他</li>\n</ol>\n<h2 id=\"Union-操作符\"><a href=\"#Union-操作符\" class=\"headerlink\" title=\"Union 操作符\"></a>Union 操作符</h2><p>union 操作符可以<strong>合并</strong>两个或多个select语句，并取不同的值（即会默认去重）。</p>\n<p>union all 默认不去重，返回所有的值。</p>\n<p>使用union 或 union all时，select语句必须有相同数量的列和数据类型。</p>\n<p>union以后，会选择第一个select语句里面的列，作为列名。并将其他select语句里面的值对应插入结果中</p>\n<p>例如，我们要将 baseball 表的 name、height 列和 test 表中的 Name、Age 列合并</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">select</span> <span class=\"keyword\">name</span>,height <span class=\"keyword\">from</span> baseball</span><br><span class=\"line\"><span class=\"keyword\">union</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">Name</span>,Age <span class=\"keyword\">from</span> <span class=\"keyword\">test</span>;</span></span><br></pre></td></tr></table></figure>\n<p>结果会用 name 和 height 作为列名。</p>\n<h2 id=\"join\"><a href=\"#join\" class=\"headerlink\" title=\"join\"></a>join</h2><p>引用两个表时，我们可以使用join和on关键词，也可以直接用where来进行匹配</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">SELECT</span> Persons.LastName, Persons.FirstName, Orders.OrderNo</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Persons, Orders</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Persons.Id_P = Orders.Id_P </span><br><span class=\"line\"></span><br><span class=\"line\">与</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> Persons.LastName, Persons.FirstName, Orders.OrderNo</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Persons</span><br><span class=\"line\"><span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> Orders</span><br><span class=\"line\"><span class=\"keyword\">ON</span> Persons.Id_P = Orders.Id_P</span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> Persons.LastName</span><br><span class=\"line\"></span><br><span class=\"line\">是相同的作用</span></span><br></pre></td></tr></table></figure>\n<p>inner join和join的作用是一样的，在表中至少存在一个匹配时，返回行。如果 “Persons” 中的行在 “Orders” 中没有匹配，就不会列出这些行。</p>\n<h3 id=\"left-join\"><a href=\"#left-join\" class=\"headerlink\" title=\"left join\"></a>left join</h3><p>在某些数据库中，left join 也叫做 left out join.</p>\n<p>LEFT JOIN 关键字会从左表 (table_name1) 那里返回所有的行，即使在右表 (table_name2) 中没有匹配的行。</p>\n<p><strong>tab1</strong></p>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>size</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>10</td>\n</tr>\n<tr>\n<td>2</td>\n<td>20</td>\n</tr>\n<tr>\n<td>3</td>\n<td>30</td>\n</tr>\n</tbody>\n</table>\n<p><strong>tab2</strong></p>\n<table>\n<thead>\n<tr>\n<th>size</th>\n<th>name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>10</td>\n<td>aaa</td>\n</tr>\n<tr>\n<td>20</td>\n<td>bbb</td>\n</tr>\n<tr>\n<td>20</td>\n<td>ccc</td>\n</tr>\n</tbody>\n</table>\n<p>我们使用left join来连接 tab1和tab2时，（tab1作为左表），会默认输出tab1的所有行，如果对应tab2中没有匹配的值，则没有值的部分用空值或者null表示。如果对应到tab2中有多个匹配值，则把每个值都打印出来。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">SELECT</span> tab1.<span class=\"keyword\">id</span>, tab1.<span class=\"keyword\">size</span>, tab2.<span class=\"keyword\">name</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> tab1</span><br><span class=\"line\"><span class=\"keyword\">LEFT</span> <span class=\"keyword\">JOIN</span> tab2</span><br><span class=\"line\"><span class=\"keyword\">ON</span> tab1.<span class=\"keyword\">size</span> = tab2.<span class=\"keyword\">size</span>;</span></span><br></pre></td></tr></table></figure>\n<p>打印结果如下：</p>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>size</th>\n<th>name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>10</td>\n<td>aaa</td>\n</tr>\n<tr>\n<td>2</td>\n<td>20</td>\n<td>bbb</td>\n</tr>\n<tr>\n<td>2</td>\n<td>20</td>\n<td>ccc</td>\n</tr>\n<tr>\n<td>3</td>\n<td>30</td>\n<td><null></null></td>\n</tr>\n</tbody>\n</table>\n<p>如果反过来，把tab2作为左表，则输出结果为</p>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>size</th>\n<th>name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>10</td>\n<td>aaa</td>\n</tr>\n<tr>\n<td>2</td>\n<td>20</td>\n<td>bbb</td>\n</tr>\n<tr>\n<td>2</td>\n<td>20</td>\n<td>ccc</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"right-join\"><a href=\"#right-join\" class=\"headerlink\" title=\"right join\"></a>right join</h3><p>RIGHT JOIN 关键字会右表 (table_name2) 那里返回所有的行，即使在左表 (table_name1) 中没有匹配的行。</p>\n<p>与left join的原理类似，不过在sqlite3中，不支持right join和full join，其他数据库可能支持。</p>\n<h3 id=\"FULL-JOIN\"><a href=\"#FULL-JOIN\" class=\"headerlink\" title=\"FULL JOIN\"></a>FULL JOIN</h3><p>只要其中某个表存在匹配，FULL JOIN 关键字就会返回行。</p>\n<p>语法</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">SELECT</span> column_name(s)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> table_name1</span><br><span class=\"line\"><span class=\"keyword\">FULL</span> <span class=\"keyword\">JOIN</span> table_name2 </span><br><span class=\"line\"><span class=\"keyword\">ON</span> table_name1.column_name=table_name2.column_name</span></span><br></pre></td></tr></table></figure>\n<p>注释：在某些数据库中， FULL JOIN 称为 FULL OUTER JOIN。</p>\n<p>从上面的分析我们可以知道，join的作用主要是匹配，通过不同表的列之间的关系进行匹配，而union的作用主要是合并，只需要合并的select语句有相同的列数和相似的数据类型就可以进行合并。</p>\n<p>也就是，如果我们需要，查询的时候，可以把name和Email合并到同一个列中。</p>\n<h2 id=\"where-和-on-、having的差别\"><a href=\"#where-和-on-、having的差别\" class=\"headerlink\" title=\"where 和 on 、having的差别\"></a>where 和 on 、having的差别</h2><p>首先，where 和 on 和 having 都是可以加条件的子句。</p>\n<h3 id=\"where-和-on-差别\"><a href=\"#where-和-on-差别\" class=\"headerlink\" title=\"where 和 on 差别\"></a>where 和 on 差别</h3><p>如下表</p>\n<table>\n<thead>\n<tr>\n<th>num</th>\n<th>where</th>\n<th>on </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>在一个表设置过滤条件，或多个表设置过滤条件的情况下都可以用。</td>\n<td>在两个或多个表连接的时候才能用</td>\n</tr>\n<tr>\n<td>2</td>\n<td>where是先进行统计以后，在进行过滤</td>\n<td>on是先把不符合条件的记录过滤后才进行统计</td>\n</tr>\n<tr>\n<td>3</td>\n<td>where 和 on比较，where后执行</td>\n<td>where 和 on比较，on 先执行</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"where-和-having-的差别\"><a href=\"#where-和-having-的差别\" class=\"headerlink\" title=\"where 和 having 的差别\"></a>where 和 having 的差别</h3><p>在 SQL 中增加 HAVING 子句原因是，WHERE 关键字无法与合计函数一起使用。</p>\n<ol>\n<li>如果要对 合计函数进行过滤，那就要使用 having。</li>\n<li>一般来说，having要和合计函数（例如：count、sum、avg、min、max）一起使用，group by 一起使用。</li>\n<li>一般是on 最先生效，再是 where进行条件过滤，最后才是计算合计函数，再用having对合计函数筛选。</li>\n</ol>\n<h4 id=\"举例\"><a href=\"#举例\" class=\"headerlink\" title=\"举例\"></a>举例</h4><p>用 left join 来检验 on 和 where 的差别。<br>left join 会返回左表所有的行，不论右表能不能匹配条件，如果右表有多个匹配值。</p>\n<p>用on的话，是先把不符合条件的记录过滤后才进行统计；<br>用where的话，系统首先根据各个表之间的联接条件，把多个表合成一个临时表后，再由where进行过滤；</p>\n<p>故，对于上述的 tab1 和 tab2，<br><strong>如果使用on进行过滤：</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">select</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> tab1</span><br><span class=\"line\"><span class=\"keyword\">left</span> <span class=\"keyword\">join</span> tab2</span><br><span class=\"line\"><span class=\"keyword\">on</span> tab1.<span class=\"keyword\">size</span> = tab2.<span class=\"keyword\">size</span></span><br><span class=\"line\"><span class=\"keyword\">and</span> tab2.<span class=\"keyword\">name</span> = <span class=\"string\">'aaa'</span>;</span></span><br></pre></td></tr></table></figure>\n<p>这里会先按照 tab1.size = tab2.size 和 条件 tab2.name = ‘aaa’进行过滤，再将左右表进行连接，故打印结果如下：</p>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>size</th>\n<th>size</th>\n<th>name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>10</td>\n<td>10</td>\n<td>aaa </td>\n</tr>\n<tr>\n<td>2</td>\n<td>20</td>\n<td><null></null></td>\n<td><null></null></td>\n</tr>\n<tr>\n<td>3</td>\n<td>30</td>\n<td><null></null></td>\n<td><null></null></td>\n</tr>\n</tbody>\n</table>\n<p><strong>如果使用where进行过滤</strong></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">select</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> tab1</span><br><span class=\"line\"><span class=\"keyword\">left</span> <span class=\"keyword\">join</span> tab2</span><br><span class=\"line\"><span class=\"keyword\">on</span> tab1.<span class=\"keyword\">size</span> = tab2.<span class=\"keyword\">size</span></span><br><span class=\"line\"><span class=\"keyword\">where</span> tab2.<span class=\"keyword\">name</span> = <span class=\"string\">'aaa'</span>;</span></span><br></pre></td></tr></table></figure>\n<p>这里会先按照 tab1.size = tab2.size 将左右表进行连接，再使用where进行条件过滤，故打印结果如下：</p>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>size</th>\n<th>size</th>\n<th>name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>10</td>\n<td>10</td>\n<td>aaa </td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p>on、where、having 都可以进行过滤，作用的顺序不一样。<br>on是先过滤再连接；where是先连接，在过滤<br>having可以和where一起使用，先用where进行条件过滤，再用having进行合计函数过滤。</p>\n"},{"title":"SQL 面试题(一)","url":"http://lilyalove.com/2017/08/14/SQL-interview1/","content":"<h1 id=\"SQL-面试题-一\"><a href=\"#SQL-面试题-一\" class=\"headerlink\" title=\"SQL 面试题(一)\"></a>SQL 面试题(一)</h1><h3 id=\"从baseball数据表中，选出第20到30条数据\"><a href=\"#从baseball数据表中，选出第20到30条数据\" class=\"headerlink\" title=\"从baseball数据表中，选出第20到30条数据\"></a>从baseball数据表中，选出第20到30条数据</h3><p>本题应该使用 limit 来完成操作</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> baseball <span class=\"keyword\">limit</span> <span class=\"number\">19</span>,<span class=\"number\">11</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\">or </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> baseball <span class=\"keyword\">limit</span> <span class=\"number\">11</span> <span class=\"keyword\">offset</span> <span class=\"number\">19</span>;</span></span><br></pre></td></tr></table></figure>\n<p>这两句的作用是一样的，都是读取第20~30条数据。由于数据表是从0开始的，所以第20条数据的行号是19。20~30条一共有11条数据，故选择的数据条数是11.    </p>\n<h3 id=\"drop、truncate、delete的差别\"><a href=\"#drop、truncate、delete的差别\" class=\"headerlink\" title=\"drop、truncate、delete的差别\"></a>drop、truncate、delete的差别</h3><p>在SQL中，这三个关键词的作用都是用来删除，但是存在一些差别</p>\n<ol>\n<li>drop用来删除整个表格，包括表的结构、依赖和数据；truncate和delete用来删除表格中所有的数据，不删除表的结构；</li>\n<li>truncate用来删除表格中所有数据，delete可以结合where来使用，删除选中的数据，若不结合where使用，则也是删除表格中所有数据；</li>\n<li>drop和truncate属于DDL（data define language数据库定义语音），操作直接生效，不会放到rollback segment中，故不能回滚；</li>\n<li>delete属于DML（Data Manipulation Language数据库操作语音），操作会被放到rollback segment中，事务提交后才能生效，也就是需要commit，故可以回滚；</li>\n<li>运行速度上，一般drop &gt; truncate &gt; delete;</li>\n<li>表和索引所占空间。当表被TRUNCATE 后，这个表和索引所占用的空间会恢复到初始大小，而DELETE操作不会减少表或索引所占用的空间。drop语句将表所占用的空间全释放掉。</li>\n</ol>\n<p>操作语句</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> table_name <span class=\"keyword\">where</span> colum_name = <span class=\"string\">'str'</span>;</span></span><br><span class=\"line\">// 可以删除所有 colum_name = 'str'的行</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> table_name;</span></span><br><span class=\"line\">// 可以删除该表中所有数据，保留表的结构和依赖</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">drop</span> <span class=\"keyword\">table</span> table_name;</span></span><br><span class=\"line\">// 删除数据表 table_name，包括表结构，依赖和数据，并释放所占空间</span><br><span class=\"line\"></span><br><span class=\"line\">// 在sqlite3中，没有<span class=\"operator\"><span class=\"keyword\">truncate</span>关键词，可以使用<span class=\"keyword\">delete</span>或者<span class=\"keyword\">drop</span>代替<span class=\"keyword\">truncate</span>进行操作；</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"drop、delete与truncate分别在什么场景之下使用？\"><a href=\"#drop、delete与truncate分别在什么场景之下使用？\" class=\"headerlink\" title=\"drop、delete与truncate分别在什么场景之下使用？\"></a>drop、delete与truncate分别在什么场景之下使用？</h3><p>不再需要一张表的时候，用drop<br>想删除部分数据行时候，用delete，并且带上where子句<br>保留表而删除所有数据的时候用truncate</p>\n<h3 id=\"表格名称有空格时，如何修改表格名称？\"><a href=\"#表格名称有空格时，如何修改表格名称？\" class=\"headerlink\" title=\"表格名称有空格时，如何修改表格名称？\"></a>表格名称有空格时，如何修改表格名称？</h3><p>可以用单引号将表格名称括起来，作为一个整体。例如表格名称为 Titanic Data ，要改名为 titanic</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> <span class=\"string\">'Titanic Data'</span> <span class=\"keyword\">rename</span> <span class=\"keyword\">to</span> titanic;</span></span><br></pre></td></tr></table></figure>\n<p>用alter来更改表格的名称。alter是DDL语言，立即生效。</p>\n<h3 id=\"超键、候选键、主键、外键分别是什么？\"><a href=\"#超键、候选键、主键、外键分别是什么？\" class=\"headerlink\" title=\"超键、候选键、主键、外键分别是什么？\"></a>超键、候选键、主键、外键分别是什么？</h3><p>首先，定义如下：</p>\n<p>超键(super key):在关系中能唯一标识元组的<strong>属性集</strong>称为关系模式的超键，超键包含候选键和主键；  </p>\n<p>候选键(candidate key):不含有多余属性的超键称为候选键；候选键是可以作为唯一标识的属性；候选键包含主键；   </p>\n<p>主键(primary key):用户选作元组标识的一个候选键称为主键，主键是从候选键中选出来的，是人为定义的。   </p>\n<p>外键(foreign key)：如果关系模式其他表的主键，可以作为当前表的外键，主要用来描述两个表的关系。</p>\n<p>（其中，元组指数据表中的一行，也就是一条记录。在数据表中，每行是一个元组，每列是一个属性。）</p>\n<h4 id=\"结合实例的具体解释：\"><a href=\"#结合实例的具体解释：\" class=\"headerlink\" title=\"结合实例的具体解释：\"></a>结合实例的具体解释：</h4><p>假设有如下两个表：<br>学生（学号，姓名，性别，身份证号，教师编号）<br>教师（教师编号，姓名，工资）</p>\n<p>超键：<br>由超键的定义可知，学生表中含有学号或者身份证号的任意组合都为此表的超键。如：（学号）、（学号，姓名）、（身份证号，性别）等。</p>\n<p>候选键：<br>候选键属于超键，它是最小的超键，就是说如果再去掉候选键中的任何一个属性它就不再是超键了。学生表中的候选键为：（学号）、（身份证号）。</p>\n<p>主键：<br>主键就是候选键里面的一个，是人为规定的，例如学生表中，我们通常会让“学号”做主键，教师表中让“教师编号”做主键。</p>\n<p>外键：<br>外键比较简单，学生表中的外键就是“教师编号”。外键主要是用来描述两个表的关系。</p>\n<h3 id=\"什么是事务？\"><a href=\"#什么是事务？\" class=\"headerlink\" title=\"什么是事务？\"></a>什么是事务？</h3><p>事务（Transaction）是并发控制的基本单位。所谓的事务，它是一个操作序列，这些操作要么都执行，要么都不执行，它是一个不可分割的工作单位。事务是数据库维护数据一致性的单位，在每个事务结束时，都能保持数据一致性。</p>\n<p>DML的操作都需要事务提交后才能生效，也就是需要commit。<br>DML是数据库操作语言 Data Manipulation Language，包括select、insert、update、delete</p>\n<p>事务就是一系列的操作语言组成的操作序列，当我们commit之后，就可以运行。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">// 选出表中所有的数据</span><br><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> table_name;</span></span><br><span class=\"line\">// 我们可以使用 where 来设置筛选条件，用order by对数据进行排序，用limit来设置需要的数据条数和数据开始的索引，用 distinct 来对数据去重</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// 插入一条数据</span><br><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> table_name <span class=\"keyword\">VALUES</span> (值<span class=\"number\">1</span>，值<span class=\"number\">2</span>，……);</span></span><br><span class=\"line\">or </span><br><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> table_name (列<span class=\"number\">1</span>，列<span class=\"number\">2</span>，……) <span class=\"keyword\">VALUES</span> (值<span class=\"number\">1</span>，值<span class=\"number\">2</span>，……);</span></span><br><span class=\"line\">// 使用方法一时，需要给每列都赋值，使用方法二时，可以选择需要插入数据的列，以及对应插入的值，主键必须要有数据</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">DELETE</span> <span class=\"keyword\">FROM</span> table_name <span class=\"keyword\">WHERE</span> colum_name = ‘<span class=\"keyword\">str</span>’;</span></span><br><span class=\"line\">// 删除colum_name列中，所有等于str的行</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">DELETE</span> <span class=\"keyword\">FROM</span> table_name;</span></span><br><span class=\"line\">// 删除所有的行</span><br><span class=\"line\"></span><br><span class=\"line\">// <span class=\"operator\"><span class=\"keyword\">update</span>用来修改表中的数据</span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span> 表名称 <span class=\"keyword\">SET</span> 列名称 = 新值 <span class=\"keyword\">WHERE</span> 列名称 = 某值</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">UPDATE</span> Person <span class=\"keyword\">SET</span> FirstName = <span class=\"string\">'Fred'</span> <span class=\"keyword\">WHERE</span> LastName = <span class=\"string\">'Wilson'</span> ;</span></span><br><span class=\"line\">// 如果 Lastname 为 'Wilson' 的元组的 FirstName为空，则新添 FirstName值，如果 FirstName 已经有值了，则更新 FirstName 的值</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"operator\"><span class=\"keyword\">UPDATE</span> Person <span class=\"keyword\">SET</span> Address = <span class=\"string\">'Zhongshan 23'</span>, City = <span class=\"string\">'Nanjing'</span></span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> LastName = <span class=\"string\">'Wilson'</span>;</span></span><br><span class=\"line\">// 此处是设置多列的情况</span><br></pre></td></tr></table></figure>\n"},{"title":"安斯库姆四重奏","url":"http://lilyalove.com/2017/08/08/Anscombe's quartet/","content":"<h1 id=\"安斯库姆四重奏\"><a href=\"#安斯库姆四重奏\" class=\"headerlink\" title=\"安斯库姆四重奏\"></a>安斯库姆四重奏</h1><p>安斯库姆四重奏（Anscombe’s quartet）是四组基本的统计特性一致的数据，但由它们绘制出的图表则截然不同。每一组数据都包括了11个(x,y)点。</p>\n<p>目的是用来说明在分析数据前先绘制图表的重要性，以及离群值对统计的影响之大。</p>\n<p><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/Anscombe%27s_quartet_3.svg/1280px-Anscombe%27s_quartet_3.svg.png\" alt=\"数据图表\"></p>\n<p>这四组数据的共同统计特性如下：</p>\n<table>\n<thead>\n<tr>\n<th>性质</th>\n<th>数值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>x的平均数</td>\n<td>9</td>\n</tr>\n<tr>\n<td>x的方差</td>\n<td>11</td>\n</tr>\n<tr>\n<td>y的平均数</td>\n<td>7.50（精确到小数点后两位）</td>\n</tr>\n<tr>\n<td>y的方差</td>\n<td>4.122或4.127（精确到小数点后三位）</td>\n</tr>\n<tr>\n<td>x与y之间的相关系数</td>\n<td>0.816（精确到小数点后三位）</td>\n</tr>\n<tr>\n<td>线性回归线</td>\n<td>$y=3.00+0.500x$（分别精确到小数点后两位和三位）</td>\n</tr>\n</tbody>\n</table>\n<p>在四幅图中，由第一组数据绘制的图表（左上图）是看起来最“正常”的，可以看出两个随机变量之间的相关性。从第二组数据的图表（右上图）则可以明显地看出两个随机变量间的关系是非线性的。第三组中（左下图），虽然存在着线性关系，但由于一个离群值的存在，改变了线性回归线，也使得相关系数从1降至0.81。最后，在第四个例子中（右下图），尽管两个随机变量间没有线性关系，但仅仅由于一个离群值的存在就使得相关系数变得很高。</p>\n<h2 id=\"意图\"><a href=\"#意图\" class=\"headerlink\" title=\"意图\"></a>意图</h2><p>其实这个例子告诉我们，在分析数据之前，绘制图表的重要性。通过图表，我们可以直观的看到分布。不会被统计特性所迷惑。</p>\n"},{"title":"常见机器学习算法","url":"http://lilyalove.com/2017/08/08/machine-learning/","content":"<h1 id=\"常见机器学习算法\"><a href=\"#常见机器学习算法\" class=\"headerlink\" title=\"常见机器学习算法\"></a>常见机器学习算法</h1><h2 id=\"Classification-分类\"><a href=\"#Classification-分类\" class=\"headerlink\" title=\"Classification 分类\"></a>Classification 分类</h2><p>分类算法属于监督学习算法。监督学习算法表示你拥有大量的样本和正确答案。</p>\n<p>分类算法的目的是为了找到决策边界，帮我们将数据进行分类，并用决策面来预测新的数据。<br>输入训练集，包括大量的特征，和正确标签，训练得到分类模型，并进行评估和预测。</p>\n<p>三种常用的分类算法为：朴素贝叶斯、SVMs、决策树，以下是三种算法的对比。</p>\n<table>\n<thead>\n<tr>\n<th>First Header</th>\n<th>朴素贝叶斯</th>\n<th>SVMs</th>\n<th>决策树</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>优势</td>\n<td>非常易于执行；特征空间非常大；运行非常容易；非常有效</td>\n<td>支持向量机在具有复杂领域和明显分界的情况下，表现十分出色</td>\n<td>测量决策树的生长情况，在适当的时间停止决策树生长非常重要。可以通过所谓的集成方法，从决策树中构建更大的分类器</td>\n</tr>\n<tr>\n<td>缺点</td>\n<td>有时会间断，无法识别组合的特征含义</td>\n<td>在海量数据集中，它们的表现不太好。因为在这种训练集中，训练时间将是立方数。另外，噪音过多的情况下，效果也不好。所以，如果类严重重叠，你需要考虑独立证据，这时候朴素贝叶斯分类器会更有效</td>\n<td>容易过拟合，尤其是在你具有包含大量特征的数据时，复杂的决策树可能会过度拟合数据。所以你需要谨慎对待使用决策树挑选的参数，调整参数以以防过度拟合</td>\n</tr>\n</tbody>\n</table>\n<p>如果你拥有海量的数据集，有很多很多的特征，直接可运行的SVMs的速度可能会很慢。数据的某些噪音，可能会导致过拟合现象。<br>所以，我们会在测试集上进行测试，看看它的表现如何。</p>\n<h3 id=\"在选择监督算法时，需要考虑哪些东西？\"><a href=\"#在选择监督算法时，需要考虑哪些东西？\" class=\"headerlink\" title=\"在选择监督算法时，需要考虑哪些东西？\"></a>在选择监督算法时，需要考虑哪些东西？</h3><p>根据这个基本原则，可以对机器学习的算法进行选择。</p>\n<ol>\n<li>从执行效率上考虑</li>\n<li>从特征空间上考虑</li>\n<li>运行是否容易、有效</li>\n<li>考虑算法的缺点</li>\n</ol>\n<p>后期继续总结。</p>\n<h2 id=\"Regression-回归\"><a href=\"#Regression-回归\" class=\"headerlink\" title=\"Regression 回归\"></a>Regression 回归</h2><h3 id=\"线性回归\"><a href=\"#线性回归\" class=\"headerlink\" title=\"线性回归\"></a>线性回归</h3><p>$Y = β0 + β1 <em> X1 + β2 </em> X2 + …… + βn * Xn + \\epsilon$</p>\n<p>使用最小二乘法来求是的误差$\\epsilon^2$和最小的β0，β1，……，βn。</p>\n<p>评估线性回归好坏的指数是 $r^2$，$r^2$ 的范围是0~1，越接近1，说明回归线拟合的越好。</p>\n<h2 id=\"Clustering-聚类\"><a href=\"#Clustering-聚类\" class=\"headerlink\" title=\"Clustering 聚类\"></a>Clustering 聚类</h2><p>聚类算法属于非监督算法。也就是我们拥有大量的数据，但是没有标记是否类别。<br>在这种情况下，所有的数据都属于一类。<br>我们需要根据数据的特征，把相似的数据分到一个簇里面，相异的数据分到不同的簇里面。</p>\n<p>聚类常用于从多个维度对数据进行划分。例如，用于客户细分。</p>\n<h3 id=\"K-means\"><a href=\"#K-means\" class=\"headerlink\" title=\"K-means\"></a>K-means</h3><p>原理是，通过对特征进行分析，找到潜在的分类，使得不同类之间距离较远，同一类之间距离都较近。从而完成数据划分。</p>\n<p>核心算法是:</p>\n<ol>\n<li>设置N个中心点；</li>\n<li>通过数据到这N个中心点的距离将数据进行划分；</li>\n<li>调整中心点的位置，使得划分到同一个类里面的点，到中心点的位置最小；</li>\n<li>再根据中心点的位置对所有的数据重新划分；</li>\n<li>迭代第3步和第4步，直到不再发生变化。</li>\n</ol>\n<p>K-means的问题是，过度依赖最开始设置的中心点的位置。<br>很可能设置同样多的中心点，并迭代同样多的次数，最后划分出来的结果并不相同。</p>\n<h2 id=\"Dimensionality-reduction-降维\"><a href=\"#Dimensionality-reduction-降维\" class=\"headerlink\" title=\"Dimensionality reduction 降维\"></a>Dimensionality reduction 降维</h2><p>当数据维度特别多时，会加重机器的运行负荷，同时会造成机器学习陷入细枝末节中。</p>\n<p>在这种情况下，我们常常需要对数据进行降维，找到承载了大多数信息的主要特征，再将其用于真正的机器学习中。</p>\n<p>常见的方法有主成分分析法</p>\n<h3 id=\"主成分分析-PCA\"><a href=\"#主成分分析-PCA\" class=\"headerlink\" title=\"主成分分析 PCA\"></a>主成分分析 PCA</h3><p>PCA是一套用于各类数据分析的分析方法，这些分析包括特征集压缩。<br>每当你的数据需要直观化的时候，你都可以采用它。</p>\n<p>如果你收到任何形状的数据，无论是何种形状，PCA会仅通过转化和轮换发现从旧坐标系统获得的新坐标系统。</p>\n<p>方差：在统计学上，指数据分布的大致差幅。<br>对于一个具有较大方差的特征，它的样本散布的数值范围极大。对于一个方差较小的特征，它的样本则是紧密聚集在一起的。</p>\n<h4 id=\"主成分：\"><a href=\"#主成分：\" class=\"headerlink\" title=\"主成分：\"></a>主成分：</h4><p>所以，根据上面的分析，我们可以知道，一个数据的主成分，就是具有最大方差的方向，如果针对很多维度的特征来说的话，就是具有最大方差的这个特征，就是主成分。</p>\n<h4 id=\"为什么用最大方差的方向作为主成分？\"><a href=\"#为什么用最大方差的方向作为主成分？\" class=\"headerlink\" title=\"为什么用最大方差的方向作为主成分？\"></a>为什么用最大方差的方向作为主成分？</h4><p>因为它能最大程度的保留来自原始数据的信息量。使得我们在进行特征压缩时，可以保留更多的信息。</p>\n<h4 id=\"第二、第三主成分\"><a href=\"#第二、第三主成分\" class=\"headerlink\" title=\"第二、第三主成分\"></a>第二、第三主成分</h4><p>同前面的定义，我们可以将每个特征的方差进行排序，就可以得到主成分的排序了。</p>\n<p>在机器学习中，对于特征值很多的数据集，我们通常先用主成分分析法找到最重要的特征，再使用这些特征来进行机器学习，构建我们的预测模型。</p>\n<p>好处是，可以让机器学习过程效率提高，同时避免被细枝末节所干扰，导致模型过拟合。</p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><ol>\n<li><p>PCA是将输入特征转化为其主成分的系统化方法，这些主成分之后可以供你使用，而非原始输入特征。<br>你将使用这些新特征用于分类和回归任务中。</p>\n</li>\n<li><p>主成分的定义是，数据中，使方差最大化的方向，它可以在你对这些特征进行投影或压缩时，将出现信息丢失的可能性降到最低。</p>\n</li>\n<li><p>你还可以对主成分划分等级，数据因特定主成分产生的方差越大，那么该主成分的级别越高。</p>\n</li>\n<li><p>主成分从某种程度上来说，是垂直的，（因为每个特征都在不同的维度上）所以从数学的角度来说，不同的主成分是不可能重叠的。</p>\n</li>\n<li><p>主成分数量是有上限的，最大值等于输入的特征量的数量。通常情况下，我们只使用最大的几个主成分。</p>\n</li>\n</ol>\n<h2 id=\"Model-selection-模型选择\"><a href=\"#Model-selection-模型选择\" class=\"headerlink\" title=\"Model selection 模型选择\"></a>Model selection 模型选择</h2><p>暂无相关信息。</p>\n<h2 id=\"Preprocessing-预处理\"><a href=\"#Preprocessing-预处理\" class=\"headerlink\" title=\"Preprocessing 预处理\"></a>Preprocessing 预处理</h2><p>暂无相关信息。</p>\n"},{"title":"常用的数据统计和分析方法","url":"http://lilyalove.com/2017/08/06/data_statistics_methods/","content":"<h1 id=\"常用的数据统计和分析方法\"><a href=\"#常用的数据统计和分析方法\" class=\"headerlink\" title=\"常用的数据统计和分析方法\"></a>常用的数据统计和分析方法</h1><h2 id=\"假设检验\"><a href=\"#假设检验\" class=\"headerlink\" title=\"假设检验\"></a>假设检验</h2><p>（Hypothesis Testing）</p>\n<p>什么是假设检验？<br>假设检验是用来判断样本与样本，样本与总体的差异是由抽样误差引起还是本质差别造成的统计推断方法。</p>\n<p>假设检验类似于一种证伪的方法（反证法），但是有不同于一般的反证法。</p>\n<p>当我们想证明一件事情是正确的时，我们是没有办法证明的。</p>\n<p>这时候，我们需要假设这件事情不正确，然后证明假设是错的。就可以说明我们想证明的结论是正确的了。</p>\n<h3 id=\"假设检验的基本思想\"><a href=\"#假设检验的基本思想\" class=\"headerlink\" title=\"假设检验的基本思想\"></a>假设检验的基本思想</h3><p>1.小概率原理<br>　　如果对总体的某种假设是真实的，那么不利于或不能支持这一假设的事件A（小概率事件）在一次试验中几乎不可能发生的；要是在一次试验中A竟然发生了，就有理由怀疑该假设的真实性，拒绝这一假设。</p>\n<h3 id=\"假设检验的原理\"><a href=\"#假设检验的原理\" class=\"headerlink\" title=\"假设检验的原理\"></a>假设检验的原理</h3><p>　　一般地说，对总体某项或某几项作出假设，然后根据样本对假设作出接受或拒绝的判断，这种方法称为假设检验。<br>　　假设检验使用了一种类似于“反证法”的推理方法，它的特点是：<br>　　（1）先假设总体某项假设成立，计算其会导致什么结果产生。若导致不合理现象产生，则拒绝原先的假设。若并不导致不合理的现象产生，则不能拒绝原先假设，从而接受原先假设。<br>　　（2）它又不同于一般的反证法。所谓不合理现象产生，并非指形式逻辑上的绝对矛盾，而是基于小概率原理：概率很小的事件在一次试验中几乎是不可能发生的，若发生了，就是不合理的。至于怎样才算是“小概率”呢？通常可将概率不超过0.05的事件称为“小概率事件”，也可视具体情形而取0.1或0.01等。在假设检验中常记这个概率为α，称为显著性水平。\n　　</p>\n<h3 id=\"假设检验的种类\"><a href=\"#假设检验的种类\" class=\"headerlink\" title=\"假设检验的种类\"></a>假设检验的种类</h3><p>假设检验可分为正态分布检验、正态总体均值分布检验、非参数检验三类。</p>\n<p>其中，正态总体均值分布检验包括z检验和t检验。</p>\n<p>z检验针对大样本（一般来说，样本量大于30）平均值差异性检验方法。<br>t检验针对小样本检验总体参数。<br>F检验：用于2个或2个以上的样本均数差别的显著性检验。（方差分析）</p>\n<p>具体以后再另行介绍。</p>\n<h4 id=\"F检验（方差分析法）\"><a href=\"#F检验（方差分析法）\" class=\"headerlink\" title=\"F检验（方差分析法）\"></a>F检验（方差分析法）</h4><p>一个复杂的事物，其中往往有许多因素互相制约又互相依存。方差分析的目的是通过数据分析找出对该事物有显著影响的因素，各因素之间的交互作用，以及显著影响因素的最佳水平等。</p>\n<p>经过方差分析若拒绝了检验假设，只能说明多个样本总体均数不相等或不全相等。若要得到各组均数间更详细的信息，应在方差分析的基础上进行多个样本均数的两两比较。</p>\n<ol>\n<li>多个样本均数间两两比较<br> 多个样本均数间两两比较常用q检验的方法，即Newman-kueuls法，其基本步骤为：建立检验假设–&gt;样本均数排序–&gt;计算q值–&gt;查q界值表判断结果。</li>\n<li>多个实验组与一个对照组均数间两两比较<br>　　多个实验组与一个对照组均数间两两比较，若目的是减小第II类错误，最好选用最小显著差法（LSD法）；若目的是减小第I类错误，最好选用新复极差法，前者查t界值表，后者查q’界值表。</li>\n</ol>\n<h2 id=\"相关分析\"><a href=\"#相关分析\" class=\"headerlink\" title=\"相关分析\"></a>相关分析</h2><p>用来评估两个变量之间的相关性的分析方法。</p>\n<p>通常用相关系数 r 来表示相关程度，0~1表示正相关，值越大，相关性越强；-1~0为负相关，值越小，相关性约强。</p>\n<p>有很多库可以用来计算相关系数，也可以在网上寻找 r 的计算公式。</p>\n<p>可以通过散点图来直观的查看两个变量的关系。</p>\n<h2 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h2><p>主要是处理输出类型为离散值的数据。</p>\n<p>通过各种分类算法，求决策边界。并通过点与决策边界的距离，来为这个点赋予一个类标签，并进行<strong>预测</strong>。</p>\n<p>评估方法是，查准率。</p>\n<p>分类算法常用的有：朴素贝叶斯、SVMs、决策树等。<br>属于<strong>监督分类算法</strong>。</p>\n<p>监督分类的意思是，我们有很多样本，而且我们了解样本的正确分类，也就是正确答案。</p>\n<h3 id=\"机器学习\"><a href=\"#机器学习\" class=\"headerlink\" title=\"机器学习\"></a>机器学习</h3><p>机器学习就是用来解决这类问题的。<br>在机器学习中，我们把特征作为输入，然后尝试生成标签，（标签也就是答案）。<br>机器学习能生成决策面。<br>决策面通常位于两个不同的类之间的某个位置。</p>\n<p>机器学习要做的就是，获取数据（数据包括特征和正确标签，也就是训练集），将其转化成决策面（DS-decision surface）。</p>\n<p>通过决策面，对新的数据特征进行预测，并给它打上标签，看他属于哪个分类。</p>\n<h3 id=\"机器学习常见问题\"><a href=\"#机器学习常见问题\" class=\"headerlink\" title=\"机器学习常见问题\"></a>机器学习常见问题</h3><p>过拟合：过拟合是指使用的特征过多，使得拟合过程中太过于关注细枝末节，数据泛化的不好。<br>也就是数据在训练集上的准确率很高，接近100%；但它不知道怎么泛化新数据，在测试集上准确率第。</p>\n<p>欠拟合：没有提取出有用的特征，使得在测试集和训练集上表现的都不好。</p>\n<h3 id=\"常用机器学习算法\"><a href=\"#常用机器学习算法\" class=\"headerlink\" title=\"常用机器学习算法\"></a>常用机器学习算法</h3><ol>\n<li>朴素贝叶斯</li>\n<li>SVMs</li>\n<li>决策树</li>\n<li>其他</li>\n</ol>\n<p>区别在下篇文字中介绍</p>\n<h2 id=\"回归分析\"><a href=\"#回归分析\" class=\"headerlink\" title=\"回归分析\"></a>回归分析</h2><h3 id=\"回归分析法适用情况\"><a href=\"#回归分析法适用情况\" class=\"headerlink\" title=\"回归分析法适用情况\"></a>回归分析法适用情况</h3><p><strong>回归分析法适用情况，输出是连续的。</strong></p>\n<p>当输出是连续的值的情况下，我们可以用线性回归模型来对数据进行拟合。而拟合出来的回归方程，可以用来预测。</p>\n<h3 id=\"回归分析法作用\"><a href=\"#回归分析法作用\" class=\"headerlink\" title=\"回归分析法作用\"></a>回归分析法作用</h3><p>回归分析法可以用来<strong>建立预测模型</strong>，预测某些结果。</p>\n<h4 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h4><blockquote>\n<p>回归分析是应用及其广泛的分析方法之一。它为描述和分析变量间的相关关系，揭示变量间的内在规律，并用于预测、控制等问题，提供了行之有效的方法。<br>由于在现实世界中，许多变量（或通过适当变换的变量）之间都具有或近似具有线性相关关系，而线性回归分析方法简单、理论完整，因此线性回归模型常作为数据分析的首要模型。</p>\n</blockquote>\n<h4 id=\"分类-1\"><a href=\"#分类-1\" class=\"headerlink\" title=\"分类\"></a>分类</h4><ol>\n<li>按自变量个数来分类<ol>\n<li>一元回归分析：有一个自变量</li>\n<li>多元回归分析：有多个自变量</li>\n</ol>\n</li>\n<li>按照自变量和因变量的相关关系来分类<ol>\n<li>线性回归</li>\n<li>非线性回归</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"一元线性回归\"><a href=\"#一元线性回归\" class=\"headerlink\" title=\"一元线性回归\"></a>一元线性回归</h3><p>这里相当于 Y 的值在一定程度上是受 X 的值影响的，我们可以通过线性回归方程式来对 X，Y进行拟合。<br>$Y = β0 + β1*X $<br>β0 和 β1 是系数，$\\epsilon$ 是误差。<br>$\\epsilon$ 表示实际值与预测值的差，即 $\\epsilon = actual-predicted$</p>\n<p><strong>执行线性回归时，我们要最大程度的降低误差平方和。</strong>即根据已有数据，求出 β0 和 β1， 并使得所有点的 $\\epsilon$^2 的和最小。</p>\n<p>也就是说，最佳回归是最小化误差平方和的回归。</p>\n<p>$minimizes Σ \\epsilon^2$</p>\n<p>其中 actual 来自实际点， predicted 来自你从回归中获得的公式，也就是，找到是的误差平方和最小的 β0 和 β1，即回归方程的斜率和截距。</p>\n<p>用来最小化回归中的误差平方和的方法有两种：</p>\n<ol>\n<li>最小二乘法（OLS）（sklearn上面线性回归也是用的这种方法。）</li>\n<li>梯度下降法</li>\n</ol>\n<h4 id=\"评估方法\"><a href=\"#评估方法\" class=\"headerlink\" title=\"评估方法\"></a>评估方法</h4><p>如何评估回归模型的好坏：</p>\n<ol>\n<li>通过可视化来评估；</li>\n<li>可以查看线性回归产生的误差。<ol>\n<li>可以用误差平方和来评估</li>\n<li>可以用 $r^2$ 来评估</li>\n</ol>\n</li>\n</ol>\n<p>差别是，$r^2$不受数据点的影响，而误差平方和会受到拟合的数据点数量的影响。</p>\n<p>如果用最小误差平方和来评估拟合的好坏的话，会有一个问题，就是点越多，误差平方和不可避免的会越大，但是这并不能说明拟合的不好。<br>所以我们要选一个更好的评估指标。</p>\n<h4 id=\"评估指标\"><a href=\"#评估指标\" class=\"headerlink\" title=\"评估指标\"></a>评估指标</h4><p>$r^2$ ：R平方指标。范围为0~1，越接近1，表示回归线拟合的越好。<br>可以用sklearn里面的 linearRegression来求出 $r^2$ ，斜率和截距。<br>$r^2$ 的公式可以在网上查，这块暂时没有记录。</p>\n<p><strong>对与多元回归分析</strong><br>$Y = β0 + β1<em>X1 + β2</em>X2 + …… + βn*Xn + \\epsilon$</p>\n<p>Y的值受到 X1, X2, ……, Xn 的影响。我们需要找到使误差平方和最小的各个系数。 </p>\n<p>通过sklearn里面的linearRegresson模块，来进行回归线拟合，并用$r^2$来评估回归的好坏。</p>\n<h2 id=\"分类与回归比较\"><a href=\"#分类与回归比较\" class=\"headerlink\" title=\"分类与回归比较\"></a>分类与回归比较</h2><table>\n<thead>\n<tr>\n<th>算法的输出类型</th>\n<th>监督分类</th>\n<th>回归</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>output type（输出类型）</td>\n<td>类标签形式是离散的</td>\n<td>连续的（基本上表明你将使用回归来预测数字）</td>\n</tr>\n<tr>\n<td>在执行分类和回归时，你真正尝试寻找的是什么？</td>\n<td>决策边界（根据点相对于决策边界的位置，为其赋予一个类标签）</td>\n<td>我们尝试找到的是“最优拟合线”，这是拟合数据的线条，而不是描述数据的边界</td>\n</tr>\n<tr>\n<td>如何评估好坏</td>\n<td>使用查准率作为指标 accuracy</td>\n<td>有两种评估方法：1. 误差平方和；2. $r^2$</td>\n</tr>\n</tbody>\n</table>\n<p>回归和分类都是监督学习算法。<br>回归是不同类型的监督学习算法。</p>\n<h2 id=\"聚类分析（探索性分析方法）\"><a href=\"#聚类分析（探索性分析方法）\" class=\"headerlink\" title=\"聚类分析（探索性分析方法）\"></a>聚类分析（探索性分析方法）</h2><p>属于非监督算法。<br>也就是我们获得的数据并不附有标记，也就不能告诉我们正确答案。<br>当数据不附有标签时，所有的数据都属于同一类别，我们仍可以通过一定的措施，来提取出有用的信息。</p>\n<p>聚类分析的原则是：<br>同一类中的个体有较大的相似性，不同类的个体差异性很大。</p>\n<ol>\n<li>适用于没有先验知识的分类。如果没有这些事先的经验或一些国际标准、国内标准、行业标准，分类便会显得随意和主观。这时只要设定比较完善的分类变量，就可以通过聚类分析法得到较为科学合理的类别；</li>\n<li>可以处理多个变量决定的分类。例如，要根据消费者购买量的大小进行分类比较容易，但如果在进行数据挖掘时，要求根据消费者的购买量、家庭收入、家庭支出、年龄等多个指标进行分类通常比较复杂，而聚类分析法可以解决这类问题；</li>\n<li>聚类分析法是一种<strong>探索性分析方法</strong>，能够分析事物的内在特点和规律，并<strong>根据相似性原则对事物进行分组</strong>，是数据挖掘中常用的一种技术。</li>\n</ol>\n<h3 id=\"K-means\"><a href=\"#K-means\" class=\"headerlink\" title=\"K-means\"></a>K-means</h3><p>使用最多的聚类算法是 K-means。算法核心如下：</p>\n<ol>\n<li>分配N个中心点</li>\n<li>优化</li>\n<li>迭代</li>\n</ol>\n<p>算法的意思是，先分配N中心点，分别找到与中心点最近的点，根据中心点和最近的这些点的位置，对中心点进行优化，使中心点离这些点的距离最小；<br>根据新的中心点的位置重新划分离中心点最近的点，重复上述优化和分类过程，直到找到所有正确的中心点。</p>\n<p>相当于人为的按照中心点，对数据进行了分类。</p>\n<p>使得同一个类别里面，点的特性都是相似的；不同的类别里面，点的特性都是相异的。</p>\n<h3 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h3><p>聚类分析适合对多个变量进行分类（多个维度）。</p>\n<h4 id=\"可以用在客户细分上面。\"><a href=\"#可以用在客户细分上面。\" class=\"headerlink\" title=\"可以用在客户细分上面。\"></a>可以用在客户细分上面。</h4><p>消费同一种类的商品或服务时，不同的客户有不同的消费特点，通过研究这些特点，企业可以制定出不同的营销组合，从而获取最大的消费者剩余，这就是客户细分的主要目的。</p>\n<h4 id=\"在实验单元选择中的应用\"><a href=\"#在实验单元选择中的应用\" class=\"headerlink\" title=\"在实验单元选择中的应用\"></a>在实验单元选择中的应用</h4><p>在实验调查方法中，最常用的是前后单组对比实验、对照组对比实验和前后对照组对比实验。</p>\n<p>这些方法要求实验组和对照组的单元具有可比性，即两类单元的主客观条件基本一致。</p>\n<p>通过聚类分析，可将待选的实验市场（商场、居民区、城市等）分成同质的几类小组，在同一组内选择实验单位和非实验单位，这样便保证了这两个单位之间具有了一定的可比性。</p>\n<p>聚类时，商店的规模、类型、设备状况、所处的地段、管理水平等就是聚类的分析变量。聚类分析在抽样方案设计中的应用。</p>\n<h4 id=\"在销售片区确定中的应用\"><a href=\"#在销售片区确定中的应用\" class=\"headerlink\" title=\"在销售片区确定中的应用\"></a>在销售片区确定中的应用</h4><h4 id=\"在市场机会研究中的应用\"><a href=\"#在市场机会研究中的应用\" class=\"headerlink\" title=\"在市场机会研究中的应用\"></a>在市场机会研究中的应用</h4><p>其实就是将多种变量作为分析变量，例如产品、品牌知名度、等等，通过分析，可以知道企业和别的哪些企业形成了直接和间接的竞争关系。</p>\n<p>聚类以后属于同一类别的产品和品牌就是所分析企业的直接竞争对手。<br>在制定战略时，可以更多的运用“红海战略”。</p>\n<p>在聚类以后，结合每一产品或品牌的多种不同属性的研究，可以发现哪些属性组合目前还没有融入产品或品牌中，从而寻找企业在市场中的机会，为企业制定合理的“蓝海战略”提供基础性的资料。</p>\n<h2 id=\"主成分分析\"><a href=\"#主成分分析\" class=\"headerlink\" title=\"主成分分析\"></a>主成分分析</h2><p>用降维的思想，把多个指标转化成少量的综合指标。</p>\n<p>这里探讨的是，在机器学习中，对众多的特征进行降维，找到最重要的一些特征，然后进行学习。</p>\n<p>一个数据集中的第一主成分，是数据集中，具有最大方差的方向。</p>\n<p>这个变换把数据变换到一个新的坐标系统中，使得任何数据投影的第一大方差在第一个坐标(称为第一主成分)上，第二大方差在第二个坐标(第二主成分)上，依次类推。主成分分析经常用减少数据集的维数，同时保持数据集的对方差贡献最大的特征。这是通过保留低阶主成分，忽略高阶主成分做到的。这样低阶成分往往能够保留住数据的最重要方面。</p>\n"},{"title":"设计 AB Test","url":"http://lilyalove.com/2017/08/04/AB-test-design/","content":"<h1 id=\"设计A-B-测试\"><a href=\"#设计A-B-测试\" class=\"headerlink\" title=\"设计A/B 测试\"></a>设计A/B 测试</h1><p>在网络世界中，当你做 A/B 测试时，要谨记的一件事是，确定用户是否会喜欢这个新产品或新功能，该改进对于公司总体目标有没有用处；<br>所以在进行 A/B 测试时，你的目标是设计一个合理且能够给到你可复验的结果的实验，让你能够很好地决定是否要发布一款产品或功能。</p>\n<h4 id=\"A-B-测试的方法\"><a href=\"#A-B-测试的方法\" class=\"headerlink\" title=\"A/B 测试的方法\"></a>A/B 测试的方法</h4><p>一般来说，在科学领域，假设检验是确定创新的关键方法。<br>在A/B测试中，我们最想看到的是对照组和实验组返回一致的响应，让你能真正地决定试验的结构，确定实验组和对照组是否有很明显的差异。</p>\n<h4 id=\"A-B-测试的步骤\"><a href=\"#A-B-测试的步骤\" class=\"headerlink\" title=\"A/B 测试的步骤\"></a>A/B 测试的步骤</h4><ol>\n<li>提出试验假设，和希望通过实验取得的结果；</li>\n<li>选择度量指标，定义并验证指标；</li>\n<li>确定引流单元和总体</li>\n<li>确定试验规模、风险和实验时间；</li>\n<li>对结果进行完整性检验，确保一切顺利；</li>\n</ol>\n<h2 id=\"试验假设\"><a href=\"#试验假设\" class=\"headerlink\" title=\"试验假设\"></a>试验假设</h2><p>以Udacity在线学习网站为例，<br>先提出假设，例如，将开始按钮从粉色改成橘色，将提高按钮的点击概率。由于最终的业务指标是课程完成率，我们还可以假设上述改进会提高终极业务指标，即完成课程的总数。</p>\n<p>接下来，我们需要选择一个指标来测量这个变更。</p>\n<h2 id=\"选择度量指标\"><a href=\"#选择度量指标\" class=\"headerlink\" title=\"选择度量指标\"></a>选择度量指标</h2><p>根据实验设计，我们需要选择两种指标</p>\n<ol>\n<li>不变指标</li>\n<li>评估指标</li>\n</ol>\n<h4 id=\"不变指标\"><a href=\"#不变指标\" class=\"headerlink\" title=\"不变指标\"></a>不变指标</h4><p>不变指标用于不变量检查：这些指标在实验组和对照组中都不会更改。   </p>\n<p>我们需要对不变指标进行完整性检查，确保实验能够顺利实施。   </p>\n<p>如果不变指标通过了完整性检查，说明实验没有受到其他非实验因素的影响，后面对于评估指标的判断是可信的。   </p>\n<p>如果不变指标没有通过完整性检查，说明实验受到了其他因素的影响，这种情况下，我们需要找到影响实验的因素，再重新设计实验或排除该因素，直到不变指标通过完整性检查为止。</p>\n<h4 id=\"评估指标\"><a href=\"#评估指标\" class=\"headerlink\" title=\"评估指标\"></a>评估指标</h4><p>用来评估实验效果的指标。</p>\n<p>通过该指标，比较实验组和对照组是否存在统计显著性，从而提出建议。</p>\n<p>可以使用假设检验分析方法。</p>\n<h2 id=\"确定引流单元\"><a href=\"#确定引流单元\" class=\"headerlink\" title=\"确定引流单元\"></a>确定引流单元</h2><p>我们要选择总体。<br>—— 要判定哪些是合格对象，是所有人，还是仅限于美国，还是其他？在完整性检验与评价指标计算过程中，要保证测试与指标计算，施加与同等总体。</p>\n<p>我们要决定实验组和对照组中的实验对象是什么？<br>—— 总体中被选为测试对象的单元叫做分组单元，也就是引流单元。</p>\n<p>选择实验对象是指：<br>—— 选择合适的引流单元，引流单元也就是分组单元。</p>\n<p>常见的引流单元有：</p>\n<ol>\n<li>user-id ：用户ID</li>\n<li>cookie：网站自动为用户建立的</li>\n<li>event：一个事件，适用于不可见的更改，不然更改对于同一个用户有可能一会儿可见，一会儿不可见，用户无法获得一致的体验</li>\n<li>device ID：设备ID，只能标识移动设备，不能跨平台保持一致性</li>\n<li>IP address：IP地址，用户登录时使用的网不同，IP也会不一样</li>\n</ol>\n<p>引流单元的选择有以下几个条件：</p>\n<ol>\n<li>用户一致性。<ol>\n<li>针对可见更改或需要知道具体用户的更改，常用 user-id 和 cookie等引流单元。 <ol>\n<li>user-id：保持各个设备中的一致性</li>\n<li>cookie：保持登录前后的一致性</li>\n</ol>\n</li>\n<li>针对不可见更改<ol>\n<li>event</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>道德问题<ol>\n<li>如果使用 user-id，需要保证安全性和用户知情权</li>\n</ol>\n</li>\n<li>差异性<ol>\n<li>需要尽量使引流单元（分组单元）和分析单元一致。</li>\n<li>分析单元是指指标的分母，例如：计算点击率指标时，用点击量除以页面查看量，那么页面查看量就是分析单元</li>\n<li>如果分析单元不同于分组单元时，使用分析方法计算差异性时，会导致差异性大大增加。</li>\n<li>原因是：用分析方法计算差异时，我们会假设数据的分布，例如假设数据符合二项分布，并假设每次事件发生是独立的，例如，每次将cookie分到实验组或者对照组这个事件是独立的。如果引流单元和分析单元都是cookie，那我们假设每次事件独立是有效的。如果引流单元为 user-id，分析单元为 cookie，那假设每次事件独立则是无效的，因为按user-id分组，它们之间实际上已经存在了某种关系，而这种关系会导致差异性大大增加。也提高了实验的风险。</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"计算实验规模\"><a href=\"#计算实验规模\" class=\"headerlink\" title=\"计算实验规模\"></a>计算实验规模</h2><p>在实验开始前，我们需要决定采集多少实验对象，来获取统计显著性结果。</p>\n<p>如果想发现任何有意思的东西，我们需要确保足够的功效，从而得到高概率的结果，也就是统计显著性。</p>\n<p>功效与规模呈现负面关系。<br>想要探测的改变越小，或者想要的置信度越高，需要运行的实验规模就越大，也就是对照组和实验组需要更多的实验对象。</p>\n<p>实验规模可以通过在线计算器来计算。<br>链接如下：<br><a href=\"http://www.evanmiller.org/ab-testing/sample-size.html#!10.93;80;5;1.56;1\" target=\"_blank\" rel=\"external\">http://www.evanmiller.org/ab-testing/sample-size.html#!10.93;80;5;1.56;1</a></p>\n<p>实验规模由以下几个方面决定</p>\n<ol>\n<li>α 置信度</li>\n<li>β = P(fail to reject / null false)  （通常用1-β来视为实验的敏感度，敏感度越高，越容易检测到差异。根据经验，1-β 一般设置为 80%）</li>\n<li>dmin（<strong>最小实际显著性</strong>，也就是实验最小达到什么变化，才具有实际意义，这个值是根据经验估算出来的，需要考虑实际情况和其他成本）</li>\n<li>SE标准误差</li>\n</ol>\n<p>页面规模越大，标准误差越小。置信区间也就越小。</p>\n<h2 id=\"计算实验所需时间\"><a href=\"#计算实验所需时间\" class=\"headerlink\" title=\"计算实验所需时间\"></a>计算实验所需时间</h2><p>这个主要是根据实验总体规模，和每天能够分配到该A/B测试的流量来定的。</p>\n<p>主要会评估实验的风险，来确定可以投入的流量。</p>\n<p>另外，需要考虑实验时间。如果太长的话，可能会出现其他不可控因素。一般比较合适的时间是在两周左右。</p>\n<p>同时，对于可见的新功能改进，可以给用户留一定的探索时间。因为可能会有新奇效应。</p>\n<h2 id=\"评估实验风险\"><a href=\"#评估实验风险\" class=\"headerlink\" title=\"评估实验风险\"></a>评估实验风险</h2><p>风险主要是从一下几个方面来评估。</p>\n<ol>\n<li>从身体、情感、心理方面</li>\n<li>从道德伦理方面</li>\n<li>数据库安全方面</li>\n<li>数据敏感性方面</li>\n</ol>\n<p><strong>实验开始后，我们要按照实验设计，开始收集数据。达到预期时间后，根据数据来进行分析。</strong></p>\n<h1 id=\"实验分析\"><a href=\"#实验分析\" class=\"headerlink\" title=\"实验分析\"></a>实验分析</h1><h2 id=\"进行完整性（合理性）检查\"><a href=\"#进行完整性（合理性）检查\" class=\"headerlink\" title=\"进行完整性（合理性）检查\"></a>进行完整性（合理性）检查</h2><p>合理性检查的重要性：<br>由于实验过程中，有太多环节可能会出现差错，导致实验结果无效，例如，实验组和对照组分配错误，或设置了不同的流量筛选条件，或设计了采集数据的功能，但实际采集到的数据并不是目标对象，或计算点击概率的方法出现了错误，等等。</p>\n<p>所以，我们要在分析实验结果之前，对这些进行测试。</p>\n<p>合理性检查主要是检查不变指标。主要有两种检查对象：</p>\n<ol>\n<li>需要检查实验组和对照组的总体规模，看是否具有可比性；</li>\n<li>需要检查实际的不变量，这类指标不随实验的进行而发生改变，而你要做的就是检测它们是否没有发生变化；</li>\n</ol>\n<p>只有完成上述的完整性检查后，才能进入后续的分析阶段，判断实验是否合理，并提出建议。</p>\n<h3 id=\"如何进行完整性检查？\"><a href=\"#如何进行完整性检查？\" class=\"headerlink\" title=\"如何进行完整性检查？\"></a>如何进行完整性检查？</h3><p>检查数据在实验组和对照组中是否有合理的相似性。</p>\n<p>相似性是指，从统计学上来说，实验组和对照组的值没有显著性差异。</p>\n<h4 id=\"检查实验组和对照组的总体规模，看是否具有可比性\"><a href=\"#检查实验组和对照组的总体规模，看是否具有可比性\" class=\"headerlink\" title=\"检查实验组和对照组的总体规模，看是否具有可比性\"></a>检查实验组和对照组的总体规模，看是否具有可比性</h4><p>假设实验以cookies为转移单元。实验每天想实验组和对照组分配各一半流量，实验时间是15天。实验组分配到的总cookies数量是61818，对照组分配到的总cookies是64454.<br>如何判断对照组和实验组的cookie总量的差异是否在你的预料之内？</p>\n<p>对于这个问题，由于我们分配cookie时，会尽量保证两个组条件一致，故每条cookie进入实验组和对照组的概率是一样的，P = 0.5<br>由于分到实验组还是对照组，每次分配只能有一种结果，是相对对立的，且多次分配是相互独立的，故而分到对照组的次数（或者是实验组）遵循二项分布定理。所以，可以构建一个二项式置信区间。</p>\n<p>（二项分布：二项分布（英语：Binomial distribution）是n个独立的是/非试验中成功的次数的离散概率分布，其中每次试验的成功概率为p）</p>\n<p>在本例中，由于总体有12万数据，已经足够假设该二项分布逼近正态分布。</p>\n<ol>\n<li><p>计算二项分布的标准差，公式为 $SE = \\sqrt{p(1-p)/N}$</p>\n</li>\n<li><p>由于 P=0.5， $SE = \\sqrt{(0.5*(1-0.5)/(61818+64454))}$ = 0.0014   </p>\n</li>\n<li>在α = 0.05的情况下，$m = z<em>SE = 1.96</em>0.0014 = 0.0027$</li>\n<li>分配到对照组的概率的置信区间为： (0.0473, 0.0527)</li>\n</ol>\n<p>计算实际得到的对照组的概率为： P= 64454/(64454+61818) = 0.5104<br>不在置信区间内，故有可能是实验设置有问题。</p>\n<h5 id=\"检查问题\"><a href=\"#检查问题\" class=\"headerlink\" title=\"检查问题\"></a>检查问题</h5><p>在这种情况下，可以通过每天分配到对照组的概率来查看，是某天的数据出了问题，还是大部分出了问题，从而找到问题的原因。</p>\n<p>只有找到了问题，解决了问题，才能进行下一步的分析。</p>\n<h2 id=\"效应大小检验\"><a href=\"#效应大小检验\" class=\"headerlink\" title=\"效应大小检验\"></a>效应大小检验</h2><p>效应大小的评估方法：计算评估指标在实验组和对照组之间的差异的置信区间。<br>如果置信区间不包含 0（这就是说，你可以确信它是会变的），这个指标具有统计显著性。如果置信区间不包含实际显著性边界（这就是说，你可以确信变化对业务是有用的）。</p>\n<p>实际显著性边界是指根据经验，估算数据发生多少改变才是有意义的。这个根据网站的体量，以及进行功能改进的成本等等来估算，找到一个合适的值。只有改进至少达到这个值，才认为实验时有效果的。</p>\n<p><strong>案例基本数据如下：</strong></p>\n<p>假设评估指标为总转化率，总转化率 = 总试用课程量 / 总点击量<br>其中<br>对照组：总点击量17293、总试用课程用户量3785，P1 = 3785/17293<br>实验组：总点击量17260、总试用课程用户量3423，P2 = 3423/17260</p>\n<p><strong>则计算实验组与对照组差异的置信区间如下：</strong></p>\n<p>根据上述条件可知： P1 = 0.2189, P2 = 0.1983<br>实验组与对照组的概率差 P(diff) = P2-P1 = -0.0206</p>\n<p>接下来，我们通过组合概率来计算标准偏差和误差范围</p>\n<p>组合概率： $P(pool) = (x1 + x2)/(N1 + N2) = (3785+3423)/(17293+17260) = 0.2086$</p>\n<p>组合标准差：<br>SE(pool) = sqrt[p(pool)<em>(1-p(pool))</em>(1/N1 + 1/N2)]<br>= sqrt[0.2086<em>(1-2086)</em>(1/17293+1/17260)] = 0.0044</p>\n<p>误差范围：<br>$m = z<em>SE(pool) = 1.96</em>0.0044$ = 0.0086 (α=0.05)</p>\n<p>则置信区间为<br>下限：P(diff)-m = -0.0292<br>上限：P(diff)+m = -0.012</p>\n<p>由于 假设H0 是，实验组和对照组没有差异，就 d = 0, d~(0, SE(pool))<br>故，当 d &gt; m 或 d &lt; -m 时，可以拒绝零假设。由于 -0.0206 &lt; -m ，故拒绝零假设，实验组和对照组有负的显著性差异。</p>\n<p>由于根据经验估计的最小实际显著性是 d(min) = -0.01，而置信区间不包含 d(min), 故实验同时具有实际显著性。</p>\n<h2 id=\"符号检验\"><a href=\"#符号检验\" class=\"headerlink\" title=\"符号检验\"></a>符号检验</h2><p>可以通过以下链接来进行符号检验：<br><a href=\"http://graphpad.com/quickcalcs/binomial1.cfm\" target=\"_blank\" rel=\"external\">http://graphpad.com/quickcalcs/binomial1.cfm</a></p>\n<p>符号检验需要返回查看每天的具体数据，需要计算总天数（假设为23），和对照组大于实验组的天数（假设为19）。<br>由于假设是实验组和对照组相似，故我们假设对照组&gt;实验组的概率为0.5，反之也为0.5</p>\n<p>我们通过在线计算器，算出发生概率P-value = 0.0026<br>而 α = 0.05， 故而可以说小概率事件发生了，这种情况具有显著性。</p>\n<p>如果 P-value &gt; α ，说明不具有统计显著性。</p>\n<h1 id=\"实验结果\"><a href=\"#实验结果\" class=\"headerlink\" title=\"实验结果\"></a>实验结果</h1><p>查看分析的结果与预期结果是否一致，再根据结果来评估实验是否可行</p>\n<h1 id=\"建议\"><a href=\"#建议\" class=\"headerlink\" title=\"建议\"></a>建议</h1><p>给出建议。</p>\n"},{"title":"AB Test 介绍","url":"http://lilyalove.com/2017/08/03/AB-test-introduce/","content":"<h1 id=\"AB测试介绍\"><a href=\"#AB测试介绍\" class=\"headerlink\" title=\"AB测试介绍\"></a>AB测试介绍</h1><h2 id=\"什么是AB测试？\"><a href=\"#什么是AB测试？\" class=\"headerlink\" title=\"什么是AB测试？\"></a>什么是AB测试？</h2><p>A/B Test 是一个用于在线测试的常规方法，用于测试新产品或新功能。</p>\n<h3 id=\"如何操作\"><a href=\"#如何操作\" class=\"headerlink\" title=\"如何操作\"></a>如何操作</h3><p>我们需要设置两组用户，一组设置为对照组，采用已有的产品或功能，另一组为实验组，采用新版产品或功能。<br>然后，找到上述两组用户做出的不同响应，确认哪个版本的功能更好。</p>\n<h3 id=\"A-B-Test-适用情况\"><a href=\"#A-B-Test-适用情况\" class=\"headerlink\" title=\"A/B Test 适用情况\"></a>A/B Test 适用情况</h3><p>存在明确的对照组和实验组，能够选择合适的指标评估此类改变，适合使用A/B Test。</p>\n<ol>\n<li>我们可以通过A/B Test 对很大范围的事情进行测试，比如增加一些新功能，或界面中增加的内容，网站的不同外观等。</li>\n<li>我们还可以将A/B Test用于十分复杂的改变，例如排名变动。</li>\n<li>我们也可以针对不确定用户是否会注意到的改变进行测试，例如页面加载时间。</li>\n</ol>\n<p>A/B Test 案例如下：</p>\n<ol>\n<li><p>Amazon首次开始做个性化推荐时，他们想看一下用户是否真的会购买更多商品，他们发现，由于个性化推荐，他们的收益有了显著增加。</p>\n</li>\n<li><p>Linkedin测试了一个改变，尝试确定他们是否应显示新文章还是鼓励大家增加新联系人，这就是排名变动。</p>\n</li>\n<li>100ms的页面加载时间不是很多，但是 Google 和 Amazon 都运行了测试。Amazon 在2007年证实，每个页面增加 100ms 的延时，会导致收入降低 1%。对于Google，也得到了相似的结果。 你可以发现，平均来看，100ms 看起来并不多，但每增加 100ms 的延迟，人们查询的数量真的降低了。</li>\n</ol>\n<p>这就是可以从 A/B Test中学到的东西。</p>\n<h3 id=\"A-B-Test-不适用的情况\"><a href=\"#A-B-Test-不适用的情况\" class=\"headerlink\" title=\"A/B Test 不适用的情况\"></a>A/B Test 不适用的情况</h3><ol>\n<li><strong>A/B Test 无法真实的告诉你是否遗漏了什么东西。</strong><br> 例如：亚马逊想知道页面上是否有用户需要，但是他们还没有提供的商品。这种情况没办法用 A/B Test 来寻找答案。</li>\n<li><strong>A/B Test 不适用与测试新的体验。</strong><br> 例如：某 SaaS 公司已经有了免费服务，例如有待办事项列表。他们想提供带有其他功能的高级服务，如需使用高级服务，用户需要升级，创建登录账户，并探索新的功能。<br> 这种情况下，也不适合用 A/B Test 来寻找答案。</li>\n<li><strong>A/B 不适用与需要很长时间才能验证的测试。</strong><br> 例如：某租房网站，想测试促进用户推荐页面给好友有没有效果，但是这个效果检验需要很长时间，可能是一周，可能是半年，一年。因为租房并不是经常发生的。这种情况也不适合。</li>\n</ol>\n<p>另外，当你测试新的体验时，你当前已有的那些用户，可能会觉得改变了他们的体验，这被称为改变厌恶症；<br>另一种情况是，他们觉得这些都是新的，然后尝试所有东西，这被称为新奇效应。</p>\n<h3 id=\"对于不适用情况，补充技术\"><a href=\"#对于不适用情况，补充技术\" class=\"headerlink\" title=\"对于不适用情况，补充技术\"></a>对于不适用情况，补充技术</h3><p>用户在你的网站上进行操作的日志，可以通过检查或观察分析日志，得出结论，是什么原因造成其行为的改变。<br>然后可能要沿着这个方向努力，然后设计实验，完成随机化和试验，进行前瞻性分析。</p>\n<p>可以把两种技术结合来使用：<br>查看操作日志得出假设，运行A/B Test验证你的理论是否合理。</p>\n<p>还有一些其他技术：</p>\n<ol>\n<li>用户体验研究</li>\n<li>焦点小组</li>\n<li>调查</li>\n<li>人为评价</li>\n</ol>\n<p>A/B Test 可以给我们大量宽泛的定量数据，而上述技术可以给我们非常深入的定性数据作为A/B Test 的补充。</p>\n<p>这些技术可以告诉我们该爬哪座山，也就是得出假设。</p>\n"},{"title":"AB Test 评估准则","url":"http://lilyalove.com/2017/08/03/AB-test-assessment/","content":"<h3 id=\"本文记录-AB-Test-评估准则，用于指导-AB-Test设计\"><a href=\"#本文记录-AB-Test-评估准则，用于指导-AB-Test设计\" class=\"headerlink\" title=\"本文记录 AB Test 评估准则，用于指导 AB Test设计\"></a>本文记录 AB Test 评估准则，用于指导 AB Test设计</h3><h1 id=\"度量选择\"><a href=\"#度量选择\" class=\"headerlink\" title=\"度量选择\"></a>度量选择</h1><table>\n<thead>\n<tr>\n<th>标准</th>\n<th>符合要求</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>是否为试验选择了适当的不变量和评估指标？</td>\n<td>已为试验选好一组适当的度量，未遗漏任何必要或重要度量。</td>\n</tr>\n<tr>\n<td>是否为度量选择提供了合理理由？</td>\n<td>每个度量都有清楚合理的理由，解释为何将其选作不变度量及评估度量。</td>\n</tr>\n<tr>\n<td>我们希望通过开展此试验得到什么结果？</td>\n<td>报告中清楚地说明了我们希望通过开展此试验取得的结果，且所述结果与试验目的一致。</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"变异性\"><a href=\"#变异性\" class=\"headerlink\" title=\"变异性\"></a>变异性</h1><table>\n<thead>\n<tr>\n<th>标准</th>\n<th>符合要求</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>是否正确计算了所有评估度量的标准偏差？</td>\n<td>已正确计算所有评估度量的标准偏差。</td>\n</tr>\n<tr>\n<td>是否通过推理说明每个分析标准偏差是正确的？</td>\n<td>每个评估度量都有清楚正确的解释，说明分析变异性是否可能匹配经验变异性。</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"规模\"><a href=\"#规模\" class=\"headerlink\" title=\"规模\"></a>规模</h1><table>\n<thead>\n<tr>\n<th>标准</th>\n<th>符合要求</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>页面浏览量是否正确考虑了计划的分析？</td>\n<td>考虑到学生是否使用 Bonferroni 校正情况下所给的页面浏览量是正确的。</td>\n</tr>\n<tr>\n<td>是否基于风险选择了适当的试验暴露水平？</td>\n<td>将对试验的风险等级提供理由充分的论点，并将相应选择转移流量的部分。</td>\n</tr>\n<tr>\n<td>试验的持续时间是否正确考虑了暴露？</td>\n<td>试验的持续时间在考虑到所选转移流量部分后进行了正确计算。</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"完整性检验\"><a href=\"#完整性检验\" class=\"headerlink\" title=\"完整性检验\"></a>完整性检验</h1><table>\n<thead>\n<tr>\n<th>标准</th>\n<th>符合要求</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>是否正确执行了完整性检查？</td>\n<td>正确计算了所选的所有不变度量的完整性检查。</td>\n</tr>\n<tr>\n<td>是否分析了完整性检查的结果？</td>\n<td>评估了完整性检查：通过或未通过。    若未通过完整性检查，通过分析探索了失败原因并中止试验。</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"效应量检验\"><a href=\"#效应量检验\" class=\"headerlink\" title=\"效应量检验\"></a>效应量检验</h1><table>\n<thead>\n<tr>\n<th>标准</th>\n<th>符合要求</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>是否对所有评估度量的差异计算了置信区间？</td>\n<td>正确计算了置信区间并报告了所有评估度量的差异。</td>\n</tr>\n<tr>\n<td>是否正确评估了统计显著性与实际显著性？</td>\n<td>正确报告了所有评估度量的统计显著性与实际显著性。</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"符号检验\"><a href=\"#符号检验\" class=\"headerlink\" title=\"符号检验\"></a>符号检验</h1><table>\n<thead>\n<tr>\n<th>标准</th>\n<th>符合要求</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>是否对每个评估度量报告了符号检验 P 值，并表明符号检验是否具有统计显著性？</td>\n<td>对所有评估度量正确报告了 P 值和统计显著性。</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"结果汇总\"><a href=\"#结果汇总\" class=\"headerlink\" title=\"结果汇总\"></a>结果汇总</h1><table>\n<thead>\n<tr>\n<th>标准</th>\n<th>符合要求</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>是否提供了正当理由，说明是否选择使用 Bonferroni 校正？</td>\n<td>报告为是否选择使用 Bonferroni 校正提供了合理理由。</td>\n</tr>\n<tr>\n<td>是否分析了效应量检验和符号检验之间的所有差异？</td>\n<td>为效应量检验和符号检验之间的每项差异提供了充分合理的解释。</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"建议\"><a href=\"#建议\" class=\"headerlink\" title=\"建议\"></a>建议</h1><table>\n<thead>\n<tr>\n<th>标准</th>\n<th>符合要求</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>是否基于试验结果提供了合理建议？</td>\n<td>提供了合理并用数据支持的建议。</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"根进实验\"><a href=\"#根进实验\" class=\"headerlink\" title=\"根进实验\"></a>根进实验</h1><table>\n<thead>\n<tr>\n<th>标准</th>\n<th>符合要求</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>是否为所给目的进行了合理的试验，并提出了明确的假设？</td>\n<td>开展了值得检验的合理试验，并明确说明了试验结果假设。</td>\n</tr>\n<tr>\n<td>是否为提议的试验选择了适当的评估度量，并提供了支持推理？</td>\n<td>报告中选择的度量足以用于评估试验的假设，可在大多数基础设施下进行测量，且报告中提供了充足的支持推理。</td>\n</tr>\n<tr>\n<td>是否为试验选择了合理的转移单位？</td>\n<td>报告中说明了合理的转移单位，并提供了充分的支持理由。</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"SQL操作方法","url":"http://lilyalove.com/2017/08/02/sql_common_skills/","content":"<h1 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h1><h2 id=\"数据库规范\"><a href=\"#数据库规范\" class=\"headerlink\" title=\"数据库规范\"></a>数据库规范</h2><p>规范化是数据库设计的核心思想，规范化涉及在数据库的表格中建立关系，对有关系但是存在于不同表中的数据进行匹配。<br>数据规范化表格的规则如下：</p>\n<ol>\n<li>每行拥有的列数相同，如果有两个值主键相同，我们要将其分成不同的行；</li>\n<li>表格的一列或多列组成键，它确定每行要表示什么；</li>\n<li>在一个规范化表格中，非键列对键进行描述，它们不描述其他非键列；</li>\n<li>在一个规范化表格中，行不会对不存在关系的数据暗示其关系</li>\n</ol>\n<h2 id=\"SQL\"><a href=\"#SQL\" class=\"headerlink\" title=\"SQL\"></a>SQL</h2><p>SQL是专为数据库而建立的操作命令集，是一种功能齐全的数据库语言。</p>\n<h3 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h3><h4 id=\"文本和字符串型\"><a href=\"#文本和字符串型\" class=\"headerlink\" title=\"文本和字符串型\"></a>文本和字符串型</h4><p>text — 任意长度的字符串，如 Python str 或 unicode 类型。</p>\n<p>char(n) — 恰好为 n 个字符的字符串。</p>\n<p>varchar(n) — 最多 n 个字符的字符串。</p>\n<h4 id=\"数值型\"><a href=\"#数值型\" class=\"headerlink\" title=\"数值型\"></a>数值型</h4><p>integer — 整数值，如 Python int。</p>\n<p>real — 浮点值，如 Python float。精确到 6 位小数。</p>\n<p>double precision — 高精度浮点值。 精确到 15 位小数。</p>\n<p>decimal — 准确小数值。   </p>\n<h4 id=\"日期和时间型\"><a href=\"#日期和时间型\" class=\"headerlink\" title=\"日期和时间型\"></a>日期和时间型</h4><p>date — 日历日期，包括年、月、日。</p>\n<p>time — 时间。</p>\n<p>timestamp — 日期和时间。</p>\n<h1 id=\"访问数据库\"><a href=\"#访问数据库\" class=\"headerlink\" title=\"访问数据库\"></a>访问数据库</h1><h2 id=\"SQLite\"><a href=\"#SQLite\" class=\"headerlink\" title=\"SQLite\"></a>SQLite</h2><p>SQLite 是一个关系数据库管理系统。<br>操作数据库之前，我们使用SQLite 的 sqlite3 命令被用来创建新的 SQLite 数据库。   </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sqlite3</span> DatabaseName.db</span><br></pre></td></tr></table></figure>\n<p>通过此命令，可以进入sqlite管理系统中，链接DatabaseName.db数据库。</p>\n<h3 id=\"尝试一些基本的命令行操作\"><a href=\"#尝试一些基本的命令行操作\" class=\"headerlink\" title=\"尝试一些基本的命令行操作\"></a>尝试一些基本的命令行操作</h3><h4 id=\"查看数据库\"><a href=\"#查看数据库\" class=\"headerlink\" title=\"查看数据库\"></a>查看数据库</h4><p>查看sqlite中的数据库   </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">.database</span><br></pre></td></tr></table></figure>\n<h4 id=\"help\"><a href=\"#help\" class=\"headerlink\" title=\"help\"></a>help</h4><p>无论如何，都可以输入.help命令，以获取可用的命令行操作的清单</p>\n<h4 id=\"table\"><a href=\"#table\" class=\"headerlink\" title=\"table\"></a>table</h4><p>数据.table可以看到数据库中的所有数据表。</p>\n<h4 id=\"schema\"><a href=\"#schema\" class=\"headerlink\" title=\"schema\"></a>schema</h4><p>输入.schema table_name，可以看到表格的架构</p>\n<h4 id=\"exit\"><a href=\"#exit\" class=\"headerlink\" title=\"exit\"></a>exit</h4><p>当操作完成时，输入.exit，退出数据库</p>\n<h2 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h2><p>如果数据库之前没有被创建，在使用如下命令后，   </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$sqlite3</span> DatabaseName.db</span><br></pre></td></tr></table></figure>\n<p>会直接创建一个名为 DatabaseName.db 的数据库。</p>\n<p>也可用sql创建数据库    </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">CREATE DATABASE &#25968;&#25454;&#24211;&#21517;&#31216;&#10;```   &#10;&#10;## &#21019;&#24314;&#25968;&#25454;&#34920;</span><br></pre></td></tr></table></figure>\n<p>CREATE TABLE 表名称<br>(<br>列名称1 数据类型,<br>列名称2 数据类型,<br>…….<br>)<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#10;&#20351;&#29992;&#19978;&#36848;&#26041;&#27861;&#21019;&#24314;&#25968;&#25454;&#34920;&#65292;&#24120;&#35265;&#25968;&#25454;&#31867;&#22411;&#65306;Text, CHAR(size), VARCHAR(size), INT(size), FLOAT(size,d)&#10;&#10;## &#21024;&#38500;&#25968;&#25454;&#34920;</span><br></pre></td></tr></table></figure></p>\n<p>DROP TABLE table_name;<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">   &#10;&#20351;&#29992;&#19978;&#36848;&#21629;&#20196;&#21487;&#20197;&#21024;&#38500;&#25968;&#25454;&#34920;&#10;&#10;## &#20174;CSV&#25991;&#20214;&#23548;&#20837;&#25968;&#25454;</span><br></pre></td></tr></table></figure></p>\n<p>sqlite&gt; .mode csv<br>sqlite&gt; .import baseball_data.csv baseball_data<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#10;## &#26356;&#25913;&#25968;&#25454;&#34920;&#21517;&#31216;</span><br></pre></td></tr></table></figure></p>\n<p>sqlite&gt; alter table old_name rename to newname;<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#10;# &#25968;&#25454;&#24211;&#25805;&#20316;&#10;&#10;&#26681;&#25454;&#19978;&#38754;&#30340;&#26041;&#27861;&#65292;&#25105;&#24314;&#31435;&#20102;&#19968;&#20010;baseball.db&#30340;&#25968;&#25454;&#24211;&#65292;&#24182;&#24314;&#31435;&#20102;&#19968;&#20010;baseball&#25968;&#25454;&#34920;&#12290;&#10;&#10;#### &#26597;&#30475;&#24635;&#34892;&#25968;   &#10;&#20195;&#30721;&#22914;&#19979;&#65306;</span><br></pre></td></tr></table></figure></p>\n<p>select count(*) from baseball;</p>\n<p>打印结果：</p>\n<p>count(*)<br>1157<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#10;#### &#25214;&#20986;&#20351;&#29992;&#21491;&#25163;&#65292;&#36523;&#39640;&#22312;72~75&#20043;&#38388;&#65292;&#20307;&#37325;&#26368;&#39640;&#30340;5&#20010;&#20154;&#30340;&#20449;&#24687;  &#10;&#20195;&#30721;&#22914;&#19979;&#65306;</span><br></pre></td></tr></table></figure></p>\n<p>select * from baseball<br>where handedness == ‘R’ and height &gt;= 72 and height &lt;= 75<br>order by weight<br>limit 5;</p>\n<p>打印结果：</p>\n<p>“Ramon Manon”,R,72,150,0.0,0<br>“Manny Trillo”,R,73,150,0.263,61<br>“Dave Concepcion”,R,74,155,0.267,101<br>“Frank Taveras”,R,72,155,0.255,2<br>“Rafael Vasquez”,R,72,160,0.0,0<br>```</p>\n"},{"title":"一场简单的考试，暴露出来很多问题","url":"http://lilyalove.com/2016/06/25/About-attitude/","content":"<p>冷静的心态和充足的准备，是做好一件事情的关键。</p>\n<p>这一感想来源于驾校科目二的考试。我第一次考试时，坡起由于没有停到对应的位置，挂了。第二次由于起步时间超过30s，挂了。<br>第二次参加考试时，坡起还是没有停在标准位置，但是勉强在接受范围内，所以扣了20分，险过。</p>\n<p>这一切其实都是有原因的。</p>\n<p>原因之一，我坡起学的不扎实。科目二一共有五项考试，定点停车、曲线行驶、直角转弯、侧方停车、倒库。其他的四项我都知道如何进行异常处理，只有坡起不会。而我在练习的过程中，坡起其实一直都不能完美的达到标准，而我自己也没有重视这个问题，任由自己学的一点都不扎实。</p>\n<p>原因之二，我的知识点有漏洞，就比如在坡上时间超过30s会挂，我就完全不知道。所以直接导致了我第二次操作的失误。</p>\n<p>原因之三，考场氛围很紧张，直接导致了我也很紧张，不淡定，而且因为要考试，我前一天居然都没睡着。可见我的心态有多差了。或者说太注重得失，不自信。</p>\n<p>这些都导致了我的失误。</p>\n<p>虽然很愤怒，很生气，但是没办法，挂了就是挂了。只能好好总结，争取下次考过。</p>\n<p>我如何克服坡起的问题？</p>\n<p>其实很简单，做好充足的准备。</p>\n<p>首先，必须弄清楚哪些地方会扣分或者挂科，自己心里要清楚，避免趟雷。<br>其次，趁着集中训练的时间，想教练学习如何正确的定点停车，如果出现问题如何调整车辆以便达到目的。</p>\n<p>其次，让自己心态放轻松，这一项最关键的是要把细节都弄清楚，自己心理有底，自然就不会有问题了。</p>\n<p>最后，考试的过程中要小心，每个项目要想清楚怎么操作以后再做，不要在做的过程中想太多，很可能会让自己分心。</p>\n<p>其实补考完之后，我会发现自己相比于第一次考试，弄清楚了更多东西。<br>考试拿驾照其实不是最终的目的，最后要上路开车才是真正的目的。实际道路上面的情况比较考场的情况复杂多了。如果在考场这么规范，简单的道路上都不能完美的达到要求，那即便拿了驾照，回头开车上路也会吃亏。所以，还是要趁可以学习的时候多学点东西，以方便自己应对将来复杂的情况。</p>\n<p>还有就是遇事不要慌张，一定要淡定。只有冷静，才能想到应对办法进行补救。慌慌张张只能让事情变得更坏。</p>\n<p>小事也会反应出一个人的问题。这给我提了个醒。</p>\n"},{"title":"第一周工作总结","url":"http://lilyalove.com/2016/06/21/Some-thing-about-work/","content":"<p>转眼到新公司一周了，一直想找个时间做做总结，但是总苦于没有空。其实是因为懒。</p>\n<p>今天tankery和我说，我一个人来来回回上班都快一年了，从来没觉得累，但是你来这边工作才几天，我觉得好累啊。</p>\n<p>我突然意识到，我一直倒苦水，是会影响到别人的。这样子不仅不会让自己变得更好，还会让别人也陷入困惑中。谁都喜欢和正面乐观的人交往，不喜欢和负面的人交朋友。</p>\n<p>做事情也是，积极正面的正能量能让大家更好的配合，而抱怨并没有任何卵用。</p>\n<p>平时应该多给大家鼓鼓劲儿，让大家一起努力把一件事情做好。而不是遇到困难就退缩，责怪这个责怪那个。这些都没用。</p>\n<p>以后要做一个充满<strong>正能量</strong>的人。 </p>\n<p>特别是产品经理这个职位，更要充满正能量，让大家更好的配合。</p>\n<p>自己手头的东西做的再好也没用，只有大家一起配合，事情才有可能办成。</p>\n"},{"title":"产品方法论","url":"http://lilyalove.com/2016/06/14/Product-methodology/","content":"<p>写这篇总结的原因：从上一家公司舒适的环境中走出来了，本来想着面试进一个大公司应该没啥问题吧，毕竟有一年多的经验了，还有这么多朋友帮忙内推。<br>结果，发现有再多的朋友内推也没用，水平不行就是面不进去。</p>\n<p>索性我运气还不错，虽然没有面试通过，但是遇到了很多好的面试官。他们给了我很多建议。其中，最重要的就是要善于思考总结，善于分析，形成自己的产品方法论。</p>\n<p>而这些，我都没有。</p>\n<p>我在上一家公司，最大的问题就是做事情没有形成一个闭环。稀里糊涂的做了很多事情，但是却不知道为什么要这么做，这么做有什么用。</p>\n<p>一般来说，做产品的完整链条式：需求调研（这个时候其实就应该想好怎么做，做完了以后怎么验证效果）—— 需求立项 —— 需求文档 —— 跟进项目 —— 开发 —— 测试 —— 上线 —— 数据分析 —— 迭代优化</p>\n<p><strong>这里面的闭环其实是：发现问题 —— 想出解决方法 —— 验证效果</strong></p>\n<p>而我一直做的都是中间这一步，第一步和第三步都没有做。</p>\n<p><strong>发现问题</strong>：我的需求来源并不是经过自己的分析得出来的，而是来自于老板和其他人，或者用户那里得来，往往并没有发现本质问题，而在做表面的事情；</p>\n<p><strong>想出解决方法</strong>：由于问题不是自己发现的，所以制定解决方案的时候，往往是一些表面的解决方案，不会考虑的很长远，或着是来自于别人的一些解决办法。虽然做了这一步，但是自己在这个过程中没有任何的成就感，也不会有什么深入的分析和思考，自然也就学不到东西了。</p>\n<p><strong>验证效果</strong>：这一步更坑了，由于老板疑心病重，对谁都不信任，所以我作为一个产品，看不到任何数据。。。每个版本做完，不知道数据有什么变化，完全不知道这了这个功能有没有效果。。。听听都觉得很坑爹吧。。。  </p>\n<p>而我在上一家公司的时候竟然毫不自知，居然不亦乐乎的呆了一年半。现在想想，真的很庆幸自己没有被眼前所谓的安稳和美好所蒙蔽，不管出于什么原因也好，最终走了出来。</p>\n<p>也感谢出了公司以后一路受到的打击和挫折，让我感受到自己和别的产品经理的差别，和别人做事方式的差距。</p>\n<p>虽然这个过程很痛苦，也会自我否定，但是走出来以后就会觉得自己成长了，终于懂了做产品到底应该怎么做，到底什么是产品经理。</p>\n<p>虽然我的下一份工作还是在一个创业小公司，而且不算是纯粹的互联网企业，但是我可以有很多资源和时间来寻找各种问题，分析问题，验证效果，逐渐来形成自己的一套方法。<br>我很感激这份工作，真的。重新拥有一个好的机会真的不容易。</p>\n<p>这个阶段，我突然明白这些东西，完全是因为庄哥的指点，我真的很感激他。我想牢记现在这种感觉。这种豁然开朗的感觉。</p>\n<h1 id=\"产品的方法论\"><a href=\"#产品的方法论\" class=\"headerlink\" title=\"产品的方法论\"></a>产品的方法论</h1><p>发现问题（发现需求） —— 解决方案（满足需求） —— 验证效果（查看数据情况）</p>\n<p>这三个步骤各自都会有很多方法，可以自己慢慢的去总结积累。牛逼的产品是能够让自己的产品变的更好的，让每一步付出都有意义，不过这个需要经验。急不来。</p>\n<p>每一步都很难，但是一定不要畏惧，要去尝试，要去验证。</p>\n<p>美做一件事情之前，都应该把这三步想清楚，一定要验证效果，也就是分析数据的变化。</p>\n<p>产品一定要关注日活、留存、停留时间等多种数据，数据越丰富越好，然后进行分析，找出问题，解决问题。</p>\n<p>一切以数据说话。</p>\n<p>注：下一家公司，我一定要按照这种方式来做事，慢慢形成自己的套路，弥补自己产品能力上的不足，为下一步做打算。</p>\n"},{"title":"如何成为一个合格的产品经理","url":"http://lilyalove.com/2016/06/06/The-Ability-of-A-good-Product-Manager/","content":"<p><strong>问题</strong>：如何成为一个合格的产品经理？</p>\n<p><strong>问题分解</strong>:</p>\n<ol>\n<li>什么是产品经理？</li>\n<li>从招聘要求看产品经理的能力需求</li>\n<li>如何增强自己的产品能力？</li>\n</ol>\n<h2 id=\"1-什么是产品经理？\"><a href=\"#1-什么是产品经理？\" class=\"headerlink\" title=\"1. 什么是产品经理？\"></a>1. 什么是产品经理？</h2><p>产品经理，可以分为两个部分：产品和经理</p>\n<h3 id=\"产品\"><a href=\"#产品\" class=\"headerlink\" title=\"产品\"></a>产品</h3><p><strong>产品</strong>：这里主要是指互联网产品。产品就是我们日常生活中所用的各种互联网产品，也是产品经理的最终产出。<br>例如：<br>社交类产品：qq、微信、陌陌、赤兔、知乎<br>工具类产品：uc浏览器、腾讯管家、百度地图、百度搜索、菜谱<br>娱乐类产品：音乐、游戏、视频、直播、漫画<br>电商类产品：淘宝、京东、苏宁易购<br>o2o类产品：携程、饿了么、生鲜<br>从上面的产品可以看出，这些产品都是至少能够满足用户某个需求的。</p>\n<p>产品的特点：</p>\n<ol>\n<li>能够解决用户的需求、痛点；</li>\n<li>能够带来用户价值，让用户生活更加便利，或者更爽；</li>\n<li>能够带来商业价值，给公司带来盈利；</li>\n</ol>\n<h3 id=\"经理\"><a href=\"#经理\" class=\"headerlink\" title=\"经理\"></a>经理</h3><p>经理需要做什么呢？这里从<strong>产品设计过程</strong>和<strong>业务流程</strong>上加以说明。</p>\n<p><strong>从产品设计过程来看</strong>，产品经理的核心是产品的设计：</p>\n<ul>\n<li>搭建产品架构</li>\n<li>输出需求文档（PRD、MRD、BRD、竞品分析）</li>\n<li>输出产品流程图（Visio）</li>\n<li>输出产品原型图（Axure、PS）</li>\n</ul>\n<p><strong>从业务流程来看</strong>，产品经理的核心是项目管理，保证产品正常上线。</p>\n<ul>\n<li>业务组成的角色有哪些：产品、设计、技术、测试、运营、商务</li>\n<li>产品从战略方向出发构建产品形态；设计、技术和测试实现和支撑产品功能；运营维护产品的活跃度；市场和品牌维护产品形象，扩大产品影响力；</li>\n<li>产品经理需要争取资源，协调各个角色，让大家共同做好产品</li>\n</ul>\n<p>所以：产品经理就是一个链接用户和产品的角色，在产品的整个的生命周期中，产品需要驱动和影响设计、技术、测试、运营和市场等人员协助自己完成整个产品的设计，跟进用户反馈和市场反馈迭代产品，并最终输出有用户价值和商业价值的产品。</p>\n<h2 id=\"2-从招聘要求看产品经理的工作要求\"><a href=\"#2-从招聘要求看产品经理的工作要求\" class=\"headerlink\" title=\"2. 从招聘要求看产品经理的工作要求\"></a>2. 从招聘要求看产品经理的工作要求</h2><p>以下是从腾讯的高级产品经理招聘要求里面截取，选择腾讯主要是因为，腾讯产品做的好。<br>大致如下：</p>\n<ul>\n<li>本科以上学历；</li>\n<li>有技术背景优先。（应该是为了便于沟通）</li>\n<li>有带领产品团队的管理经验，在必要时可以承担管理职责；（业务负责人的角色）</li>\n<li>5年以上成功互联网或软产品的产品策划经验（功能设计和可用性设计）（产品的基本功）；</li>\n<li>组织过产品立项、设计、研发、推广应用及维护改进的整个过程；</li>\n<li>有较好的和技术、运营、媒体沟通的能力；</li>\n<li>良好的需求分析能力；</li>\n<li>有较强的执行、跟进能力；</li>\n<li>强烈的市场导向和创新意识；</li>\n<li>强烈的进取心和产品主人翁意识。</li>\n<li>有较好的行业和市场嗅觉，对智能推荐有较好了解，对数据敏感，根据数据制定下一步计划，推动推荐系统的改进；</li>\n</ul>\n<p><strong>将上面的要求分析总结一下，可以得出产品的要求如下</strong>：</p>\n<p><strong>产品的基本功</strong></p>\n<ol>\n<li>良好的需求分析能力</li>\n<li>产品策划能力，功能设计和可用性设计;</li>\n<li>原型设计能力</li>\n<li>对数据敏感，有较强的数据分析能力</li>\n</ol>\n<p><strong>产品经理的素质</strong></p>\n<ol>\n<li>和各个角色的沟通能力；</li>\n<li>有较强的执行、跟进能力；</li>\n<li>强烈的责任心、进取心和主人翁意识；</li>\n<li>能承受较大的压力；</li>\n<li>乐观，积极</li>\n<li>强烈的市场导向和创新意识；</li>\n</ol>\n<p><strong>产品经理的业务要求</strong></p>\n<ol>\n<li>熟悉产品整个生命周期，组织过产品立项、设计、研发、推广应用及维护改进的整个过程；</li>\n<li>有较好的行业和市场嗅觉，对数据敏感，根据数据制定下一步计划，推动推荐系统的改进；</li>\n<li>有带领产品团队的管理经验，在必要时可以承担管理职责；</li>\n</ol>\n<p>但最最重要的能力是，<strong>产品经理要会思考，会总结，形成成熟的产品方法论。</strong><br><strong>能够解决问题，让正确的事情相继发生。</strong></p>\n<h2 id=\"3-如何增加自己的产品能力\"><a href=\"#3-如何增加自己的产品能力\" class=\"headerlink\" title=\"3. 如何增加自己的产品能力\"></a>3. 如何增加自己的产品能力</h2><h3 id=\"锻炼自己对于产品的理解\"><a href=\"#锻炼自己对于产品的理解\" class=\"headerlink\" title=\"锻炼自己对于产品的理解\"></a>锻炼自己对于产品的理解</h3><ol>\n<li>公司定位的理解；</li>\n<li>用户定位的理解；</li>\n<li>对于市场情况的理解；</li>\n<li>对于产品定位的理解；</li>\n<li>对于公司研发能力的理解；</li>\n<li>对于其他部门状况的理解；</li>\n</ol>\n<p>这样可以明确产品的方向和战略，让自己的产品能在激烈的市场竞争中找到存活并发展的方法；</p>\n<h3 id=\"提高分析和判断能力\"><a href=\"#提高分析和判断能力\" class=\"headerlink\" title=\"提高分析和判断能力\"></a>提高分析和判断能力</h3><ol>\n<li>要懂用户，了解用户，知道他们需要什么</li>\n<li>做每件事情都要明白目的是什么，能够带来什么提升</li>\n<li>基于理解作出靠谱的判断</li>\n<li>能够分清事情的轻重缓急</li>\n</ol>\n<p>产品经理做任何决定的时候，都要做到：<strong>讲道理</strong></p>\n<h3 id=\"确保良好的沟通和表达能力\"><a href=\"#确保良好的沟通和表达能力\" class=\"headerlink\" title=\"确保良好的沟通和表达能力\"></a>确保良好的沟通和表达能力</h3><p>沟通能力：</p>\n<ol>\n<li>明白自己的角色，始终清楚自己是产品经理，要对产品负责任；</li>\n<li>用道理和事实来说服别人；</li>\n<li>主动去了解伙伴的困难，尽量帮忙解决，解决不了的一起想备选方案；</li>\n<li>主动去协调；</li>\n<li>随时让整个产品线的同事了解全局的进度，让大家产生主人意识；</li>\n<li>整理用户反馈并让同事们知道，让大家都能产生成就感和价值感，并形成对产品的主人翁意识</li>\n</ol>\n<p>对于表达能力：</p>\n<ol>\n<li>每次讨论问题，都要明确目的，有腹稿；</li>\n<li>描述问题清晰，想好了再说，同时不要偏题；</li>\n<li>每个问题都要形成结论；</li>\n<li>不要把任何事情都交给别人决定，自己要时刻准备提出更多的方案和建议；</li>\n<li>每次讨论的过程和结论都有记录，可以随时查阅</li>\n</ol>\n<h3 id=\"培养对于市场洞察力\"><a href=\"#培养对于市场洞察力\" class=\"headerlink\" title=\"培养对于市场洞察力\"></a>培养对于市场洞察力</h3><ol>\n<li>去了解市场上有哪些产品，这些产品背后的商业模式和未来的想象力是什么？</li>\n<li>多去看看各种实时热点，看看产生的原因是什么？</li>\n<li>分析一些社会现象，了解人的本质是什么？</li>\n<li>多去用用各种好的产品，并形成自己的产品观</li>\n</ol>\n<h3 id=\"广泛涉猎\"><a href=\"#广泛涉猎\" class=\"headerlink\" title=\"广泛涉猎\"></a>广泛涉猎</h3><p>多去了解其他岗位在做什么，有哪些解决问题的方法，便于做产品决策时能够正确、有效。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>主动、思考、分析、总结，形成方法论。</p>\n"},{"title":"泰国之行(普吉3天＋曼谷2天)","url":"http://lilyalove.com/2016/06/06/Travel-to-Thailand/","content":"<h2 id=\"行程单\"><a href=\"#行程单\" class=\"headerlink\" title=\"行程单\"></a>行程单</h2><p>出行时间：2016.02.10~2016.02.15</p>\n<table>\n<thead>\n<tr>\n<th>时间</th>\n<th>行程</th>\n<th>住宿</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>02-10</td>\n<td>长沙－曼谷－普吉岛</td>\n<td>Simplitel Hotel</td>\n</tr>\n<tr>\n<td>02-11</td>\n<td>普吉岛（珊瑚岛－皇帝岛－西蒙人妖秀）</td>\n<td>Simplitel Hotel</td>\n</tr>\n<tr>\n<td>02-12</td>\n<td>普吉岛（芭东海滩－普吉镇－王权免税店）</td>\n<td>Simplitel Hotel</td>\n</tr>\n<tr>\n<td>02-13</td>\n<td>普吉岛－曼谷</td>\n<td>民宿</td>\n</tr>\n<tr>\n<td>02-14</td>\n<td>曼谷（大皇宫－玉佛寺－大理石佛寺－野生动物园）</td>\n<td>民宿</td>\n</tr>\n<tr>\n<td>02-15</td>\n<td>曼谷－长沙</td>\n<td>回家</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"本次旅行的初衷\"><a href=\"#本次旅行的初衷\" class=\"headerlink\" title=\"本次旅行的初衷\"></a>本次旅行的初衷</h2><p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Travel-to-Thailand/1.jpeg\" alt=\"\"></p>\n<p>在2016年到来之前，我和男友有个想法，想带着双方的父母一起出国玩一趟。<br>一方面可以让大家熟悉熟悉（在此之前，我和男友都没有见过对方的父母），另一方面，也让走亲戚+打麻将的过年模式变得更加有趣一点。<br>原定计划6人行的，不过后来我父母过年抽不出时间来，最终定了四人行。</p>\n<p>我们一方面想充分利用不长的时间让父母好好玩玩，另一方面也希望整个行程更加舒服，让父母能玩的轻松，开心。对比了周边的几个国家，最终选择泰国作为旅游地点，主要是考虑到泰国的旅游业比较成熟，各方面的服务也比较到位，最重要是支持落地签，让我们省了好多时间。</p>\n<p>定了旅行的地点，时间和人数之后就是做攻略了。<br>我参考了穷游网、途牛网、百度旅游等多个网站上的攻略，最终选择了其中的一个攻略作为行程的参照。链接如下：<br><a href=\"http://bbs.qyer.com/thread-1337173-1.html\" target=\"_blank\" rel=\"external\">【普吉+曼谷】蜜月普吉岛の超级深度帖</a><br>攻略写的非常详细，大家也可以看看。肯定比我的好，哈哈哈。</p>\n<p>接下来，要开始我的泰国行介绍了。希望不会太无趣。（我本身是个文笔实在不咋地的小女子）</p>\n<h2 id=\"行程\"><a href=\"#行程\" class=\"headerlink\" title=\"行程\"></a>行程</h2><p><strong>人数</strong>：4成人<br><strong>时间</strong>：2016.02.10～2016.02.15</p>\n<h2 id=\"机票\"><a href=\"#机票\" class=\"headerlink\" title=\"机票\"></a>机票</h2><p><strong>2月10日</strong>：<br>【12:55~15:35】长沙黄花机场-曼谷廊曼国际机场，航班：FD541 空客320(中)<br>【19:30~20:55】曼谷廊曼国际机场-普吉国际机场，航班：FD3011 空客320(中)</p>\n<p><strong>2月13日</strong>：<br>【15:50~17:05】普吉国际机场-曼谷廊曼国际机场，航班：FD3026 其他机型</p>\n<p><strong>2月15日</strong>：<br>【07:35~12:05】曼谷廊曼国际机场-长沙黄花机场，航班：FD540 空客320(中)</p>\n<p>注：本次出行定的机票均为泰国亚洲航空（Air Asia）。<br>考虑到带着父母出行，故而航班的时间基本都在白天，避免了红眼航班。<br>由于是春节期间，时间又比较好，故而机票费挺贵的，来回机票费人均接近4000元。<br>如果平时淡季出行，2000元不到来回的票也能订到。大家可以关注一下机票信息。</p>\n<p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Travel-to-Thailand/2.jpeg\" alt=\"\"></p>\n<h2 id=\"酒店\"><a href=\"#酒店\" class=\"headerlink\" title=\"酒店\"></a>酒店</h2><p><strong>【普吉岛】</strong>Simplitel Hotel 入住时间：2.10~2.13，共3晚/2间房，共329.27美元<br><strong>【曼谷】</strong>民宿 入住时间：2.13~2.15，共2晚/2间房，共617元</p>\n<p>定酒店时，主要是在agoda和airbnb上面寻找合适的酒店或者房子<br>这次定主要考虑了价格、评价和位置。</p>\n<h3 id=\"普吉岛\"><a href=\"#普吉岛\" class=\"headerlink\" title=\"普吉岛\"></a>普吉岛</h3><p>普吉岛有三个比较有名的海滩，<strong>芭东</strong>，<strong>卡伦</strong>，<strong>卡塔</strong>。</p>\n<p>芭东是3个海滩里面开发的最成熟的，住宿、吃饭都很方便，海滩稍微差点儿；<br>卡伦和卡塔隔得很近，都算是比较好的，海滩很美，也比较方便。<br>于是我就在卡伦和卡塔附近找酒店了。</p>\n<p>最开始准备预定民宿，后来想想，行程里面很多项目都需要到酒店接送的，民宿可能不方便接送，就放弃了。不过事实证明定酒店是个明智的选择。酒店一般位置更加方便，离海边也更近一些。<br>接送也基本没有出过什么差错。</p>\n<p>Simplitel Hotel 靠近karon海滩，大概离海边400米，酒店旁边就是卡伦最受欢迎的<strong>red onion</strong>餐厅和<strong>手工冰淇淋</strong>店。<br>性价比也不错，一个晚上加上服务费和税费大概300元。<br>酒店的环境也还不错，比较干净，每个房间都配有保险箱。<br>包早点，早点是自助形式，还有可以点的鸡蛋饼，味道挺不错的。</p>\n<h3 id=\"曼谷\"><a href=\"#曼谷\" class=\"headerlink\" title=\"曼谷\"></a>曼谷</h3><p>曼谷我们在airbnb上订了民宿，是一个两层的房子，一共两个房间，设施一应俱全。<br>房间里面特别干净，我们进门都会在门口脱掉鞋子。<br>位置很方便，出门不远就有711和一个比较大的商场。<br>最重要的是房东特别棒，沟通起来的也很好，特别热心。我们都很满意。</p>\n<p>地址如下：<br>580/53 อโศก - ดินแดง, Bangkok, Krung Thep Maha Nakhon 10400, Thailand<br>房东是：Tawat Usn</p>\n<p>最重要的是性价比超级高，一套房子加上清洁费和税费每晚只需要300块左右。<br>房子的相关图片如下：</p>\n<p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Travel-to-Thailand/3.jpeg\" alt=\"\"><br><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Travel-to-Thailand/4.jpeg\" alt=\"\"></p>\n<h2 id=\"接送机\"><a href=\"#接送机\" class=\"headerlink\" title=\"接送机\"></a>接送机</h2><p>考虑到有父母一起，我们直接选择了最简单的方式，订好接送机，省事省力。<br>当然，可以在机场打车，不过人在国外，碰到黑车的几率非常高，能避免打车就避免吧。基本上打车当地人都不会打表，即便提醒了他们也不打表。<br>或者坐其他的交通方式，可以到其他的攻略上面看看别的推荐。<br>都不如有接送机方便。</p>\n<h3 id=\"普吉岛-1\"><a href=\"#普吉岛-1\" class=\"headerlink\" title=\"普吉岛\"></a>普吉岛</h3><p>接送机对比了穷游和淘宝的价格，最后选择了在穷游上定接送机。<br><strong><a href=\"http://z.qyer.com/deal/42020/\" target=\"_blank\" rel=\"external\">穷游预定（135一车，可以坐4~9人）</a></strong></p>\n<h3 id=\"曼谷-1\"><a href=\"#曼谷-1\" class=\"headerlink\" title=\"曼谷\"></a>曼谷</h3><p><strong>使用uber打车</strong></p>\n<p>普吉岛和曼谷情况不太一样<br>普吉岛上交通方式相对比较少，提前订好接送，可以避免被黑车坑。<br>而曼谷比较是首都，正规不少。其实可以使用uber打车就好了。<br>我们在曼谷的整个行程中都是使用uber打车的，非常方便。uber司机大部分都会说一点点英文，碰到实在不会说的，取消重新打就好了。<br>uber打车才500泰铢，折合人民币不到100元，比预定接送机便宜不少。<br>（原本曼谷的行程也订了穷游的接送机，180元左右单次，不过因为是民宿，订单总是确定不下来，最后我们就取消了订单。咨询了一下房东，说当地打车很便宜，遇到正规的出租车，才200泰铢就够了。而且也有uber可以用。于是我们就果断决定使用uber来打车了。）</p>\n<p>如果不会英文，可以在以下链接定接送机<br><strong><a href=\"http://z.qyer.com/deal/50559/\" target=\"_blank\" rel=\"external\">穷游预定：泰国曼谷廊曼/素万那普国际机场至曼谷市内单程接/送机包车（7座车179）</a></strong></p>\n<h2 id=\"游玩项目\"><a href=\"#游玩项目\" class=\"headerlink\" title=\"游玩项目\"></a>游玩项目</h2><p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Travel-to-Thailand/5.jpeg\" alt=\"\"></p>\n<p>###【2月10日】<br>到酒店就已经10点半了，直接约好第二天早上7点在楼下见面，吃早饭，然后开始11号的行程</p>\n<p>###【2月11日】<br>1、<a href=\"http://z.qyer.com/deal/14842/?campaign=lmzk&amp;category=text14842\" target=\"_blank\" rel=\"external\">皇帝岛+珊瑚岛【英文导游】（人均185，包酒店接送）</a></p>\n<p>时间8:00~17:00</p>\n<p>2、西蒙人妖秀<br>穷游：<a href=\"http://z.qyer.com/deal/53588/\" target=\"_blank\" rel=\"external\">【秒杀】泰国普吉岛芭东西蒙人妖秀门票(VIP座,接送)（人均87）</a></p>\n<p>时间：19:30~21:00</p>\n<p>珊瑚岛和皇帝岛都很美，很值得去。不过这个行程体验过之后觉得还是很匆忙的，如果下次再去的话，我会考虑直接去皇帝岛住一个晚上。真的很美，蓝天碧海白沙滩。美不胜收。</p>\n<p>【珊瑚岛游泳】<br>见到海后非常开心，和男友马上就跑到海里泡着，不过我们俩都没有涂防晒霜，肩膀和背都晒伤了，导致后面几天特别疼。而且由于没有带大毛巾，下水以后起来吹了风，还有点着凉。导致后面的项目都玩的不太好。</p>\n<p>大家去的时候一定要记得涂好防晒霜，带上大毛巾，一上来就把自己擦干，避免着凉。</p>\n<p>【皇帝岛潜泳】<br>（不会游泳表示很害怕，一直拉着船舷，不敢往远处游。上来后还晕车，吐的一塌糊涂，好囧的）</p>\n<p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Travel-to-Thailand/6.jpeg\" alt=\"\"></p>\n<p>皇帝岛<br>皇帝岛特别美，是我见过最漂亮的海滩，真正的碧海蓝天白沙滩。沙子特别细，踩在上面软软的，这种感觉真的是非常美好。<br>可惜由于之前的潜泳项目不太适应，后面就没有再游泳了。就在岸上拍了一些照片，在小岛上转了转。真想再来这里，好好的住个几天。</p>\n<p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Travel-to-Thailand/7.jpeg\" alt=\"\"><br><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Travel-to-Thailand/8.jpeg\" alt=\"\"></p>\n<p>西蒙人妖秀<br>表演还是很值得看的，舞台效果，表演都很精彩。不过人太多，所以没有和人妖拍照。考虑到自己找车比较麻烦，我们定了酒店接送，包含在人妖秀里面。</p>\n<p>去的时候最好提前订好门票。我们在酒店碰到一对来自由行的夫妻，带着一个8岁左右的小朋友，由于行程什么的都没订好，临时定很多东西都订不到。能订到的价格也特别贵，至少是我们提前的定的2倍以上。<br>人妖秀就没订到，而且他们在岛上的这些天一直都没有场次，全部订满。看样子是没法儿看了。挺可惜的。</p>\n<p>###【2月12日】<br>1、spa（泰式按摩2小时，人均99元，每人给消费50泰铢）<br><a href=\"http://z.qyer.com/deal/14842/?campaign=lmzk&amp;category=text14842\" target=\"_blank\" rel=\"external\">http://z.qyer.com/deal/14842/?campaign=lmzk&amp;category=text14842</a><br>2、环岛一日游（我们定了熊猫巴士，很方便很便宜。10块钱5日随便坐。服务很好很准时，可以去的地方也很多。可以点开链接查看一下）<br><a href=\"http://z.qyer.com/deal/14842/?campaign=lmzk&amp;category=text14842\" target=\"_blank\" rel=\"external\">http://z.qyer.com/deal/14842/?campaign=lmzk&amp;category=text14842</a><br>不过由于巴士是固定地点发车，可能需要找找。但相对于普吉岛的交通费来说，这个不要太划算了。</p>\n<p>###【2月13日】<br>1、卡塔海滩<br>2、飞到曼谷，找晚饭吃</p>\n<p>不得不说，本次定的行程衔接的很到位，行程相对来说很轻松，没有操很多心。<br>上午起来吃完早饭，悠闲的在卡塔海滩玩了一上午。<br>11点左右回酒店收拾东西，退房，然后送机的司机就来了。<br>接着到机场吃了个午饭，开始等候飞机，登机。<br>按点降落，uber打车去住处。<br>然后房东带我们去吃饭。<br>出乎意料的顺畅。<br>所以有些东西还是应该准备在前面。避免到当地很多游玩项目被预定完了，很浪费时间而且很贵。<br>攻略做好，万事简单。最多处理下突发事件就可以了。</p>\n<p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Travel-to-Thailand/9.jpeg\" alt=\"\"></p>\n<p>【曼谷】</p>\n<p>###【2月14日】<br>早上在房东家里自己做了三明治，美美的吃了个早饭。<br>上午：大皇宫+玉佛寺，门票500泰铢<br>（人超级多，其实也没什么好看的，大家可以酌情考虑去不去看）</p>\n<p>中午：做游轮去唐人街吃饭<br>（曼谷的游轮中心挺乱的，完全弄不清楚在哪儿买票，该上那艘船。而且服务人员态度也很一般，不知道是不是因为他们不懂英文，所以并不热情。<br>我们本来准备直接去柚木宫附近吃饭的，结果做错了船，坐到了一个旅行团包的船上了，然后去了唐人街，完全是反方向。<br>然后我们顺势在唐人街吃了个饭。果然唐人街都是坑人的。。。环境差、口味一般、价格还出奇的贵。和曼谷其他地方的水平差远了。。。不过算是计划之外的另一种体验吧）</p>\n<p>下午：柚木宫+旧国会大厦<br>（计划的去看这两个地方，后来因为人多，天热，临时决定去了旁边的动物园，哈哈哈。<br>不过动物园是收费的，人均150泰铢。。。不过里面很凉快，大家都觉得比大皇宫好玩。就是这么任性。）</p>\n<p>晚上：在家附近的大商场吃了晚饭，<br>（情人节+男友生日，就美美的吃了一顿，泰国食物味道好极了。）</p>\n<p>###【2月15日】<br>早上4:00起床，收拾好了出发去机场，准备返程啦。</p>\n<h2 id=\"吃饭\"><a href=\"#吃饭\" class=\"headerlink\" title=\"吃饭\"></a>吃饭</h2><p>使用大众点评就好了，非常方便，每次定位的吃饭的地方都很合我们的胃口。在国内还不觉得，出了国还能使用大众点评，真的是一件很幸福的事情。</p>\n<p>特别推荐两个店，一个是普吉酒店旁边的red onion；另一个是曼谷的Phan Khon，味道很棒。<br><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Travel-to-Thailand/10.jpeg\" alt=\"\"><br><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Travel-to-Thailand/11.jpeg\" alt=\"\"><br><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Travel-to-Thailand/12.jpeg\" alt=\"\"></p>\n<h2 id=\"落地签\"><a href=\"#落地签\" class=\"headerlink\" title=\"落地签\"></a>落地签</h2><p>准备材料如下：<br>1、行程单（飞机上会发）<br>2、有效护照<br>3、2寸照片2张<br>4、签证申请表（可以从网上下载）<br>5、1000泰铢（来泰国最少准备10000泰铢的现金）<br>6、来泰国的登机牌</p>\n<h2 id=\"总消费（人均）\"><a href=\"#总消费（人均）\" class=\"headerlink\" title=\"总消费（人均）\"></a>总消费（人均）</h2><h3 id=\"提前订好的部分\"><a href=\"#提前订好的部分\" class=\"headerlink\" title=\"提前订好的部分\"></a>提前订好的部分</h3><p>【机票】3985元<br>【住宿】696元<br>【珊瑚岛+皇帝岛】185元<br>【接送机】68元<br>【人妖秀】87元<br>【spa】99元<br>【巴士票】10元</p>\n<h3 id=\"当地固定花费\"><a href=\"#当地固定花费\" class=\"headerlink\" title=\"当地固定花费\"></a>当地固定花费</h3><p>【落地签】1000泰铢<br>【大皇宫】500泰铢<br>【动物园】150泰铢<br>【uber接机】500泰铢<br>【uber送机】1000泰铢<br>【买药】6820泰铢（主要是叔叔帮人购买蜈蚣丸，主要治疗咳嗽，听说效果很好，还没检验过效果；不过我自己也给家里买了2盒。说到这里，如果大家要购买的话，最好到普吉镇购买，在景点购买的1250泰铢/盒，在普吉镇购买的900泰铢/盒；可见哪里都一样，景点东西总是更贵。）<br>【买特产】2000泰铢左右</p>\n<h3 id=\"其他花费\"><a href=\"#其他花费\" class=\"headerlink\" title=\"其他花费\"></a>其他花费</h3><p>这一部分主要包括吃饭、给小费、临时打车、买一下小东西等。</p>\n<p><strong>本次人均消费6600元</strong>。<br>本次主要消费是机票，用了4000元左右；<br>泰国的物价整体比较低，吃饭住宿都不贵，提前订好机票和酒店、游玩行程的话，每人准备10000泰铢肯定够用了。</p>\n<h2 id=\"其他感受\"><a href=\"#其他感受\" class=\"headerlink\" title=\"其他感受\"></a>其他感受</h2><p>整体来说，泰国的<strong>旅游业很成熟</strong>，来自中国和其他国家的人都比较多，金发碧眼的美女帅哥也不少咯。</p>\n<p><strong>物价相比较低</strong>，肯定比去趟三亚性价比高；</p>\n<p>服务人员<strong>素质相对较高</strong>，普遍比较<strong>热情</strong>，偶尔遇到几个不太友好的，也是少数。</p>\n<p><strong>交通不如国内方便</strong>，明晃晃的坑外国人，出租车根本不打表。</p>\n<p>大部分服务人员<strong>英文说得都不错</strong>，会讲中文的相对少一些。如果你会英文的话，解决问题就更简单啦。</p>\n<p>还有个小笑话，叔叔阿姨住在海边的几天，每天早起都会去海滩玩一趟，而我和男友一直到第三天，才匆匆忙忙的去海边玩了一趟。。。表示叔叔阿姨才是来享受海滩的呀。。。我和男友，一个字，懒。</p>\n<p>我和男友商量着以后再来，就早上7点起来去海边游泳，然后9点半左右回去吃早饭，然后呆在酒店看书或者写码（这段时间一般太阳都很大，特别热），下午四点左右再出去海边玩。住一大段时间。哈哈哈~想的很美吧。</p>\n<p>下次直接去普吉岛，然后到皇帝岛或者皮皮岛住几天。好好享受下海滩。</p>\n"},{"title":"贝加尔湖，梦中的冰雪王国","url":"http://lilyalove.com/2016/06/05/Lake-Baikal-the-dream-of-winter/","content":"<p>贝加尔湖，给了我一个冰雪王国的梦。</p>\n<p>去贝加尔湖是2016年元旦的事了。去之前，贝加尔湖对于我来说只是李健的一首歌，是一个美的不真实的地方。</p>\n<p>多亏了北京到伊尔库茨克的廉价航班，往返才2000元左右。在廉价机票和美景的双重刺激下，我们8个彼此并不熟悉的小伙伴终于决定元旦结伴去贝加尔湖玩。出行时间：2015年12月30日～2016年1月4日</p>\n<h2 id=\"去之前的准备\"><a href=\"#去之前的准备\" class=\"headerlink\" title=\"去之前的准备\"></a>去之前的准备</h2><p>8个人里面有6个南方人，到过最北的地方就是北京，对于俄罗斯零下三十度～零下四十度的天气表示想想都腿冷，于是准备防寒装备成了很重要的一环。</p>\n<table>\n<thead>\n<tr>\n<th>提前准备</th>\n<th>详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>机票</td>\n<td>机票是在<a href=\"http://flight.qunar.com\" target=\"_blank\" rel=\"external\">去哪儿网</a>上买的，北京往返伊尔库茨克，机票2000元／人</td>\n</tr>\n<tr>\n<td>签证</td>\n<td>在淘宝上找人代办签证，价格大概在700元左右。（买的早可能便宜300左右）</td>\n</tr>\n<tr>\n<td>住宿</td>\n<td>约600人民币／4晚，主要是在airbnb上预定民宿</td>\n</tr>\n<tr>\n<td>装备</td>\n<td>帽子、围巾、面巾、雪镜、黑冰羽绒服＋羽绒裤、薄款羽绒服、运动内衣、厚毛袜、军靴、暖宝宝、保温杯、手套，装备大概花了我2000元／人</td>\n</tr>\n<tr>\n<td>兑换卢布</td>\n<td>2000元人民币，兑换了大概2万卢布</td>\n</tr>\n<tr>\n<td>其他</td>\n<td>随身Wi-Fi，充电宝、转换插头、插座等</td>\n</tr>\n</tbody>\n</table>\n<p>我们准备的大部分东西都用上了，不过俄罗斯却没有我们想象的冷，所以我们准备的好多厚衣服其实并没有用上。如果有人想去的话，可以看好天气再准备厚衣服。</p>\n<table>\n<thead>\n<tr>\n<th>行程</th>\n<th>时间</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>北京－伊尔库茨克－利斯特维扬卡镇</td>\n<td>2015.12.30，住当地民宿1晚</td>\n</tr>\n<tr>\n<td>利斯特维扬卡镇－奥尔洪岛</td>\n<td>2015.12.31~2016.1.2，住<a href=\"http://www.olkhon.info/zh/\" target=\"_blank\" rel=\"external\">Никита</a> 2晚</td>\n</tr>\n<tr>\n<td>奥尔洪岛－伊尔库茨克</td>\n<td>2016.1.2～2016.1.3，住1晚</td>\n</tr>\n<tr>\n<td>伊尔库茨克－北京</td>\n<td>2016.1.4凌晨</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"伊尔库茨克第一印象\"><a href=\"#伊尔库茨克第一印象\" class=\"headerlink\" title=\"伊尔库茨克第一印象\"></a>伊尔库茨克第一印象</h2><p>下图是我们到俄罗斯时乘坐的s7（北京到伊尔库茨克），绿皮飞机萌萌哒。</p>\n<p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Lake-Baikal-the-dream-of-winter/1.jpg\" alt=\"\"><br><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Lake-Baikal-the-dream-of-winter/1-1.jpg\" alt=\"\"><br>到机场后，过海关很快，基本没有啥问题，大概20分钟左右，就拿好行李出了机场。</p>\n<h2 id=\"利斯特维扬卡\"><a href=\"#利斯特维扬卡\" class=\"headerlink\" title=\"利斯特维扬卡\"></a>利斯特维扬卡</h2><p>我们的第一站是利斯特维扬卡镇。<br>下图是我们住的民宿，木屋，两层，4个房间，超有爱的房子，我们8个人住感觉很棒，又大又暖和。</p>\n<p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Lake-Baikal-the-dream-of-winter/2-1.jpg\" alt=\"\"></p>\n<p>到了小镇上面当然要出去逛逛啦。不知道是临近新年还是天气太冷，碰到的人很少，不过不影响我们欣赏美景，甚至因为没有几个人，显得雪更白，眼界更开阔。雪真的很厚很松软，一脚踩下去，基本能到膝盖。</p>\n<p>Tankery调皮的边大笑边踩雪，想正在撒欢的小狗狗。😄</p>\n<p>小店基本大门都不开，在地图上找的好多吃饭的地方都找不到门在哪儿，好不容易找到个吃法的地儿，店里也只有一个人，既是老板又是厨师还要兼服务员，所以一顿饭我们基本上等了一个多小时才吃上东西。<br>晚饭也草草的吃了点泡面。</p>\n<p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Lake-Baikal-the-dream-of-winter/3.JPG\" alt=\"\"></p>\n<p>晚上大家在别墅里面打牌，聊天，玩的不亦乐乎。</p>\n<h2 id=\"奥尔洪岛\"><a href=\"#奥尔洪岛\" class=\"headerlink\" title=\"奥尔洪岛\"></a>奥尔洪岛</h2><p>从利斯特维扬卡到奥尔洪岛，路程大概6、7个小时，我们一行8人刚好可以包一辆车，很方便，大家一路走走停停，寻美景拍照，玩游戏。唯一不太好的是司机不懂英文，所以大家沟通起来只能借助翻译软件来。不过俄罗斯大叔人还是挺好的，知道我们想拍照，还特意找了个适合拍照的地方。</p>\n<p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Lake-Baikal-the-dream-of-winter/4.JPG\" alt=\"\"></p>\n<p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Lake-Baikal-the-dream-of-winter/14.jpg\" alt=\"\"></p>\n<p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Lake-Baikal-the-dream-of-winter/5.JPG\" alt=\"\"></p>\n<p>下图是通往奥尔洪岛的码头。</p>\n<p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Lake-Baikal-the-dream-of-winter/9.JPG\" alt=\"\"></p>\n<p>从码头到奥尔洪岛的小镇，坐车大概一个小时，到的时候天都黑了，不过北方天黑的早，4点多天就黑了。</p>\n<p>去的时候正好赶上小岛上的跨年晚会。不过小镇上的人玩的还是很开心的。下图是一个很酷的老爷爷，演海盗的</p>\n<p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Lake-Baikal-the-dream-of-winter/10.JPG\" alt=\"\"></p>\n<p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Lake-Baikal-the-dream-of-winter/13.jpg\" alt=\"\"></p>\n<p>岛上狗狗很多，和人很亲近，喜欢往房间里面钻。</p>\n<p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Lake-Baikal-the-dream-of-winter/12.jpg\" alt=\"\"></p>\n<p>小岛上物资很匮乏，吃的东西很少，每个人一份，不够也不能加。味道嘛，勉强还行。</p>\n<p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Lake-Baikal-the-dream-of-winter/18.JPG\" alt=\"\"></p>\n<p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Lake-Baikal-the-dream-of-winter/16.JPG\" alt=\"\"></p>\n<p>第二天，奥尔洪岛一日游－北线。在车上呆了一整天，不过各个景点都会下来拍照。</p>\n<p>印象很深刻的是中午有一顿美美的烧烤餐，还有热茶喝，在冰天雪地的大风中能暖暖的吃一顿真是无比幸福啊。</p>\n<h2 id=\"伊尔库茨克\"><a href=\"#伊尔库茨克\" class=\"headerlink\" title=\"伊尔库茨克\"></a>伊尔库茨克</h2><p>从奥尔洪岛回来之后我们就回到了伊尔库茨克，还是城里好啊，伙食一下子就上来了，而且可以自己玩的地方也多了起来。</p>\n<p>不过这边会讲英语的人真的好少，我们想去剧院看场戏，都没办法沟通。最后好不容易碰到了一个会讲一点点英文的小伙子，才搞清楚从1号到10号所有的票都卖光了。。。</p>\n<p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Lake-Baikal-the-dream-of-winter/29.JPG\" alt=\"\"></p>\n<p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Lake-Baikal-the-dream-of-winter/31.JPG\" alt=\"\"></p>\n<p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Lake-Baikal-the-dream-of-winter/32.JPG\" alt=\"\"></p>\n<h2 id=\"贝加尔湖冬季印象\"><a href=\"#贝加尔湖冬季印象\" class=\"headerlink\" title=\"贝加尔湖冬季印象\"></a>贝加尔湖冬季印象</h2><p>贝加尔湖还是很美的，很值得去，不过冬天真的有诸多不便，所以如果想更好的玩的话，可以春夏再去。当然，如果你想去看冰雪王国，冬季去也不错。</p>\n<p>去的时候可以像我们一样，多约一些人，这样住宿，约车都比较方便。</p>\n<p>如果后面有时间的话，我们想夏季再去一次，看看春意盎然，气候适宜的贝加尔湖。</p>\n"},{"title":"好产品","url":"http://lilyalove.com/2016/05/22/Good-Product/","content":"<p>作为一名产品经理，搞清楚什么是好的产品，什么是好的产品经理，是很重要的。</p>\n<p>说来惭愧，在此之前，我从来没认真思考过这个问题。做了一年半的产品，更多的是在执行、再执行，并没有好好想想应该怎么做才是最好的，为什么要这么做；这么做了能够带来什么提升？每次做的产品优化离公司的战略还有多远？</p>\n<p>既然不想这么不明不白的，只好加油，多思考。早日成为一名合格的产品经理。</p>\n<h1 id=\"什么样的产品是好产品？\"><a href=\"#什么样的产品是好产品？\" class=\"headerlink\" title=\"什么样的产品是好产品？\"></a>什么样的产品是好产品？</h1><h2 id=\"什么是产品？\"><a href=\"#什么是产品？\" class=\"headerlink\" title=\"什么是产品？\"></a>什么是产品？</h2><p>首先要搞清楚，什么是产品，才能在此基础上总结出什么是好产品。</p>\n<blockquote>\n<p><strong>产品的定义</strong>：产品是市场上任何可以让人注意、获取、使用、或能够满足某种消费需求和欲望的东西。（定义来源于智库百科）</p>\n</blockquote>\n<p>产品的五个基本层次是：</p>\n<p><strong>核心产品</strong>：核心产品是指向顾客提供的产品的基本效用或利益。从根本上说，每一种产品实质上都是为解决问题而提供的服务。</p>\n<p><strong>形式产品</strong>：形式产品是指核心产品借以实现的形式。有五个特征构成，即品质、式样、特征、商标及包装。</p>\n<p><strong>期望产品</strong>：期望产品是指购买者在购买产品时期望得到的与产品密切相关的一整套属性和条件。</p>\n<p><strong>延伸产品</strong>：延伸产品是指顾客购买形式产品和期望产品时附带获得的各种利益的总和，包括产品说明书、保证、安装、维修、送货、技术培训等。</p>\n<p><strong>潜在产品</strong>：潜在产品是指现有产品包括所有附加产品在内的，可能发展成为未来最终产品的潜在状态的产品。潜在产品指出了现有产品可能的演变趋势和前景。</p>\n<p>从上面的定义，对应到互联网行业，可以得出了什么是产品，从上到下，优先级依次降低：</p>\n<ol>\n<li>最重要的一点：满足用户的需求，解决用户的问题。——这里可以对应为产品的核心需求；</li>\n<li>产品有好的实现形式。——这里可以对应为产品的交互流程和设计风格；</li>\n<li>产品除了满足基本需求之外，最好有让这个需求更加丰满的衍生需求。——这里可以对应为产品的一些出乎意料的附加功能，例如社交产品的聊天表情，个性化设置等；</li>\n<li>这个产品简单易用，有好的保障、指导或售后。——这里可以对应为产品的运营，客服，在用户使用的过程中能持续得到好的服务，解决他们的问题；</li>\n<li>最后，这个产品能够持续发展，有良好的前景。——这里可以参考腾讯的产品，例如QQ，本来只是一个社交软件，现在却能逐步建立起一座娱乐城，除了能聊天，还能玩游戏，看新闻，听歌，看漫画，购物，基本只有想不到的，没有做不到的。这种产品就很有生命力，每个新的产品对旧的产品都是一个加持的作用，用户的粘性就越来越高咯。</li>\n</ol>\n<h2 id=\"好产品\"><a href=\"#好产品\" class=\"headerlink\" title=\"好产品\"></a>好产品</h2><p>一个产品是不是好，最关心的有两个角色。一个是<strong>用户</strong>，一个是<strong>企业</strong>。<br>企业是生产产品的，用户是消费产品的。<br>对于企业来说，能够不断为企业创造价值创造利润的产品就是好产品；<br>对于用户来说，能够满足自己需求，用着爽的产品就是好产品；<br>所以综合来说，能够为用户创造价值，并在这个基础上能转化成企业价值的产品，就是好产品。<br>如果在满足前两者的基础上，还能创造社会价值，那这款产品肯定是成功的产品。包括引领人们的行为方式，提升整个社会的效率，为整个社会带来一种好的氛围和意境。</p>\n<p>能创造用户价值、企业价值和社会价值的产品有淘宝，Google搜索引擎，这也成为了互联网的两种最常用的商业模式，电商的模式和广告的模式。</p>\n<p>能创造用户价值和企业价值，但是社会价值还有所欠缺的产品有游戏类产品，满足了用户的娱乐需求，也为企业赢得了大量的利润。</p>\n<p>只有用户价值，但企业价值还未实现的产品也有很多种，例如维基百科，为用户提供了大量的优质内容，但企业一直没能靠这款产品盈利，只能靠其他方式活着，虽然不能说是个不好的产品，但是却很被动。</p>\n<p>毕竟产品要能活下来才是最重要的。</p>\n<h2 id=\"怎么做好产品\"><a href=\"#怎么做好产品\" class=\"headerlink\" title=\"怎么做好产品\"></a>怎么做好产品</h2><ol>\n<li>找准核心需求，这个需求一定要真实，能够提升人们生活中的某种效率；</li>\n<li>调查市场行情，看是否有其他人在做这件事情，做的怎么样？如果你要做这件事情，能不能做的更好？能不能另辟蹊径，从其他的角度切入这个市场？</li>\n<li>找一些简单可行的方法快速验证自己的想法</li>\n<li>如果验证觉得可行，就快速做出产品的demo，让目标人群使用，根据他们的反馈来改进产品方案；</li>\n<li>采用敏捷开发的方式快速的在市场中抢占市场；</li>\n<li>结合用户特点来考虑商业模式，在不伤害用户的情况下，实现企业的价值。</li>\n</ol>\n"},{"title":"使用七牛来储存博客图片","url":"http://lilyalove.com/2016/05/21/Use-Qiniu-to-store-image/","content":"<h1 id=\"七牛\"><a href=\"#七牛\" class=\"headerlink\" title=\"七牛\"></a><a href=\"http://www.qiniu.com/\" target=\"_blank\" rel=\"external\">七牛</a></h1><p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Use-Qiniu-to-store-image/qiniu.png\" alt=\"\"><br>七牛提供10g的永久免费存储空间以及每月10GB的下载流量，完全够一个小小的个人博客使用了。<br>而且，就我个人注册和配置过程来看，七牛操作起来很简便，很省事</p>\n<h1 id=\"如何配置\"><a href=\"#如何配置\" class=\"headerlink\" title=\"如何配置\"></a>如何配置</h1><h2 id=\"在七牛上建立自己的空间\"><a href=\"#在七牛上建立自己的空间\" class=\"headerlink\" title=\"在七牛上建立自己的空间\"></a>在七牛上建立自己的空间</h2><p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Use-Qiniu-to-store-image/qiniu-space.png\" alt=\"\"><br>选择第一项 <strong>对象存储</strong>，设置自己的空间名称，找到外链默认域名，我的是o7i9sckjd.bkt.clouddn.com。</p>\n<p>上传一张图片到七牛上，比如me.png，则可以通过以下链接来进行访问</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://o7i9sckjd.bkt.clouddn.com/me.png</span><br></pre></td></tr></table></figure>\n<h2 id=\"在hexo中安装hexo-qiniu-sync插件\"><a href=\"#在hexo中安装hexo-qiniu-sync插件\" class=\"headerlink\" title=\"在hexo中安装hexo-qiniu-sync插件\"></a>在hexo中安装<a href=\"https://github.com/gyk001/hexo-qiniu-sync\" target=\"_blank\" rel=\"external\">hexo-qiniu-sync</a>插件</h2><p>这是一个hexo插件， 可以让你在文档中入嵌存储在七牛上的图片、JS、CSS类型的静态文件。</p>\n<p>你可以不用手动上传文件到七牛，插件会自动帮你将本地目录的文件同步到七牛。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>在本地的hexo主目录下运行以下命令进行安装：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-qiniu-sync --save</span><br></pre></td></tr></table></figure>\n<p>添加插件配置信息到 <code>_config.yml</code> 文件中:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">plugins:&#10;  - hexo-qiniu-sync&#10;&#10;#&#19971;&#29275;&#20113;&#23384;&#20648;&#35774;&#32622;&#10;##offline       &#26159;&#21542;&#31163;&#32447;. &#31163;&#32447;&#29366;&#24577;&#23558;&#20351;&#29992;&#26412;&#22320;&#22320;&#22336;&#28210;&#26579;&#10;##sync          &#26159;&#21542;&#21516;&#27493;&#10;##bucket        &#31354;&#38388;&#21517;&#31216;.&#10;##access_key    &#19978;&#20256;&#23494;&#38053;AccessKey&#10;##secret_key    &#19978;&#20256;&#23494;&#38053;SecretKey&#10;##dirPrefix     &#19978;&#20256;&#30340;&#36164;&#28304;&#23376;&#30446;&#24405;&#21069;&#32512;.&#22914;&#35774;&#32622;&#65292;&#38656;&#19982;urlPrefix&#21516;&#27493; &#10;##urlPrefix     &#22806;&#38142;&#21069;&#32512;. &#10;##local_dir     &#26412;&#22320;&#30446;&#24405;.&#10;##update_exist  &#26159;&#21542;&#26356;&#26032;&#24050;&#32463;&#19978;&#20256;&#36807;&#30340;&#25991;&#20214;(&#20165;&#25991;&#20214;&#22823;&#23567;&#19981;&#21516;&#25110;&#22312;&#19978;&#27425;&#19978;&#20256;&#21518;&#36827;&#34892;&#26356;&#26032;&#30340;&#25165;&#20250;&#37325;&#26032;&#19978;&#20256;)&#10;##image/js/css  &#23376;&#21442;&#25968;folder&#20026;&#19981;&#21516;&#38745;&#24577;&#36164;&#28304;&#31181;&#31867;&#30340;&#30446;&#24405;&#21517;&#31216;&#65292;&#19968;&#33324;&#19981;&#38656;&#35201;&#25913;&#21160;&#10;##image.extend  &#36825;&#26159;&#20010;&#29305;&#27530;&#21442;&#25968;&#65292;&#29992;&#20110;&#29983;&#25104;&#32553;&#30053;&#22270;&#25110;&#21152;&#27700;&#21360;&#31561;&#25805;&#20316;&#12290;&#20855;&#20307;&#35831;&#21442;&#32771;http://developer.qiniu.com/docs/v6/api/reference/fop/image/ &#10;##              &#21487;&#20351;&#29992;&#22522;&#26412;&#22270;&#29255;&#22788;&#29702;&#12289;&#39640;&#32423;&#22270;&#29255;&#22788;&#29702;&#12289;&#22270;&#29255;&#27700;&#21360;&#22788;&#29702;&#36825;3&#20010;&#25509;&#21475;&#12290;&#20363;&#22914; ?imageView2/2/w/500 &#21363;&#29983;&#25104;&#23485;&#24230;&#26368;&#22810;500px&#30340;&#32553;&#30053;&#22270;&#10;qiniu:&#10;  offline: false&#10;  sync: true&#10;  bucket: bucket_name&#10;  access_key: AccessKey&#10;  secret_key: SecretKey&#10;  dirPrefix: static&#10;  urlPrefix: http://bucket_name.qiniudn.com/static&#10;  local_dir: static&#10;  update_exist: true&#10;  image: &#10;    folder: images&#10;    extend: &#10;  js:&#10;    folder: js&#10;  css:&#10;    folder: css</span><br></pre></td></tr></table></figure>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><ol>\n<li>一定要注意缩进的问题。不能用tab来缩进，要用两个空格。</li>\n<li>access_key和secret_key可以从七牛的“个人面板－密钥管理”里面找就可以了；</li>\n<li>local_dir一定要写static文件夹的准确路径，这个文件夹可以放在任何位置，设置好之后，在static里面存储你要同步到七牛的文件即可；</li>\n</ol>\n<p>配置完成后，使用 <code>hexo generate</code> 生成即可。</p>\n<p>生成后，会在static的文件夹里生成三个文件夹：image，js，css；<br>可以按照单独的博客名来建立文件夹，给图片分类。<br>例如本文的title是Use-Qiniu-to-store-image，我会在image文件夹里再建一个Use-Qiniu-to-store-image的文件夹，再把本文的图片放到这个文件夹里就好了。</p>\n<h2 id=\"同步图片到七牛\"><a href=\"#同步图片到七牛\" class=\"headerlink\" title=\"同步图片到七牛\"></a>同步图片到七牛</h2><p>放好图片后，在hexo中输入</p>\n<pre><code>hexo qiniu sync\n</code></pre><p>就可以同步图片到七牛了</p>\n<h2 id=\"获取图片外链\"><a href=\"#获取图片外链\" class=\"headerlink\" title=\"获取图片外链\"></a>获取图片外链</h2><p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Use-Qiniu-to-store-image/outchain.png\" alt=\"\"></p>\n<ol>\n<li>在高级设置里面把访问控制改为公共空间；</li>\n<li>把原文件保护关闭，则可以进入个人空间－内容管理了；</li>\n<li>在图片列表里面获取文件的外链即可，如下图所示</li>\n</ol>\n<p><img src=\"http://o7i9sckjd.bkt.clouddn.com/static/images/Use-Qiniu-to-store-image/outside-chain.png\" alt=\"\"></p>\n<p>使用hexo写博客的时候，在七牛上找到对应图片的外链，再用 <code>![]()</code> 的方式使用图片即可。</p>\n"},{"title":"独立域名配置","url":"http://lilyalove.com/2016/05/19/domain-config/","content":"<p>本文是github+hexo搭建博客的第二部分，解决域名解析的问题。</p>\n<h2 id=\"购买域名\"><a href=\"#购买域名\" class=\"headerlink\" title=\"购买域名\"></a>购买域名</h2><p>我选择使用的域名服务商是GoDaddy，可以使用支付宝，价格也不贵，我购买的价钱大概是60元一年。<br>细节就不赘述了，GoDaddy的网站做的很简单，购买流程很顺畅。</p>\n<h2 id=\"将个人域名与Github-Pages的空间绑定\"><a href=\"#将个人域名与Github-Pages的空间绑定\" class=\"headerlink\" title=\"将个人域名与Github Pages的空间绑定\"></a>将个人域名与Github Pages的空间绑定</h2><p>我的本地站点名称是 hexo-site ，详细的建立过程见 <a href=\"http://lilyalove.com/2016/05/09/hexo-github-mysite/\">在Mac上github＋hexo搭建博客（一）</a><br>在 <code>hexo-site\\source</code> 文件夹里新建一个名为 <code>CNAME</code> 的文件，用<code>sublime</code> 编辑器打开，或者本地编辑器也行，添加内容 <code>lilyalove.com</code>，也就是你购买的域名，保存。<br>部署博客即可。</p>\n<p>部署的方式：<br>1、生成文件，用 <code>hexo generate</code> 命令<br>2、部署，用 <code>hexo deploy</code> 命令即可<br>3、记得将 <code>_config</code> 文件里面的 <code>url</code> 改为你的个人域名。</p>\n<p>如果编译的过程都顺利的话，就部署成功了。</p>\n<h2 id=\"DNS设置\"><a href=\"#DNS设置\" class=\"headerlink\" title=\"DNS设置\"></a>DNS设置</h2><p>经过朋友的推荐，我选择 DNSpod 来设置DNS，速度快、免费、且稳定。<br>注册过程不详谈了。</p>\n<h2 id=\"添加域名\"><a href=\"#添加域名\" class=\"headerlink\" title=\"添加域名\"></a>添加域名</h2><p>如下图设置：<br><img src=\"http://7xnuu7.com1.z0.glb.clouddn.com/blogdnspod1.png\" alt=\"add domain\"></p>\n<p>方法一：<br>如上图所示，其中两条A记录指向的IP地址是GitHub Pages的提供的IP：<br>192.30.252.153<br>192.30.252.154</p>\n<p>如果博客不能访问，有可能是GitHub更改了空间服务的ip地址，及时到GitHub Pages查看最新的IP即可。<br>www指定的记录是你在GitHub托管博客的仓库。</p>\n<p>方法二：<br>不使用A记录，直接使用CNAME，记录值为 <code>lilyalove.com</code>，也就是你自己的域名即可。</p>\n<h2 id=\"去GoDaddy修改DNS地址\"><a href=\"#去GoDaddy修改DNS地址\" class=\"headerlink\" title=\"去GoDaddy修改DNS地址\"></a>去GoDaddy修改DNS地址</h2><p>更改GoDaddy的Nameservers为DNSpod的NameServers,点击域名管理</p>\n<p><img src=\"http://7xnuu7.com1.z0.glb.clouddn.com/blogdnspod3.png\" alt=\"domain\"></p>\n<p>将GoDaddy的Nameservers更改成f1g1ns1.dnspod.net和f1g1ns2.dnspod.net</p>\n<p><img src=\"http://7xnuu7.com1.z0.glb.clouddn.com/blogdnspod2.png\" alt=\"custom\"></p>\n<p>最后修改成下图所示即可：</p>\n<p><img src=\"http://7xnuu7.com1.z0.glb.clouddn.com/blogdnspod4.png\" alt=\"details\"></p>\n<p>有疑问可以看DNSpod提供的官方帮助。<br>提示：设置DNS之后短时间内可能无法访问你的个人博客，因为要等待全球递归DNS服务器刷新（最多72小时），不过没问题的话几小时内就可以访问了。</p>\n<p>注：编写这篇文章时遇到了一个诡异的问题，如上所示，我写完文章进行 <code>hexo generate</code>时，总是提醒我有语法问题，提示如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">FATAL Something&#39;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html&#10;Template render error: (unknown path)&#10;  SyntaxError: Unexpected token ILLEGAL&#10;    at Object.exports.prettifyError (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/nunjucks/src/lib.js:34:15)&#10;    at Obj.extend.render (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/nunjucks/src/environment.js:468:27)&#10;    at Obj.extend.renderString (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/nunjucks/src/environment.js:326:21)&#10;    at /Users/baoli/Desktop/hexo-site/node_modules/hexo/lib/extend/tag.js:66:9&#10;    at Promise._execute (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/debuggability.js:272:9)&#10;    at Promise._resolveFromExecutor (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/promise.js:473:18)&#10;    at new Promise (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/promise.js:77:14)&#10;    at Tag.render (/Users/baoli/Desktop/hexo-site/node_modules/hexo/lib/extend/tag.js:64:10)&#10;    at Object.tagFilter [as onRenderEnd] (/Users/baoli/Desktop/hexo-site/node_modules/hexo/lib/hexo/post.js:253:16)&#10;    at /Users/baoli/Desktop/hexo-site/node_modules/hexo/lib/hexo/render.js:63:19&#10;    at tryCatcher (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/util.js:16:23)&#10;    at Promise._settlePromiseFromHandler (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/promise.js:502:31)&#10;    at Promise._settlePromise (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/promise.js:559:18)&#10;    at Promise._settlePromise0 (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/promise.js:604:10)&#10;    at Promise._settlePromises (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/promise.js:683:18)&#10;    at Async._drainQueue (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/async.js:138:16)&#10;    at Async._drainQueues (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/async.js:148:10)&#10;    at Immediate.Async.drainQueues [as _onImmediate] (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/async.js:17:14)&#10;    at processImmediate [as _immediateCallback] (timers.js:383:17)&#10;FATAL (unknown path)&#10;  SyntaxError: Unexpected token ILLEGAL&#10;Template render error: (unknown path)&#10;  SyntaxError: Unexpected token ILLEGAL&#10;    at Object.exports.prettifyError (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/nunjucks/src/lib.js:34:15)&#10;    at Obj.extend.render (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/nunjucks/src/environment.js:468:27)&#10;    at Obj.extend.renderString (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/nunjucks/src/environment.js:326:21)&#10;    at /Users/baoli/Desktop/hexo-site/node_modules/hexo/lib/extend/tag.js:66:9&#10;    at Promise._execute (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/debuggability.js:272:9)&#10;    at Promise._resolveFromExecutor (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/promise.js:473:18)&#10;    at new Promise (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/promise.js:77:14)&#10;    at Tag.render (/Users/baoli/Desktop/hexo-site/node_modules/hexo/lib/extend/tag.js:64:10)&#10;    at Object.tagFilter [as onRenderEnd] (/Users/baoli/Desktop/hexo-site/node_modules/hexo/lib/hexo/post.js:253:16)&#10;    at /Users/baoli/Desktop/hexo-site/node_modules/hexo/lib/hexo/render.js:63:19&#10;    at tryCatcher (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/util.js:16:23)&#10;    at Promise._settlePromiseFromHandler (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/promise.js:502:31)&#10;    at Promise._settlePromise (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/promise.js:559:18)&#10;    at Promise._settlePromise0 (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/promise.js:604:10)&#10;    at Promise._settlePromises (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/promise.js:683:18)&#10;    at Async._drainQueue (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/async.js:138:16)&#10;    at Async._drainQueues (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/async.js:148:10)&#10;    at Immediate.Async.drainQueues [as _onImmediate] (/Users/baoli/Desktop/hexo-site/node_modules/hexo/node_modules/bluebird/js/release/async.js:17:14)&#10;    at processImmediate [as _immediateCallback] (timers.js:383:17)</span><br></pre></td></tr></table></figure>\n<p>这个问题我查了半天，都没有合理的解答，而且我逐字逐句的检查了一遍文章的语法，也没有发现问题。<br>于是我用了一个蠢办法，我把整篇文章一点一点地复制粘贴，然后生成。想看看到底哪句话有语法问题。<br>结果整篇文章生成成功了。。。<br>表示心真累。<br>现状就是我成功生成了文章，但并不知道之前到底出了什么问题。。。hexo不会是看心情编译吧。。。求看到问题的大神给我一个解答，多谢。</p>\n"},{"title":"［转载］Hexo 配置文档","url":"http://lilyalove.com/2016/05/19/Hexo-document/","content":"<h1 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h1><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> my-blog</span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> git@github.com:forsigner/fexo.git themes/fexo</span><br></pre></td></tr></table></figure>\n<h2 id=\"启用\"><a href=\"#启用\" class=\"headerlink\" title=\"启用\"></a>启用</h2><p>打开博客根目录的  <code>_config.yml</code>  设为  <code>theme: fexo</code></p>\n<h2 id=\"升级\"><a href=\"#升级\" class=\"headerlink\" title=\"升级\"></a>升级</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> themes/fexo</span><br><span class=\"line\">$ git commit -am <span class=\"string\">'update'</span></span><br><span class=\"line\">$ git pull</span><br></pre></td></tr></table></figure>\n<h1 id=\"配置主题\"><a href=\"#配置主题\" class=\"headerlink\" title=\"配置主题\"></a>配置主题</h1><p>主题配置全部在 <code>theme/fexo</code> 里面完成，所里下面所有配置指的是配置<code>theme/fexo/_config.yml。</code></p>\n<h2 id=\"设置基本信息\"><a href=\"#设置基本信息\" class=\"headerlink\" title=\"设置基本信息\"></a>设置基本信息</h2><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">blog_name: Forsigner&#10;slogan: Find the bug of the world</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置头像\"><a href=\"#设置头像\" class=\"headerlink\" title=\"设置头像\"></a>设置头像</h2><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\"># relative url&#10;avatar: /images/avatar.jpg&#10;# or absolute url&#10;avatar: https://avatars0.githubusercontent.com/u/2668081?v=3&#38;s=460</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置favicon\"><a href=\"#设置favicon\" class=\"headerlink\" title=\"设置favicon\"></a>设置favicon</h2><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">favicon: /favicon.ico</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置关键词\"><a href=\"#设置关键词\" class=\"headerlink\" title=\"设置关键词\"></a>设置关键词</h2><p>关键词主要作用是优化SEO</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">keywords: forsigner,&#21069;&#31471;,&#35774;&#35745;,Hexo&#20027;&#39064;,&#21069;&#31471;&#24320;&#21457;,&#29992;&#25143;&#20307;&#39564;,&#35774;&#35745;,frontend,design,nodejs,JavaScript</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置首页内容\"><a href=\"#设置首页内容\" class=\"headerlink\" title=\"设置首页内容\"></a>设置首页内容</h2><p>你可以设置是否在首页直接显示文章</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">init_page_content: HOME_NAV  # HOME_NAV | POST</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置首页导航\"><a href=\"#设置首页导航\" class=\"headerlink\" title=\"设置首页导航\"></a>设置首页导航</h2><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">home_nav:&#10;  - name: Blog&#10;    url: /archives&#10;  - name: Github&#10;    url: https://github.com/forsigner&#10;    target: _blank&#10;  - name: Douban&#10;    url: http://www.douban.com/people/forsigner/&#10;    target: _blank&#10;  - name: Twitter&#10;    url: https://twitter.com/forsigner&#10;    target: _blank</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置页面导航\"><a href=\"#设置页面导航\" class=\"headerlink\" title=\"设置页面导航\"></a>设置页面导航</h2><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">page_nav:&#10;  - &#21338;&#23458;: /archives/&#10;  - &#20998;&#31867;: /category/&#10;  - &#26631;&#31614;: /tag/&#10;  - &#21451;&#38142;: /link/&#10;  - &#20851;&#20110;: /about/&#10;  - RSS: /atom.xml</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置页面导航样式\"><a href=\"#设置页面导航样式\" class=\"headerlink\" title=\"设置页面导航样式\"></a>设置页面导航样式</h2><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">page_nav_style: CIRCLE  # CIRCLE|ROUND_RECT</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置面包屑\"><a href=\"#设置面包屑\" class=\"headerlink\" title=\"设置面包屑\"></a>设置面包屑</h2><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">breadcrumb:&#10;  isShow: true # true|fase</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置盒子\"><a href=\"#设置盒子\" class=\"headerlink\" title=\"设置盒子\"></a>设置盒子</h2><p>你可设置盒子是否显示和其显示的文字</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">toolbox:&#10;  isShow: true # true|fase&#10;  text: &#30418;&#23376;</span><br></pre></td></tr></table></figure>\n<h2 id=\"搜索页面-Slogan\"><a href=\"#搜索页面-Slogan\" class=\"headerlink\" title=\"搜索页面 Slogan\"></a>搜索页面 Slogan</h2><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">search_slogan:&#10;  isShow: true # true|fase&#10;  text: Can you find the bug of world ~</span><br></pre></td></tr></table></figure>\n<h2 id=\"友链页面-Slogan\"><a href=\"#友链页面-Slogan\" class=\"headerlink\" title=\"友链页面 Slogan\"></a>友链页面 Slogan</h2><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">link_slogan:&#10;  isShow: true # true|fase&#10;  text: &#20132;&#25442;&#21451;&#38142;&#21487;&#20197;&#37038;&#20214; forsigner@gmail.com</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置文章标题对齐方式\"><a href=\"#设置文章标题对齐方式\" class=\"headerlink\" title=\"设置文章标题对齐方式\"></a>设置文章标题对齐方式</h2><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">post:&#10;  header_align: center # left|center</span><br></pre></td></tr></table></figure>\n<h1 id=\"启用页面\"><a href=\"#启用页面\" class=\"headerlink\" title=\"启用页面\"></a>启用页面</h1><p>你可以启用你想要的页面，在开启关于、友链、项目的页面后，你可以对这些设置这些页面的内容</p>\n<h2 id=\"启用分类页面\"><a href=\"#启用分类页面\" class=\"headerlink\" title=\"启用分类页面\"></a>启用分类页面</h2><p>在博客根目录执行 <code>hexo new page category</code><br>修改 <code>my-blog/source/category/index.md</code> 里面的内容:</p>\n<figure class=\"highlight md\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"horizontal_rule\">---</span></span><br><span class=\"line\">title: category</span><br><span class=\"line\">layout: category</span><br><span class=\"line\"><span class=\"header\">comments: false</span><br><span class=\"line\">---</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"启用标签页面\"><a href=\"#启用标签页面\" class=\"headerlink\" title=\"启用标签页面\"></a>启用标签页面</h2><p>在博客根目录执行 <code>hexo new page tag</code><br>修改 <code>my-blog/source/tag/index.md</code> 里面的内容:</p>\n<figure class=\"highlight md\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"horizontal_rule\">---</span></span><br><span class=\"line\">title: tag</span><br><span class=\"line\">layout: tag</span><br><span class=\"line\"><span class=\"header\">comments: false</span><br><span class=\"line\">---</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"启用友链页面\"><a href=\"#启用友链页面\" class=\"headerlink\" title=\"启用友链页面\"></a>启用友链页面</h2><p>在博客根目录执行 <code>hexo new page link</code><br>修改 <code>my-blog/source/link/index.md</code> 里面的内容:</p>\n<figure class=\"highlight md\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"horizontal_rule\">---</span></span><br><span class=\"line\">title: link</span><br><span class=\"line\">layout: link</span><br><span class=\"line\"><span class=\"header\">comments: false</span><br><span class=\"line\">---</span></span><br></pre></td></tr></table></figure>\n<p>启用友链页面后，可以设置类似以下格式的内容</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">link:&#10;  - name: &#32455;&#32593;&#10;    info: &#36523;&#20307;&#21644;&#28789;&#39746;&#65292;&#24635;&#26377;&#19968;&#20010;&#22312;&#36335;&#19978;&#10;    url: http://zheng-ji.info/&#10;    avatar: https://avatars3.githubusercontent.com/u/1414745?v=3&#38;s=460&#10;  - name: Dongyado&#10;    info: &#29983;&#21629;&#19981;&#27490;&#65292;&#25240;&#33150;&#19981;&#24687;&#10;    url: http://dongyado.com/&#10;    avatar: https://avatars0.githubusercontent.com/u/6274940?v=3&#38;s=460&#10;  - name: OrangeCoder&#10;    info: android ffmpeg nodejs gradle&#10;    url: http://orangecoder.com/&#10;    avatar: https://avatars0.githubusercontent.com/u/2263785?v=3&#38;s=460&#10;  - name: EverET&#10;    info: &#22909;&#35760;&#24615;&#19981;&#22914;&#28866;&#31508;&#22836;&#10;    url: http://everet.org/about-me/&#10;    avatar: https://avatars1.githubusercontent.com/u/1559563?v=3&#38;s=460</span><br></pre></td></tr></table></figure>\n<h2 id=\"启用关于页面\"><a href=\"#启用关于页面\" class=\"headerlink\" title=\"启用关于页面\"></a>启用关于页面</h2><p>在博客根目录执行 <code>hexo new page about</code><br>修改 <code>my-blog/source/about/index.md</code> 里面的内容:</p>\n<figure class=\"highlight md\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"horizontal_rule\">---</span></span><br><span class=\"line\">title: about</span><br><span class=\"line\">layout: about</span><br><span class=\"line\"><span class=\"header\">comments: false</span><br><span class=\"line\">---</span></span><br></pre></td></tr></table></figure>\n<p>启用关于页面后，可以设置类似以下格式的内容:</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">about:&#10;  - type: me&#10;    icon: icon-user&#10;    text_value:&#10;    - &#34;Scut&#65292;1991&#65292;Spring.&#34;&#10;    - &#34;&#21916;&#27426;&#35774;&#35745;&#65292;&#25797;&#38271;&#32534;&#31243;&#65292;&#21916;&#27426;&#30561;&#25042;&#35273;.&#34;&#10;    - &#34;&#21069;&#31471;&#24320;&#21457;&#24037;&#31243;&#24072;&#65292;&#24120;&#29992; HTML / CSS / JavaScript.&#34;&#10;  - type: Github&#10;    icon: icon-github&#10;    text_key: Github&#10;    text_value: &#34;@forsigner&#34;&#10;    text_value_url: https://github.com/forsigner&#10;  - type: weibo&#10;    icon: icon-weibo&#10;    text_key: &#24494;&#21338;&#10;    text_value: &#34;@forsigner&#34;&#10;    text_value_url: http://weibo.com/u/1847075964&#10;  - type: mail&#10;    icon: icon-mail&#10;    text_key: Gmail&#10;    text_value: &#34;forsigner@gmail.com&#34;&#10;  - type: location&#10;    icon: icon-location&#10;    text_value: &#29664;&#28023;</span><br></pre></td></tr></table></figure>\n<h2 id=\"启用项目页面\"><a href=\"#启用项目页面\" class=\"headerlink\" title=\"启用项目页面\"></a>启用项目页面</h2><p>在博客根目录执行 <code>hexo new page project</code><br>修改 <code>my-blog/source/project/index.md</code> 里面的内容:</p>\n<figure class=\"highlight md\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"horizontal_rule\">---</span></span><br><span class=\"line\">title: project</span><br><span class=\"line\">layout: project</span><br><span class=\"line\"><span class=\"header\">comments: false</span><br><span class=\"line\">---</span></span><br></pre></td></tr></table></figure>\n<p>启用项目页面后，可以设置类似以下格式的内容</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">project:&#10;  - type: personal&#10;    name: fexo&#10;    url: https://github.com/forsigner/fexo&#10;    intro: A minimalist design theme for hexo&#10;  # - type: company&#10;  #   name: Fexo&#10;  #   url: https://github.com/forsigner/fexo&#10;  #   intro: A minimalist design theme for hexo&#10;  - type: personal&#10;    name: beside&#10;    url: https://github.com/forsigner/beside&#10;    intro: I need you beside me&#10;  - type: personal&#10;    name: web-fontmin&#10;    url: https://github.com/forsigner/web-fontmin&#10;    intro: &#23383;&#20307;&#23376;&#38598;&#21270;&#65292;&#22312;&#32447;&#25552;&#21462;&#20320;&#38656;&#35201;&#30340;&#23383;&#20307;&#10;  - type: personal&#10;    name: magic-check&#10;    url: https://github.com/forsigner/magic-check&#10;    intro: Beautify Radio and Checkbox with pure CSS&#10;  - type: personal&#10;    name: nice-bar&#10;    url: https://github.com/forsigner/nice-bar&#10;    intro: A nice and lightweight scrollbar&#10;  - type: personal&#10;    name: angular-nice-bar&#10;    url: https://github.com/forsigner/angular-nice-bar&#10;    intro: A nice and lightweight scrollbar in Angular</span><br></pre></td></tr></table></figure>\n<h2 id=\"启用搜索页面\"><a href=\"#启用搜索页面\" class=\"headerlink\" title=\"启用搜索页面\"></a>启用搜索页面</h2><p>在博客根目录执行 <code>hexo new page search</code><br>修改 <code>my-blog/source/search/index.md</code> 里面的内容:</p>\n<figure class=\"highlight md\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"horizontal_rule\">---</span></span><br><span class=\"line\">title: search</span><br><span class=\"line\">layout: search</span><br><span class=\"line\"><span class=\"header\">comments: false</span><br><span class=\"line\">---</span></span><br></pre></td></tr></table></figure>\n<p>然后安装 Hexo 插件 hexo-search (重要)</p>\n<p>先进入 blog 的根目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> my-blog</span><br><span class=\"line\">$ npm install hexo-search --save</span><br></pre></td></tr></table></figure>\n<p>个性化设置的部分见原文链接</p>\n<p>原文链接：<a href=\"http://forsigner.com/2016/03/10/fexo-doc-zh-cn/\" target=\"_blank\" rel=\"external\">Fexo 文档</a></p>\n"},{"title":"在Mac上github＋hexo搭建博客（一）","url":"http://lilyalove.com/2016/05/09/hexo-github-mysite/","content":"<p>本文是在 Mac 上 github＋hexo 搭建博客第一部分，解决的问题是将本地搭建的博客在Github上跑起来。</p>\n<h2 id=\"github-、hexo简介\"><a href=\"#github-、hexo简介\" class=\"headerlink\" title=\"github 、hexo简介\"></a>github 、hexo简介</h2><ul>\n<li>github：开源代码库以及版本控制系统，其中githubpages提供300M的免费空间，拿来做博客够用了。</li>\n<li>hexo：是一个快速、简洁且高速的静态页面发布框架，使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页</li>\n</ul>\n<p>本人搭建的各人博客采用gitHub ＋ hexo来搭建。</p>\n<h2 id=\"需要下载的软件\"><a href=\"#需要下载的软件\" class=\"headerlink\" title=\"需要下载的软件\"></a>需要下载的软件</h2><ul>\n<li><p><a href=\"http://brew.sh/\" target=\"_blank\" rel=\"external\">Homebrew</a><br>Homebrew是Mac的软件管理工具，使用起来十分方便。虽然并不是建站的必备软件，但还是可以先下载一个，事半功倍。<br>按照 <a href=\"http://brew.sh/\" target=\"_blank\" rel=\"external\">http://brew.sh/</a> 里面提示的方法一步步进行安装即可。<br>问题：我安装Homebrew的时候总是安装不成功，目测是我先安装了Xcode，但是Xcode的路径有问题，按照默认路径寻找相关的文件总是找不到，于是安装不成功。大家如果也遇到安装不成功的问题，可以仔细看一下提示，再做后续操作。</p>\n</li>\n<li><p>Xcode<br>Xcode是运行在操作系统Mac OS X上的集成开发工具（IDE），预先下载一个，免得编译的时候出现问题。可以在App Store进行下载。</p>\n</li>\n<li><p><a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">node.js</a><br>hexo的官方文档给的最佳下载方式是使用 <a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"external\">nvm</a>。<br>具体操作命令参考<a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"external\">hexo</a> 安装 node.js 即可。<br>我在这里使用的是直接下载<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">安装包</a>。<br>node.js 下载完成后 安装到电脑上就可以了。安装成功后显示出来安装路径，可以看到 安装node.js 的时候 npm 也安装了。<br>如图所示：<br><img src=\"http://upload-images.jianshu.io/upload_images/326377-5868656ecedf7e76.png?imageMogr2/auto-orient/strip%7CimageView2/2\" alt=\"node.js\"></p>\n</li>\n<li><p>安装<a href=\"https://sourceforge.net/projects/git-osx-installer/\" target=\"_blank\" rel=\"external\">git</a><br>可以使用Homebrew进行安装，也可以直接使用<a href=\"https://sourceforge.net/projects/git-osx-installer/\" target=\"_blank\" rel=\"external\">安装程序</a>。</p>\n</li>\n<li><p><a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"external\">hexo</a><br>成功安装 node.js 和 git 之后，就可以安装hexo了。</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p><strong>使用命令行装软件的时候 ，当前在哪个路径下，就会装到哪个路径下。 系统的软件除外。 hexo 和 npm 安装的时候有默认路径因此我们不用特意去创建安装文件夹。</strong><br>注意： hexo的时候可能会出现这样的错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123; [Error: Cannot find module &#39;./build/Release/DTraceProviderBindings&#39;] code: &#39;MODULE_NOT_FOUND&#39; &#125;&#10;&#123; [Error: Cannot find module &#39;./build/default/DTraceProviderBindings&#39;] code: &#39;MODULE_NOT_FOUND&#39; &#125;&#10;&#123; [Error: Cannot find module &#39;./build/Debug/DTraceProviderBindings&#39;] code: &#39;MODULE_NOT_FOUND&#39; &#125;</span><br></pre></td></tr></table></figure>\n<p>原因是 我国防火墙网络墙的问题，导致安装的时候少装了几个库。 解决方法，换一个源重新装:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo --no-optional</span><br></pre></td></tr></table></figure>\n<p>hexo 下载完成后 运行一下 看是否安装成功</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo -v</span><br></pre></td></tr></table></figure>\n<p>hexo 安装成功后，我们开始使用 hexo 建站。</p>\n<h2 id=\"建立本地站点\"><a href=\"#建立本地站点\" class=\"headerlink\" title=\"建立本地站点\"></a>建立本地站点</h2><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo init &lt;folder&gt;</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<p>新建完成后，指定文件夹的目录如下：</p>\n<p>.<br>├── _config.yml<br>├── package.json<br>├── scaffolds<br>├── source<br>|   ├── _drafts<br>|   └── _posts<br>└── themes</p>\n<p><strong>_config.yml</strong><br>网站的配置信息，您可以在此配置大部分的参数。</p>\n<p>本地站点建立成功后，可以cd 进入站点文件夹，然后 执行 hexo server 启动站点</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>站点默认端口为 <a href=\"http://0.0.0.0:4000\" target=\"_blank\" rel=\"external\">http://0.0.0.0:4000</a><br>在浏览器中 输入 <a href=\"http://0.0.0.0:4000\" target=\"_blank\" rel=\"external\">http://0.0.0.0:4000</a> 就可以看到 站点了。</p>\n<h2 id=\"github上创建GitHubPages仓库\"><a href=\"#github上创建GitHubPages仓库\" class=\"headerlink\" title=\"github上创建GitHubPages仓库\"></a>github上创建GitHubPages仓库</h2><p>git 官方参考地址: <a href=\"https://pages.github.com\" target=\"_blank\" rel=\"external\">https://pages.github.com</a></p>\n<p><em>注意:创建仓库的时候仓库名一定严格按照 git用户名.github.io 来命名</em></p>\n<h2 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h2><p>把public 文件里面的文件，推送到我们 的github仓库里。<br>注意： 不要包含 public 文件夹，只推送 文件里面的文件即可。</p>\n<p><strong>方法如下:</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>在开始之前，您必须先在 _config.yml 中修改参数，一个正确的部署配置中至少要有 type 参数，例如：</p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">deploy:&#10;&#65293; type: git</span><br></pre></td></tr></table></figure>\n<p><strong>Git</strong><br>安装 hexo-deployer-git</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>修改配置。<br>在上面提到的 _config.yml 文件中修改 deploy 的参数，包括 </p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">deploy:&#10;  type: git&#10;  repo: &#60;repository url&#62;&#10;  branch: [branch]&#10;  message: [message]</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>repo</td>\n<td>库（Repository）地址</td>\n</tr>\n<tr>\n<td>branch</td>\n<td>分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测。</td>\n</tr>\n<tr>\n<td>message</td>\n<td>自定义提交信息 (默认为 Site updated: &lbrace;&lbrace; now(‘YYYY-MM-DD HH:mm:ss’) &rbrace;&rbrace;)</td>\n</tr>\n</tbody>\n</table>\n<p>配置完之后就可以用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>来进行github的同步了。<br>同步完之后，在浏览器中输入：<a href=\"http://bilove.github.io/\" target=\"_blank\" rel=\"external\">http://bilove.github.io/</a> 就可以看到搭建的静态网站了。</p>\n<h2 id=\"使用github保存源码\"><a href=\"#使用github保存源码\" class=\"headerlink\" title=\"使用github保存源码\"></a>使用github保存源码</h2><ul>\n<li>在github中建立一个新的repository，我将其命名为 mysite.src ，意味这里保存的是我的个人博客的源码。 </li>\n<li>进入hexo所建立的本地站点对应的文件夹，源码所包含的文件上面的文章中有描述</li>\n<li>使用git进行源码上传</li>\n<li>git status ：查看状态</li>\n<li>git init ： 首次上传时进行初始化</li>\n<li>git add 文件／文件夹 ： 添加需要上传的文件</li>\n<li>git commit “更新备注”</li>\n<li>git log 查看日志</li>\n<li>git push 放到git上</li>\n<li>git pull 把远程修改合并到本地</li>\n</ul>\n<h2 id=\"新建一篇文章\"><a href=\"#新建一篇文章\" class=\"headerlink\" title=\"新建一篇文章\"></a>新建一篇文章</h2><p>你可以执行下列命令来创建一篇新文章。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>接着用MWeb打开进行编辑即可。<br>Markdown的语法在网上进行学习即可。</p>\n<h2 id=\"发布写完的文章\"><a href=\"#发布写完的文章\" class=\"headerlink\" title=\"发布写完的文章\"></a>发布写完的文章</h2><p><strong>生成文件</strong><br>使用 Hexo 生成静态文件快速而且简单。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p><strong>监视文件变动</strong><br>Hexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate --watch</span><br></pre></td></tr></table></figure>\n<p><strong>完成后部署</strong><br>您可执行下列的其中一个命令，让 Hexo 在生成完毕后自动部署网站，两个命令的作用是相同的。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate --deploy</span><br><span class=\"line\">$ hexo deploy --generate</span><br></pre></td></tr></table></figure>\n<p>由hexo版本引起的问题，hexo3.2.0的版本会造成很多奇怪的问题，例如 <a href=\"https://github.com/hexojs/hexo/issues/1793\" target=\"_blank\" rel=\"external\">错误</a>，使用hexo3.1.1的版本就好了。</p>\n"},{"title":"My first post","url":"http://lilyalove.com/2016/05/08/My-first-post/","content":"<h1 id=\"天气晴\"><a href=\"#天气晴\" class=\"headerlink\" title=\"天气晴\"></a>天气晴</h1><ol>\n<li>吃饭</li>\n<li>睡觉</li>\n<li>打菲菲</li>\n</ol>\n"}]