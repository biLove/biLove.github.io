[{"title":"在Mac上github＋hexo搭建博客（一）","url":"http://yoursite.com/2016/05/09/搭建个人网站（一）/","content":"<p>本文是在 Mac 上 github＋hexo 搭建博客第一部分，解决的问题是将本地搭建的博客在Github上跑起来。</p>\n<h2 id=\"github-、hexo简介\"><a href=\"#github-、hexo简介\" class=\"headerlink\" title=\"github 、hexo简介\"></a>github 、hexo简介</h2><ul>\n<li>github：开源代码库以及版本控制系统，其中githubpages提供300M的免费空间，拿来做博客够用了。</li>\n<li>hexo：是一个快速、简洁且高速的静态页面发布框架，使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页</li>\n</ul>\n<p>本人搭建的各人博客采用gitHub ＋ hexo来搭建。</p>\n<h2 id=\"需要下载的软件\"><a href=\"#需要下载的软件\" class=\"headerlink\" title=\"需要下载的软件\"></a>需要下载的软件</h2><ul>\n<li><p><a href=\"http://brew.sh/\" target=\"_blank\" rel=\"external\">Homebrew</a><br>Homebrew是Mac的软件管理工具，使用起来十分方便。虽然并不是建站的必备软件，但还是可以先下载一个，事半功倍。<br>按照 <a href=\"http://brew.sh/\" target=\"_blank\" rel=\"external\">http://brew.sh/</a> 里面提示的方法一步步进行安装即可。<br>问题：我安装Homebrew的时候总是安装不成功，目测是我先安装了Xcode，但是Xcode的路径有问题，按照默认路径寻找相关的文件总是找不到，于是安装不成功。大家如果也遇到安装不成功的问题，可以仔细看一下提示，再做后续操作。</p>\n</li>\n<li><p>Xcode<br>Xcode是运行在操作系统Mac OS X上的集成开发工具（IDE），预先下载一个，免得编译的时候出现问题。可以在App Store进行下载。</p>\n</li>\n<li><p><a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">node.js</a><br>hexo的官方文档给的最佳下载方式是使用 <a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"external\">nvm</a>。<br>具体操作命令参考<a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"external\">hexo</a> 安装 node.js 即可。<br>我在这里使用的是直接下载<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">安装包</a>。<br>node.js 下载完成后 安装到电脑上就可以了。安装成功后显示出来安装路径，可以看到 安装node.js 的时候 npm 也安装了。<br>如图所示：<br><img src=\"http://upload-images.jianshu.io/upload_images/326377-5868656ecedf7e76.png?imageMogr2/auto-orient/strip%7CimageView2/2\" alt=\"node.js\"></p>\n</li>\n<li><p>安装<a href=\"https://sourceforge.net/projects/git-osx-installer/\" target=\"_blank\" rel=\"external\">git</a><br>可以使用Homebrew进行安装，也可以直接使用<a href=\"https://sourceforge.net/projects/git-osx-installer/\" target=\"_blank\" rel=\"external\">安装程序</a>。</p>\n</li>\n<li><p><a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"external\">hexo</a><br>成功安装 node.js 和 git 之后，就可以安装hexo了。</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p><strong>使用命令行装软件的时候 ，当前在哪个路径下，就会装到哪个路径下。 系统的软件除外。 hexo 和 npm 安装的时候有默认路径因此我们不用特意去创建安装文件夹。</strong><br>注意： hexo的时候可能会出现这样的错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; [Error: Cannot find module &apos;./build/Release/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br><span class=\"line\">&#123; [Error: Cannot find module &apos;./build/default/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br><span class=\"line\">&#123; [Error: Cannot find module &apos;./build/Debug/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br></pre></td></tr></table></figure>\n<p>原因是 我国防火墙网络墙的问题，导致安装的时候少装了几个库。 解决方法，换一个源重新装:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo --no-optional</span><br></pre></td></tr></table></figure>\n<p>hexo 下载完成后 运行一下 看是否安装成功</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo -v</span><br></pre></td></tr></table></figure>\n<p>hexo 安装成功后，我们开始使用 hexo 建站。</p>\n<h2 id=\"建立本地站点\"><a href=\"#建立本地站点\" class=\"headerlink\" title=\"建立本地站点\"></a>建立本地站点</h2><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init &lt;folder&gt;</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<p>新建完成后，指定文件夹的目录如下：</p>\n<p>.<br>├── _config.yml<br>├── package.json<br>├── scaffolds<br>├── source<br>|   ├── _drafts<br>|   └── _posts<br>└── themes</p>\n<p><strong>_config.yml</strong><br>网站的配置信息，您可以在此配置大部分的参数。</p>\n<p>本地站点建立成功后，可以cd 进入站点文件夹，然后 执行 hexo server 启动站点</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>站点默认端口为 <a href=\"http://0.0.0.0:4000\" target=\"_blank\" rel=\"external\">http://0.0.0.0:4000</a><br>在浏览器中 输入 <a href=\"http://0.0.0.0:4000\" target=\"_blank\" rel=\"external\">http://0.0.0.0:4000</a> 就可以看到 站点了。</p>\n<h2 id=\"github上创建GitHubPages仓库\"><a href=\"#github上创建GitHubPages仓库\" class=\"headerlink\" title=\"github上创建GitHubPages仓库\"></a>github上创建GitHubPages仓库</h2><p>git 官方参考地址: <a href=\"https://pages.github.com\" target=\"_blank\" rel=\"external\">https://pages.github.com</a></p>\n<p><em>注意:创建仓库的时候仓库名一定严格按照 git用户名.github.io 来命名</em></p>\n<h2 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h2><p>把public 文件里面的文件，推送到我们 的github仓库里。<br>注意： 不要包含 public 文件夹，只推送 文件里面的文件即可。</p>\n<p><strong>方法如下:</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>在开始之前，您必须先在 _config.yml 中修改参数，一个正确的部署配置中至少要有 type 参数，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">－ type: git</span><br></pre></td></tr></table></figure>\n<p><strong>Git</strong><br>安装 hexo-deployer-git</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>修改配置。<br>在上面提到的 _config.yml 文件中修改 deploy 的参数，包括 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: &lt;repository url&gt;</span><br><span class=\"line\">  branch: [branch]</span><br><span class=\"line\">  message: [message]</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>repo</td>\n<td>库（Repository）地址</td>\n</tr>\n<tr>\n<td>branch</td>\n<td>分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测。</td>\n</tr>\n<tr>\n<td>message</td>\n<td>自定义提交信息 (默认为 Site updated: &lbrace;&lbrace; now(‘YYYY-MM-DD HH:mm:ss’) &rbrace;&rbrace;)</td>\n</tr>\n</tbody>\n</table>\n<p>配置完之后就可以用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>来进行github的同步了。<br>同步完之后，在浏览器中输入：<a href=\"http://bilove.github.io/\" target=\"_blank\" rel=\"external\">http://bilove.github.io/</a> 就可以看到搭建的静态网站了。</p>\n<h2 id=\"使用github保存源码\"><a href=\"#使用github保存源码\" class=\"headerlink\" title=\"使用github保存源码\"></a>使用github保存源码</h2><ul>\n<li>在github中建立一个新的repository，我将其命名为 mysite.src ，意味这里保存的是我的个人博客的源码。 </li>\n<li>进入hexo所建立的本地站点对应的文件夹，源码所包含的文件上面的文章中有描述</li>\n<li>使用git进行源码上传</li>\n<li>git status ：查看状态</li>\n<li>git init ： 首次上传时进行初始化</li>\n<li>git add 文件／文件夹 ： 添加需要上传的文件</li>\n<li>git commit “更新备注”</li>\n<li>git log 查看日志</li>\n<li>git push 放到git上</li>\n<li>git pull 把远程修改合并到本地</li>\n</ul>\n<h2 id=\"新建一篇文章\"><a href=\"#新建一篇文章\" class=\"headerlink\" title=\"新建一篇文章\"></a>新建一篇文章</h2><p>你可以执行下列命令来创建一篇新文章。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>接着用MWeb打开进行编辑即可。<br>Markdown的语法在网上进行学习即可。</p>\n<h2 id=\"发布写完的文章\"><a href=\"#发布写完的文章\" class=\"headerlink\" title=\"发布写完的文章\"></a>发布写完的文章</h2><p><strong>生成文件</strong><br>使用 Hexo 生成静态文件快速而且简单。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p><strong>监视文件变动</strong><br>Hexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate --watch</span><br></pre></td></tr></table></figure>\n<p><strong>完成后部署</strong><br>您可执行下列的其中一个命令，让 Hexo 在生成完毕后自动部署网站，两个命令的作用是相同的。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate --deploy</span><br><span class=\"line\">$ hexo deploy --generate</span><br></pre></td></tr></table></figure>\n"},{"title":"My first post","url":"http://yoursite.com/2016/05/08/My-first-post/","content":"<h1 id=\"天气晴\"><a href=\"#天气晴\" class=\"headerlink\" title=\"天气晴\"></a>天气晴</h1><ol>\n<li>吃饭</li>\n<li>睡觉</li>\n<li>打菲菲</li>\n</ol>\n"},{"title":"Hello World","url":"http://yoursite.com/2016/05/07/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n"}]